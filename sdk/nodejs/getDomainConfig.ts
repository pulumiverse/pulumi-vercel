// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides domain configuration information for a Vercel project.
 *
 * This data source returns configuration details for a domain associated with a specific project,
 * including recommended CNAME and IPv4 values.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * import * as vercel from "@pulumi/vercel";
 * import * as vercel from "@pulumiverse/vercel";
 *
 * const myAwesomeProject = new vercel.Project("my_awesome_project", {name: "my-awesome-project"});
 * // 
 * // "vercel_domain_config" Usage
 * // 
 * const exampleCom = vercel.getDomainConfigOutput({
 *     domain: "example.com",
 *     projectIdOrName: myAwesomeProject.id,
 * });
 * const wwwExampleCom = vercel.getDomainConfigOutput({
 *     domain: "www.example.com",
 *     projectIdOrName: myAwesomeProject.id,
 * });
 * //
 * // External DNS provider example
 * // 
 * const exampleComA = new aws.index.Route53Record("example_com_a", {
 *     zoneId: "...zone_id_from_somewhere...",
 *     name: exampleCom.domain,
 *     type: "A",
 *     ttl: 300,
 *     records: exampleCom.recommendedIpv4s,
 * });
 * const wwwExampleComCname = new aws.index.Route53Record("www_example_com_cname", {
 *     zoneId: "...zone_id_from_somewhere...",
 *     name: wwwExampleCom.domain,
 *     type: "CNAME",
 *     ttl: 300,
 *     records: [wwwExampleCom.recommendedCname],
 * });
 * ```
 */
export function getDomainConfig(args: GetDomainConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetDomainConfigResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vercel:index/getDomainConfig:getDomainConfig", {
        "domain": args.domain,
        "projectIdOrName": args.projectIdOrName,
        "teamId": args.teamId,
    }, opts);
}

/**
 * A collection of arguments for invoking getDomainConfig.
 */
export interface GetDomainConfigArgs {
    /**
     * The domain name to get configuration for.
     */
    domain: string;
    /**
     * The project ID or name associated with the domain.
     */
    projectIdOrName: string;
    /**
     * The ID of the team the domain config exists under. Required when configuring a team resource if a default team has not been set in the provider.
     */
    teamId?: string;
}

/**
 * A collection of values returned by getDomainConfig.
 */
export interface GetDomainConfigResult {
    /**
     * The domain name to get configuration for.
     */
    readonly domain: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The project ID or name associated with the domain.
     */
    readonly projectIdOrName: string;
    /**
     * The recommended CNAME value for the domain.
     */
    readonly recommendedCname: string;
    /**
     * The recommended IPv4 values for the domain.
     */
    readonly recommendedIpv4s: string[];
    /**
     * The ID of the team the domain config exists under. Required when configuring a team resource if a default team has not been set in the provider.
     */
    readonly teamId: string;
}
/**
 * Provides domain configuration information for a Vercel project.
 *
 * This data source returns configuration details for a domain associated with a specific project,
 * including recommended CNAME and IPv4 values.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * import * as vercel from "@pulumi/vercel";
 * import * as vercel from "@pulumiverse/vercel";
 *
 * const myAwesomeProject = new vercel.Project("my_awesome_project", {name: "my-awesome-project"});
 * // 
 * // "vercel_domain_config" Usage
 * // 
 * const exampleCom = vercel.getDomainConfigOutput({
 *     domain: "example.com",
 *     projectIdOrName: myAwesomeProject.id,
 * });
 * const wwwExampleCom = vercel.getDomainConfigOutput({
 *     domain: "www.example.com",
 *     projectIdOrName: myAwesomeProject.id,
 * });
 * //
 * // External DNS provider example
 * // 
 * const exampleComA = new aws.index.Route53Record("example_com_a", {
 *     zoneId: "...zone_id_from_somewhere...",
 *     name: exampleCom.domain,
 *     type: "A",
 *     ttl: 300,
 *     records: exampleCom.recommendedIpv4s,
 * });
 * const wwwExampleComCname = new aws.index.Route53Record("www_example_com_cname", {
 *     zoneId: "...zone_id_from_somewhere...",
 *     name: wwwExampleCom.domain,
 *     type: "CNAME",
 *     ttl: 300,
 *     records: [wwwExampleCom.recommendedCname],
 * });
 * ```
 */
export function getDomainConfigOutput(args: GetDomainConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDomainConfigResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vercel:index/getDomainConfig:getDomainConfig", {
        "domain": args.domain,
        "projectIdOrName": args.projectIdOrName,
        "teamId": args.teamId,
    }, opts);
}

/**
 * A collection of arguments for invoking getDomainConfig.
 */
export interface GetDomainConfigOutputArgs {
    /**
     * The domain name to get configuration for.
     */
    domain: pulumi.Input<string>;
    /**
     * The project ID or name associated with the domain.
     */
    projectIdOrName: pulumi.Input<string>;
    /**
     * The ID of the team the domain config exists under. Required when configuring a team resource if a default team has not been set in the provider.
     */
    teamId?: pulumi.Input<string>;
}
