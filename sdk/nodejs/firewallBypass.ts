// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a Firewall Bypass Rule
 *
 * Firewall Bypass Rules configure sets of domains and ip address to prevent bypass Vercel's system mitigations for.  The hosts used in a bypass rule must be a production domain assigned to the associated project.  Requests that bypass system mitigations will incur usage.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vercel from "@pulumiverse/vercel";
 *
 * const example = new vercel.Project("example", {name: "firewall-bypass-example"});
 * const bypassTargeted = new vercel.FirewallBypass("bypass_targeted", {
 *     projectId: example.id,
 *     sourceIp: "5.6.7.8",
 *     domain: "my-production-domain.com",
 * });
 * const bypassCidr = new vercel.FirewallBypass("bypass_cidr", {
 *     projectId: example.id,
 *     sourceIp: "52.33.44.0/24",
 *     domain: "my-production-domain.com",
 * });
 * const bypassAll = new vercel.FirewallBypass("bypass_all", {
 *     projectId: example.id,
 *     sourceIp: "52.33.44.0/24",
 *     domain: "*",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import vercel:index/firewallBypass:FirewallBypass example team_xxxxxxxxxxxxxxxxxxxxxxxx/prj_xxxxxxxxxxxxxxxxxxxxxxxxxxxx#mybypasshost.com#3.4.5.0/24
 * ```
 *
 * ```sh
 * $ pulumi import vercel:index/firewallBypass:FirewallBypass example team_xxxxxxxxxxxxxxxxxxxxxxxx/prj_xxxxxxxxxxxxxxxxxxxxxxxxxxxx#3.4.5.0/24
 * ```
 */
export class FirewallBypass extends pulumi.CustomResource {
    /**
     * Get an existing FirewallBypass resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FirewallBypassState, opts?: pulumi.CustomResourceOptions): FirewallBypass {
        return new FirewallBypass(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vercel:index/firewallBypass:FirewallBypass';

    /**
     * Returns true if the given object is an instance of FirewallBypass.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FirewallBypass {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FirewallBypass.__pulumiType;
    }

    /**
     * The domain to configure the bypass rule for.
     */
    public readonly domain!: pulumi.Output<string>;
    /**
     * The ID of the Project to assign the bypass rule to
     */
    public readonly projectId!: pulumi.Output<string>;
    /**
     * The source IP address to configure the bypass rule for.
     */
    public readonly sourceIp!: pulumi.Output<string>;
    /**
     * The ID of the team the Project exists under. Required when configuring a team resource if a default team has not been set in the provider.
     */
    public readonly teamId!: pulumi.Output<string>;

    /**
     * Create a FirewallBypass resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FirewallBypassArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FirewallBypassArgs | FirewallBypassState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FirewallBypassState | undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["sourceIp"] = state ? state.sourceIp : undefined;
            resourceInputs["teamId"] = state ? state.teamId : undefined;
        } else {
            const args = argsOrState as FirewallBypassArgs | undefined;
            if ((!args || args.domain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domain'");
            }
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            if ((!args || args.sourceIp === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourceIp'");
            }
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["sourceIp"] = args ? args.sourceIp : undefined;
            resourceInputs["teamId"] = args ? args.teamId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FirewallBypass.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FirewallBypass resources.
 */
export interface FirewallBypassState {
    /**
     * The domain to configure the bypass rule for.
     */
    domain?: pulumi.Input<string>;
    /**
     * The ID of the Project to assign the bypass rule to
     */
    projectId?: pulumi.Input<string>;
    /**
     * The source IP address to configure the bypass rule for.
     */
    sourceIp?: pulumi.Input<string>;
    /**
     * The ID of the team the Project exists under. Required when configuring a team resource if a default team has not been set in the provider.
     */
    teamId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FirewallBypass resource.
 */
export interface FirewallBypassArgs {
    /**
     * The domain to configure the bypass rule for.
     */
    domain: pulumi.Input<string>;
    /**
     * The ID of the Project to assign the bypass rule to
     */
    projectId: pulumi.Input<string>;
    /**
     * The source IP address to configure the bypass rule for.
     */
    sourceIp: pulumi.Input<string>;
    /**
     * The ID of the team the Project exists under. Required when configuring a team resource if a default team has not been set in the provider.
     */
    teamId?: pulumi.Input<string>;
}
