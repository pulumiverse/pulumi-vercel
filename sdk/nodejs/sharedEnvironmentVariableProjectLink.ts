// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Links a project to a Shared Environment Variable.
 *
 * > This resource is intended to be used alongside a vercel.SharedEnvironmentVariable Data Source, not the Resource. The Resource also defines which projects to link to the shared environment variable, and using both vercel.SharedEnvironmentVariable and vercel.SharedEnvironmentVariableProjectLink together results in undefined behavior.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vercel from "@pulumi/vercel";
 * import * as vercel from "@pulumiverse/vercel";
 *
 * const exampleSharedEnvironmentVariable = vercel.getSharedEnvironmentVariable({
 *     key: "EXAMPLE_ENV_VAR",
 *     targets: [
 *         "production",
 *         "preview",
 *     ],
 * });
 * const exampleProject = new vercel.Project("exampleProject", {});
 * const exampleSharedEnvironmentVariableProjectLink = new vercel.SharedEnvironmentVariableProjectLink("exampleSharedEnvironmentVariableProjectLink", {
 *     sharedEnvironmentVariableId: exampleSharedEnvironmentVariable.then(exampleSharedEnvironmentVariable => exampleSharedEnvironmentVariable.id),
 *     projectId: exampleProject.id,
 * });
 * ```
 */
export class SharedEnvironmentVariableProjectLink extends pulumi.CustomResource {
    /**
     * Get an existing SharedEnvironmentVariableProjectLink resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SharedEnvironmentVariableProjectLinkState, opts?: pulumi.CustomResourceOptions): SharedEnvironmentVariableProjectLink {
        return new SharedEnvironmentVariableProjectLink(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vercel:index/sharedEnvironmentVariableProjectLink:SharedEnvironmentVariableProjectLink';

    /**
     * Returns true if the given object is an instance of SharedEnvironmentVariableProjectLink.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SharedEnvironmentVariableProjectLink {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SharedEnvironmentVariableProjectLink.__pulumiType;
    }

    /**
     * The ID of the Vercel project.
     */
    public readonly projectId!: pulumi.Output<string>;
    /**
     * The ID of the shared environment variable.
     */
    public readonly sharedEnvironmentVariableId!: pulumi.Output<string>;
    /**
     * The ID of the Vercel team. Required when configuring a team resource if a default team has not been set in the provider.
     */
    public readonly teamId!: pulumi.Output<string>;

    /**
     * Create a SharedEnvironmentVariableProjectLink resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SharedEnvironmentVariableProjectLinkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SharedEnvironmentVariableProjectLinkArgs | SharedEnvironmentVariableProjectLinkState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SharedEnvironmentVariableProjectLinkState | undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["sharedEnvironmentVariableId"] = state ? state.sharedEnvironmentVariableId : undefined;
            resourceInputs["teamId"] = state ? state.teamId : undefined;
        } else {
            const args = argsOrState as SharedEnvironmentVariableProjectLinkArgs | undefined;
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            if ((!args || args.sharedEnvironmentVariableId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sharedEnvironmentVariableId'");
            }
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["sharedEnvironmentVariableId"] = args ? args.sharedEnvironmentVariableId : undefined;
            resourceInputs["teamId"] = args ? args.teamId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SharedEnvironmentVariableProjectLink.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SharedEnvironmentVariableProjectLink resources.
 */
export interface SharedEnvironmentVariableProjectLinkState {
    /**
     * The ID of the Vercel project.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The ID of the shared environment variable.
     */
    sharedEnvironmentVariableId?: pulumi.Input<string>;
    /**
     * The ID of the Vercel team. Required when configuring a team resource if a default team has not been set in the provider.
     */
    teamId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SharedEnvironmentVariableProjectLink resource.
 */
export interface SharedEnvironmentVariableProjectLinkArgs {
    /**
     * The ID of the Vercel project.
     */
    projectId: pulumi.Input<string>;
    /**
     * The ID of the shared environment variable.
     */
    sharedEnvironmentVariableId: pulumi.Input<string>;
    /**
     * The ID of the Vercel team. Required when configuring a team resource if a default team has not been set in the provider.
     */
    teamId?: pulumi.Input<string>;
}
