// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Data source for a Vercel project rolling release configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vercel from "@pulumi/vercel";
 *
 * const example = vercel.getProject({
 *     name: "example-project",
 * });
 * const exampleGetProjectRollingRelease = example.then(example => vercel.getProjectRollingRelease({
 *     projectId: example.id,
 * }));
 * ```
 */
export function getProjectRollingRelease(args: GetProjectRollingReleaseArgs, opts?: pulumi.InvokeOptions): Promise<GetProjectRollingReleaseResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vercel:index/getProjectRollingRelease:getProjectRollingRelease", {
        "projectId": args.projectId,
        "teamId": args.teamId,
    }, opts);
}

/**
 * A collection of arguments for invoking getProjectRollingRelease.
 */
export interface GetProjectRollingReleaseArgs {
    /**
     * The ID of the project.
     */
    projectId: string;
    /**
     * The ID of the Vercel team.
     */
    teamId?: string;
}

/**
 * A collection of values returned by getProjectRollingRelease.
 */
export interface GetProjectRollingReleaseResult {
    /**
     * The type of advancement for the rolling release. Either 'automatic' or 'manual-approval'.
     */
    readonly advancementType: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The ID of the project.
     */
    readonly projectId: string;
    /**
     * The stages for the rolling release configuration.
     */
    readonly stages: outputs.GetProjectRollingReleaseStage[];
    /**
     * The ID of the Vercel team.
     */
    readonly teamId: string;
}
/**
 * Data source for a Vercel project rolling release configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vercel from "@pulumi/vercel";
 *
 * const example = vercel.getProject({
 *     name: "example-project",
 * });
 * const exampleGetProjectRollingRelease = example.then(example => vercel.getProjectRollingRelease({
 *     projectId: example.id,
 * }));
 * ```
 */
export function getProjectRollingReleaseOutput(args: GetProjectRollingReleaseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProjectRollingReleaseResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vercel:index/getProjectRollingRelease:getProjectRollingRelease", {
        "projectId": args.projectId,
        "teamId": args.teamId,
    }, opts);
}

/**
 * A collection of arguments for invoking getProjectRollingRelease.
 */
export interface GetProjectRollingReleaseOutputArgs {
    /**
     * The ID of the project.
     */
    projectId: pulumi.Input<string>;
    /**
     * The ID of the Vercel team.
     */
    teamId?: pulumi.Input<string>;
}
