// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Vercel
{
    public static class GetEdgeConfigItem
    {
        /// <summary>
        /// Provides the value of an existing Edge Config Item.
        /// 
        /// An Edge Config is a global data store that enables experimentation with feature flags, A/B testing, critical redirects, and more.
        /// 
        /// An Edge Config Item is a value within an Edge Config.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vercel = Pulumi.Vercel;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Vercel.GetEdgeConfig.Invoke(new()
        ///     {
        ///         Id = "ecfg_xxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        ///     });
        /// 
        ///     // Read a string item
        ///     var stringItem = Vercel.GetEdgeConfigItem.Invoke(new()
        ///     {
        ///         Id = example.Apply(getEdgeConfigResult =&gt; getEdgeConfigResult.Id),
        ///         Key = "foobar",
        ///     });
        /// 
        ///     // Read a JSON item
        ///     var jsonItem = Vercel.GetEdgeConfigItem.Invoke(new()
        ///     {
        ///         Id = example.Apply(getEdgeConfigResult =&gt; getEdgeConfigResult.Id),
        ///         Key = "flags",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetEdgeConfigItemResult> InvokeAsync(GetEdgeConfigItemArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEdgeConfigItemResult>("vercel:index/getEdgeConfigItem:getEdgeConfigItem", args ?? new GetEdgeConfigItemArgs(), options.WithDefaults());

        /// <summary>
        /// Provides the value of an existing Edge Config Item.
        /// 
        /// An Edge Config is a global data store that enables experimentation with feature flags, A/B testing, critical redirects, and more.
        /// 
        /// An Edge Config Item is a value within an Edge Config.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vercel = Pulumi.Vercel;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Vercel.GetEdgeConfig.Invoke(new()
        ///     {
        ///         Id = "ecfg_xxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        ///     });
        /// 
        ///     // Read a string item
        ///     var stringItem = Vercel.GetEdgeConfigItem.Invoke(new()
        ///     {
        ///         Id = example.Apply(getEdgeConfigResult =&gt; getEdgeConfigResult.Id),
        ///         Key = "foobar",
        ///     });
        /// 
        ///     // Read a JSON item
        ///     var jsonItem = Vercel.GetEdgeConfigItem.Invoke(new()
        ///     {
        ///         Id = example.Apply(getEdgeConfigResult =&gt; getEdgeConfigResult.Id),
        ///         Key = "flags",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetEdgeConfigItemResult> Invoke(GetEdgeConfigItemInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEdgeConfigItemResult>("vercel:index/getEdgeConfigItem:getEdgeConfigItem", args ?? new GetEdgeConfigItemInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEdgeConfigItemArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Edge Config that the item should exist under.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        /// <summary>
        /// The name of the key you want to retrieve within your Edge Config.
        /// </summary>
        [Input("key", required: true)]
        public string Key { get; set; } = null!;

        /// <summary>
        /// The ID of the team the Edge Config should exist under. Required when configuring a team resource if a default team has not been set in the provider.
        /// </summary>
        [Input("teamId")]
        public string? TeamId { get; set; }

        public GetEdgeConfigItemArgs()
        {
        }
        public static new GetEdgeConfigItemArgs Empty => new GetEdgeConfigItemArgs();
    }

    public sealed class GetEdgeConfigItemInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Edge Config that the item should exist under.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// The name of the key you want to retrieve within your Edge Config.
        /// </summary>
        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        /// <summary>
        /// The ID of the team the Edge Config should exist under. Required when configuring a team resource if a default team has not been set in the provider.
        /// </summary>
        [Input("teamId")]
        public Input<string>? TeamId { get; set; }

        public GetEdgeConfigItemInvokeArgs()
        {
        }
        public static new GetEdgeConfigItemInvokeArgs Empty => new GetEdgeConfigItemInvokeArgs();
    }


    [OutputType]
    public sealed class GetEdgeConfigItemResult
    {
        /// <summary>
        /// The ID of the Edge Config that the item should exist under.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the key you want to retrieve within your Edge Config.
        /// </summary>
        public readonly string Key;
        /// <summary>
        /// The ID of the team the Edge Config should exist under. Required when configuring a team resource if a default team has not been set in the provider.
        /// </summary>
        public readonly string TeamId;
        /// <summary>
        /// The value assigned to the key (only set for string values).
        /// </summary>
        public readonly string Value;
        /// <summary>
        /// Structured JSON value (object/array/number/bool/null) assigned to the key.
        /// </summary>
        public readonly object ValueJson;

        [OutputConstructor]
        private GetEdgeConfigItemResult(
            string id,

            string key,

            string teamId,

            string value,

            object valueJson)
        {
            Id = id;
            Key = key;
            TeamId = teamId;
            Value = value;
            ValueJson = valueJson;
        }
    }
}
