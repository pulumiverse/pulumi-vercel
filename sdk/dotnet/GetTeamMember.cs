// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Vercel
{
    public static class GetTeamMember
    {
        /// <summary>
        /// Provider a datasource for managing a team member.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vercel = Pulumi.Vercel;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Vercel.GetTeamMember.Invoke(new()
        ///     {
        ///         UserId = "uuuuuuuuuuuuuuuuuuuuuuuuuu",
        ///         TeamId = "team_xxxxxxxxxxxxxxxxxxxxxxxx",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetTeamMemberResult> InvokeAsync(GetTeamMemberArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTeamMemberResult>("vercel:index/getTeamMember:getTeamMember", args ?? new GetTeamMemberArgs(), options.WithDefaults());

        /// <summary>
        /// Provider a datasource for managing a team member.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vercel = Pulumi.Vercel;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Vercel.GetTeamMember.Invoke(new()
        ///     {
        ///         UserId = "uuuuuuuuuuuuuuuuuuuuuuuuuu",
        ///         TeamId = "team_xxxxxxxxxxxxxxxxxxxxxxxx",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTeamMemberResult> Invoke(GetTeamMemberInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTeamMemberResult>("vercel:index/getTeamMember:getTeamMember", args ?? new GetTeamMemberInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTeamMemberArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the existing Vercel Team.
        /// </summary>
        [Input("teamId", required: true)]
        public string TeamId { get; set; } = null!;

        /// <summary>
        /// The ID of the existing Vercel Team Member.
        /// </summary>
        [Input("userId", required: true)]
        public string UserId { get; set; } = null!;

        public GetTeamMemberArgs()
        {
        }
        public static new GetTeamMemberArgs Empty => new GetTeamMemberArgs();
    }

    public sealed class GetTeamMemberInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the existing Vercel Team.
        /// </summary>
        [Input("teamId", required: true)]
        public Input<string> TeamId { get; set; } = null!;

        /// <summary>
        /// The ID of the existing Vercel Team Member.
        /// </summary>
        [Input("userId", required: true)]
        public Input<string> UserId { get; set; } = null!;

        public GetTeamMemberInvokeArgs()
        {
        }
        public static new GetTeamMemberInvokeArgs Empty => new GetTeamMemberInvokeArgs();
    }


    [OutputType]
    public sealed class GetTeamMemberResult
    {
        /// <summary>
        /// If access groups are enabled on the team, and the user is a CONTRIBUTOR, `projects`, `access_groups` or both must be specified. A set of access groups IDs that the user should be granted access to.
        /// </summary>
        public readonly ImmutableArray<string> AccessGroups;
        /// <summary>
        /// The ID of this resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// If access groups are enabled on the team, and the user is a CONTRIBUTOR, `projects`, `access_groups` or both must be specified. A set of projects that the user should be granted access to, along with their role in each project.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTeamMemberProjectResult> Projects;
        /// <summary>
        /// The role that the user should have in the project. One of 'MEMBER', 'OWNER', 'VIEWER', 'DEVELOPER', 'BILLING' or 'CONTRIBUTOR'. Depending on your Team's plan, some of these roles may be unavailable.
        /// </summary>
        public readonly string Role;
        /// <summary>
        /// The ID of the existing Vercel Team.
        /// </summary>
        public readonly string TeamId;
        /// <summary>
        /// The ID of the existing Vercel Team Member.
        /// </summary>
        public readonly string UserId;

        [OutputConstructor]
        private GetTeamMemberResult(
            ImmutableArray<string> accessGroups,

            string id,

            ImmutableArray<Outputs.GetTeamMemberProjectResult> projects,

            string role,

            string teamId,

            string userId)
        {
            AccessGroups = accessGroups;
            Id = id;
            Projects = projects;
            Role = role;
            TeamId = teamId;
            UserId = userId;
        }
    }
}
