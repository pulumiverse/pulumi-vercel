// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Vercel
{
    /// <summary>
    /// Resource for a Vercel project rolling release configuration.
    /// </summary>
    [VercelResourceType("vercel:index/projectRollingRelease:ProjectRollingRelease")]
    public partial class ProjectRollingRelease : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The type of advancement for the rolling release. Must be either 'automatic' or 'manual-approval'.
        /// </summary>
        [Output("advancementType")]
        public Output<string> AdvancementType { get; private set; } = null!;

        /// <summary>
        /// The ID of the project.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// The stages for the rolling release configuration. The last stage must have target_percentage = 100.
        /// </summary>
        [Output("stages")]
        public Output<ImmutableArray<Outputs.ProjectRollingReleaseStage>> Stages { get; private set; } = null!;

        /// <summary>
        /// The ID of the Vercel team.
        /// </summary>
        [Output("teamId")]
        public Output<string> TeamId { get; private set; } = null!;


        /// <summary>
        /// Create a ProjectRollingRelease resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ProjectRollingRelease(string name, ProjectRollingReleaseArgs args, CustomResourceOptions? options = null)
            : base("vercel:index/projectRollingRelease:ProjectRollingRelease", name, args ?? new ProjectRollingReleaseArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ProjectRollingRelease(string name, Input<string> id, ProjectRollingReleaseState? state = null, CustomResourceOptions? options = null)
            : base("vercel:index/projectRollingRelease:ProjectRollingRelease", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ProjectRollingRelease resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ProjectRollingRelease Get(string name, Input<string> id, ProjectRollingReleaseState? state = null, CustomResourceOptions? options = null)
        {
            return new ProjectRollingRelease(name, id, state, options);
        }
    }

    public sealed class ProjectRollingReleaseArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The type of advancement for the rolling release. Must be either 'automatic' or 'manual-approval'.
        /// </summary>
        [Input("advancementType", required: true)]
        public Input<string> AdvancementType { get; set; } = null!;

        /// <summary>
        /// The ID of the project.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        [Input("stages", required: true)]
        private InputList<Inputs.ProjectRollingReleaseStageArgs>? _stages;

        /// <summary>
        /// The stages for the rolling release configuration. The last stage must have target_percentage = 100.
        /// </summary>
        public InputList<Inputs.ProjectRollingReleaseStageArgs> Stages
        {
            get => _stages ?? (_stages = new InputList<Inputs.ProjectRollingReleaseStageArgs>());
            set => _stages = value;
        }

        /// <summary>
        /// The ID of the Vercel team.
        /// </summary>
        [Input("teamId")]
        public Input<string>? TeamId { get; set; }

        public ProjectRollingReleaseArgs()
        {
        }
        public static new ProjectRollingReleaseArgs Empty => new ProjectRollingReleaseArgs();
    }

    public sealed class ProjectRollingReleaseState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The type of advancement for the rolling release. Must be either 'automatic' or 'manual-approval'.
        /// </summary>
        [Input("advancementType")]
        public Input<string>? AdvancementType { get; set; }

        /// <summary>
        /// The ID of the project.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        [Input("stages")]
        private InputList<Inputs.ProjectRollingReleaseStageGetArgs>? _stages;

        /// <summary>
        /// The stages for the rolling release configuration. The last stage must have target_percentage = 100.
        /// </summary>
        public InputList<Inputs.ProjectRollingReleaseStageGetArgs> Stages
        {
            get => _stages ?? (_stages = new InputList<Inputs.ProjectRollingReleaseStageGetArgs>());
            set => _stages = value;
        }

        /// <summary>
        /// The ID of the Vercel team.
        /// </summary>
        [Input("teamId")]
        public Input<string>? TeamId { get; set; }

        public ProjectRollingReleaseState()
        {
        }
        public static new ProjectRollingReleaseState Empty => new ProjectRollingReleaseState();
    }
}
