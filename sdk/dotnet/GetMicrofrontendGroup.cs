// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Vercel
{
    public static class GetMicrofrontendGroup
    {
        /// <summary>
        /// Provides information about an existing Microfrontend Group.
        /// 
        /// A Microfrontend Group is a definition of a microfrontend belonging to a Vercel Team.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vercel = Pulumi.Vercel;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Vercel.GetMicrofrontendGroup.Invoke(new()
        ///     {
        ///         Id = "mfe_xxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetMicrofrontendGroupResult> InvokeAsync(GetMicrofrontendGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMicrofrontendGroupResult>("vercel:index/getMicrofrontendGroup:getMicrofrontendGroup", args ?? new GetMicrofrontendGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about an existing Microfrontend Group.
        /// 
        /// A Microfrontend Group is a definition of a microfrontend belonging to a Vercel Team.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vercel = Pulumi.Vercel;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Vercel.GetMicrofrontendGroup.Invoke(new()
        ///     {
        ///         Id = "mfe_xxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetMicrofrontendGroupResult> Invoke(GetMicrofrontendGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMicrofrontendGroupResult>("vercel:index/getMicrofrontendGroup:getMicrofrontendGroup", args ?? new GetMicrofrontendGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMicrofrontendGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique identifier for the group of microfrontends. Example: mfe_12HKQaOmR5t5Uy6vdcQsNIiZgHGB
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        /// <summary>
        /// The team ID to add the project to. Required when configuring a team resource if a default team has not been set in the provider.
        /// </summary>
        [Input("teamId")]
        public string? TeamId { get; set; }

        public GetMicrofrontendGroupArgs()
        {
        }
        public static new GetMicrofrontendGroupArgs Empty => new GetMicrofrontendGroupArgs();
    }

    public sealed class GetMicrofrontendGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique identifier for the group of microfrontends. Example: mfe_12HKQaOmR5t5Uy6vdcQsNIiZgHGB
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// The team ID to add the project to. Required when configuring a team resource if a default team has not been set in the provider.
        /// </summary>
        [Input("teamId")]
        public Input<string>? TeamId { get; set; }

        public GetMicrofrontendGroupInvokeArgs()
        {
        }
        public static new GetMicrofrontendGroupInvokeArgs Empty => new GetMicrofrontendGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetMicrofrontendGroupResult
    {
        /// <summary>
        /// The default app for the project. Used as the entry point for the microfrontend.
        /// </summary>
        public readonly Outputs.GetMicrofrontendGroupDefaultAppResult DefaultApp;
        /// <summary>
        /// A unique identifier for the group of microfrontends. Example: mfe_12HKQaOmR5t5Uy6vdcQsNIiZgHGB
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A human readable name for the microfrontends group.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// A slugified version of the name.
        /// </summary>
        public readonly string Slug;
        /// <summary>
        /// The team ID to add the project to. Required when configuring a team resource if a default team has not been set in the provider.
        /// </summary>
        public readonly string TeamId;

        [OutputConstructor]
        private GetMicrofrontendGroupResult(
            Outputs.GetMicrofrontendGroupDefaultAppResult defaultApp,

            string id,

            string name,

            string slug,

            string teamId)
        {
            DefaultApp = defaultApp;
            Id = id;
            Name = name;
            Slug = slug;
            TeamId = teamId;
        }
    }
}
