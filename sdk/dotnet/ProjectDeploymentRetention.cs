// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Vercel
{
    /// <summary>
    /// Provides a Project Deployment Retention resource.
    /// 
    /// A Project Deployment Retention resource defines an Deployment Retention on a Vercel Project.
    /// 
    /// For more detailed information, please see the [Vercel documentation](https://vercel.com/docs/security/deployment-retention).
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Vercel = Pulumiverse.Vercel;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Vercel.Project("example", new()
    ///     {
    ///         GitRepository = new Vercel.Inputs.ProjectGitRepositoryArgs
    ///         {
    ///             Type = "github",
    ///             Repo = "vercel/some-repo",
    ///         },
    ///     });
    /// 
    ///     // An unlimited deployment retention policy that will be created
    ///     // for this project for all deployments.
    ///     var exampleUnlimited = new Vercel.ProjectDeploymentRetention("exampleUnlimited", new()
    ///     {
    ///         ProjectId = example.Id,
    ///         TeamId = example.TeamId,
    ///         ExpirationPreview = "unlimited",
    ///         ExpirationProduction = "unlimited",
    ///         ExpirationCanceled = "unlimited",
    ///         ExpirationErrored = "unlimited",
    ///     });
    /// 
    ///     // A customized deployment retention policy that will be created
    ///     // for this project for all deployments.
    ///     var exampleCustomized = new Vercel.ProjectDeploymentRetention("exampleCustomized", new()
    ///     {
    ///         ProjectId = example.Id,
    ///         TeamId = example.TeamId,
    ///         ExpirationPreview = "3m",
    ///         ExpirationProduction = "1y",
    ///         ExpirationCanceled = "1m",
    ///         ExpirationErrored = "2m",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// You can import via the team_id and project_id.
    /// 
    /// - team_id can be found in the team `settings` tab in the Vercel UI.
    /// 
    /// - project_id can be found in the project `settings` tab in the Vercel UI.
    /// 
    /// ```sh
    /// $ pulumi import vercel:index/projectDeploymentRetention:ProjectDeploymentRetention example team_xxxxxxxxxxxxxxxxxxxxxxxx/prj_xxxxxxxxxxxxxxxxxxxxxxxxxxxx
    /// ```
    /// </summary>
    [VercelResourceType("vercel:index/projectDeploymentRetention:ProjectDeploymentRetention")]
    public partial class ProjectDeploymentRetention : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The retention period for canceled deployments. Should be one of '1m', '2m', '3m', '6m', '1y', 'unlimited'.
        /// </summary>
        [Output("expirationCanceled")]
        public Output<string> ExpirationCanceled { get; private set; } = null!;

        /// <summary>
        /// The retention period for errored deployments. Should be one of '1m', '2m', '3m', '6m', '1y', 'unlimited'.
        /// </summary>
        [Output("expirationErrored")]
        public Output<string> ExpirationErrored { get; private set; } = null!;

        /// <summary>
        /// The retention period for preview deployments. Should be one of '1m', '2m', '3m', '6m', '1y', 'unlimited'.
        /// </summary>
        [Output("expirationPreview")]
        public Output<string> ExpirationPreview { get; private set; } = null!;

        /// <summary>
        /// The retention period for production deployments. Should be one of '1m', '2m', '3m', '6m', '1y', 'unlimited'.
        /// </summary>
        [Output("expirationProduction")]
        public Output<string> ExpirationProduction { get; private set; } = null!;

        /// <summary>
        /// The ID of the Project for the retention policy
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// The ID of the Vercel team.
        /// </summary>
        [Output("teamId")]
        public Output<string> TeamId { get; private set; } = null!;


        /// <summary>
        /// Create a ProjectDeploymentRetention resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ProjectDeploymentRetention(string name, ProjectDeploymentRetentionArgs args, CustomResourceOptions? options = null)
            : base("vercel:index/projectDeploymentRetention:ProjectDeploymentRetention", name, args ?? new ProjectDeploymentRetentionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ProjectDeploymentRetention(string name, Input<string> id, ProjectDeploymentRetentionState? state = null, CustomResourceOptions? options = null)
            : base("vercel:index/projectDeploymentRetention:ProjectDeploymentRetention", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ProjectDeploymentRetention resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ProjectDeploymentRetention Get(string name, Input<string> id, ProjectDeploymentRetentionState? state = null, CustomResourceOptions? options = null)
        {
            return new ProjectDeploymentRetention(name, id, state, options);
        }
    }

    public sealed class ProjectDeploymentRetentionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The retention period for canceled deployments. Should be one of '1m', '2m', '3m', '6m', '1y', 'unlimited'.
        /// </summary>
        [Input("expirationCanceled")]
        public Input<string>? ExpirationCanceled { get; set; }

        /// <summary>
        /// The retention period for errored deployments. Should be one of '1m', '2m', '3m', '6m', '1y', 'unlimited'.
        /// </summary>
        [Input("expirationErrored")]
        public Input<string>? ExpirationErrored { get; set; }

        /// <summary>
        /// The retention period for preview deployments. Should be one of '1m', '2m', '3m', '6m', '1y', 'unlimited'.
        /// </summary>
        [Input("expirationPreview")]
        public Input<string>? ExpirationPreview { get; set; }

        /// <summary>
        /// The retention period for production deployments. Should be one of '1m', '2m', '3m', '6m', '1y', 'unlimited'.
        /// </summary>
        [Input("expirationProduction")]
        public Input<string>? ExpirationProduction { get; set; }

        /// <summary>
        /// The ID of the Project for the retention policy
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// The ID of the Vercel team.
        /// </summary>
        [Input("teamId")]
        public Input<string>? TeamId { get; set; }

        public ProjectDeploymentRetentionArgs()
        {
        }
        public static new ProjectDeploymentRetentionArgs Empty => new ProjectDeploymentRetentionArgs();
    }

    public sealed class ProjectDeploymentRetentionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The retention period for canceled deployments. Should be one of '1m', '2m', '3m', '6m', '1y', 'unlimited'.
        /// </summary>
        [Input("expirationCanceled")]
        public Input<string>? ExpirationCanceled { get; set; }

        /// <summary>
        /// The retention period for errored deployments. Should be one of '1m', '2m', '3m', '6m', '1y', 'unlimited'.
        /// </summary>
        [Input("expirationErrored")]
        public Input<string>? ExpirationErrored { get; set; }

        /// <summary>
        /// The retention period for preview deployments. Should be one of '1m', '2m', '3m', '6m', '1y', 'unlimited'.
        /// </summary>
        [Input("expirationPreview")]
        public Input<string>? ExpirationPreview { get; set; }

        /// <summary>
        /// The retention period for production deployments. Should be one of '1m', '2m', '3m', '6m', '1y', 'unlimited'.
        /// </summary>
        [Input("expirationProduction")]
        public Input<string>? ExpirationProduction { get; set; }

        /// <summary>
        /// The ID of the Project for the retention policy
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The ID of the Vercel team.
        /// </summary>
        [Input("teamId")]
        public Input<string>? TeamId { get; set; }

        public ProjectDeploymentRetentionState()
        {
        }
        public static new ProjectDeploymentRetentionState Empty => new ProjectDeploymentRetentionState();
    }
}
