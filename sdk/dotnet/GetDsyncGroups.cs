// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Vercel
{
    public static class GetDsyncGroups
    {
        /// <summary>
        /// Provides information about DSync groups for a team.
        /// </summary>
        public static Task<GetDsyncGroupsResult> InvokeAsync(GetDsyncGroupsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDsyncGroupsResult>("vercel:index/getDsyncGroups:getDsyncGroups", args ?? new GetDsyncGroupsArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about DSync groups for a team.
        /// </summary>
        public static Output<GetDsyncGroupsResult> Invoke(GetDsyncGroupsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDsyncGroupsResult>("vercel:index/getDsyncGroups:getDsyncGroups", args ?? new GetDsyncGroupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDsyncGroupsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the team the Dsync Groups are associated to. Required when configuring a team resource if a default team has not been set in the provider.
        /// </summary>
        [Input("teamId")]
        public string? TeamId { get; set; }

        public GetDsyncGroupsArgs()
        {
        }
        public static new GetDsyncGroupsArgs Empty => new GetDsyncGroupsArgs();
    }

    public sealed class GetDsyncGroupsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the team the Dsync Groups are associated to. Required when configuring a team resource if a default team has not been set in the provider.
        /// </summary>
        [Input("teamId")]
        public Input<string>? TeamId { get; set; }

        public GetDsyncGroupsInvokeArgs()
        {
        }
        public static new GetDsyncGroupsInvokeArgs Empty => new GetDsyncGroupsInvokeArgs();
    }


    [OutputType]
    public sealed class GetDsyncGroupsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of DSync groups for the team.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDsyncGroupsListResult> Lists;
        /// <summary>
        /// A map of Identity Provider group names to their Vercel IDs. This can be used to look up the ID of a group by its name using the lookup function.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Map;
        /// <summary>
        /// The ID of the team the Dsync Groups are associated to. Required when configuring a team resource if a default team has not been set in the provider.
        /// </summary>
        public readonly string TeamId;

        [OutputConstructor]
        private GetDsyncGroupsResult(
            string id,

            ImmutableArray<Outputs.GetDsyncGroupsListResult> lists,

            ImmutableDictionary<string, string> map,

            string teamId)
        {
            Id = id;
            Lists = lists;
            Map = map;
            TeamId = teamId;
        }
    }
}
