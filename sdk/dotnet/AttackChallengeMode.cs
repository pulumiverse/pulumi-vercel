// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Vercel
{
    /// <summary>
    /// Provides an Attack Challenge Mode resource.
    /// 
    /// Attack Challenge Mode prevent malicious traffic by showing a verification challenge for every visitor.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Vercel = Pulumiverse.Vercel;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleProject = new Vercel.Project("exampleProject");
    /// 
    ///     var exampleAttackChallengeMode = new Vercel.AttackChallengeMode("exampleAttackChallengeMode", new()
    ///     {
    ///         ProjectId = exampleProject.Id,
    ///         Enabled = true,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// You can import via the team_id and project_id.
    /// 
    /// - team_id can be found in the team `settings` tab in the Vercel UI.
    /// 
    /// - project_id can be found in the project `settings` tab in the Vercel UI.
    /// 
    /// ```sh
    /// $ pulumi import vercel:index/attackChallengeMode:AttackChallengeMode example team_xxxxxxxxxxxxxxxxxxxxxxxx/prj_xxxxxxxxxxxxxxxxxxxxxxxxxxxx
    /// ```
    /// </summary>
    [VercelResourceType("vercel:index/attackChallengeMode:AttackChallengeMode")]
    public partial class AttackChallengeMode : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Whether Attack Challenge Mode is enabled or not.
        /// </summary>
        [Output("enabled")]
        public Output<bool> Enabled { get; private set; } = null!;

        /// <summary>
        /// The ID of the Project to toggle Attack Challenge Mode on.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// The ID of the team the Project exists under. Required when configuring a team resource if a default team has not been set in the provider.
        /// </summary>
        [Output("teamId")]
        public Output<string> TeamId { get; private set; } = null!;


        /// <summary>
        /// Create a AttackChallengeMode resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AttackChallengeMode(string name, AttackChallengeModeArgs args, CustomResourceOptions? options = null)
            : base("vercel:index/attackChallengeMode:AttackChallengeMode", name, args ?? new AttackChallengeModeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AttackChallengeMode(string name, Input<string> id, AttackChallengeModeState? state = null, CustomResourceOptions? options = null)
            : base("vercel:index/attackChallengeMode:AttackChallengeMode", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AttackChallengeMode resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AttackChallengeMode Get(string name, Input<string> id, AttackChallengeModeState? state = null, CustomResourceOptions? options = null)
        {
            return new AttackChallengeMode(name, id, state, options);
        }
    }

    public sealed class AttackChallengeModeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether Attack Challenge Mode is enabled or not.
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        /// <summary>
        /// The ID of the Project to toggle Attack Challenge Mode on.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// The ID of the team the Project exists under. Required when configuring a team resource if a default team has not been set in the provider.
        /// </summary>
        [Input("teamId")]
        public Input<string>? TeamId { get; set; }

        public AttackChallengeModeArgs()
        {
        }
        public static new AttackChallengeModeArgs Empty => new AttackChallengeModeArgs();
    }

    public sealed class AttackChallengeModeState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether Attack Challenge Mode is enabled or not.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The ID of the Project to toggle Attack Challenge Mode on.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The ID of the team the Project exists under. Required when configuring a team resource if a default team has not been set in the provider.
        /// </summary>
        [Input("teamId")]
        public Input<string>? TeamId { get; set; }

        public AttackChallengeModeState()
        {
        }
        public static new AttackChallengeModeState Empty => new AttackChallengeModeState();
    }
}
