// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Vercel
{
    /// <summary>
    /// Provides an Edge Config Item.
    /// 
    /// An Edge Config is a global data store that enables experimentation with feature flags, A/B testing, critical redirects, and more.
    /// 
    /// An Edge Config Item is a value within an Edge Config.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Vercel = Pulumiverse.Vercel;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Vercel.EdgeConfig("example", new()
    ///     {
    ///         Name = "example",
    ///     });
    /// 
    ///     var exampleEdgeConfigItem = new Vercel.EdgeConfigItem("example", new()
    ///     {
    ///         EdgeConfigId = example.Id,
    ///         Key = "foobar",
    ///         Value = "baz",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// If importing into a personal account, or with a team configured on
    /// 
    /// the provider, simply use the edge config id and the key of the item to import.
    /// 
    /// - edge_config_id can be found by navigating to the Edge Config in the Vercel UI. It should begin with `ecfg_`.
    /// 
    /// - key is the key of teh item to import.
    /// 
    /// ```sh
    /// $ pulumi import vercel:index/edgeConfigItem:EdgeConfigItem example ecfg_xxxxxxxxxxxxxxxxxxxxxxxxxxxx/example_key
    /// ```
    /// 
    /// Alternatively, you can import via the team_id, edge_config_id and the key of the item to import.
    /// 
    /// - team_id can be found in the team `settings` tab in the Vercel UI.
    /// 
    /// - edge_config_id can be found by navigating to the Edge Config in the Vercel UI. It should begin with `ecfg_`.
    /// 
    /// - key is the key of the item to import.
    /// 
    /// ```sh
    /// $ pulumi import vercel:index/edgeConfigItem:EdgeConfigItem example team_xxxxxxxxxxxxxxxxxxxxxxxx/ecfg_xxxxxxxxxxxxxxxxxxxxxxxxxxxx/example_key
    /// ```
    /// </summary>
    [VercelResourceType("vercel:index/edgeConfigItem:EdgeConfigItem")]
    public partial class EdgeConfigItem : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the Edge Config store.
        /// </summary>
        [Output("edgeConfigId")]
        public Output<string> EdgeConfigId { get; private set; } = null!;

        /// <summary>
        /// The name of the key you want to add to or update within your Edge Config.
        /// </summary>
        [Output("key")]
        public Output<string> Key { get; private set; } = null!;

        /// <summary>
        /// The ID of the team the Edge Config should exist under. Required when configuring a team resource if a default team has not been set in the provider.
        /// </summary>
        [Output("teamId")]
        public Output<string> TeamId { get; private set; } = null!;

        /// <summary>
        /// The value you want to assign to the key.
        /// </summary>
        [Output("value")]
        public Output<string> Value { get; private set; } = null!;


        /// <summary>
        /// Create a EdgeConfigItem resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EdgeConfigItem(string name, EdgeConfigItemArgs args, CustomResourceOptions? options = null)
            : base("vercel:index/edgeConfigItem:EdgeConfigItem", name, args ?? new EdgeConfigItemArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EdgeConfigItem(string name, Input<string> id, EdgeConfigItemState? state = null, CustomResourceOptions? options = null)
            : base("vercel:index/edgeConfigItem:EdgeConfigItem", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EdgeConfigItem resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EdgeConfigItem Get(string name, Input<string> id, EdgeConfigItemState? state = null, CustomResourceOptions? options = null)
        {
            return new EdgeConfigItem(name, id, state, options);
        }
    }

    public sealed class EdgeConfigItemArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Edge Config store.
        /// </summary>
        [Input("edgeConfigId", required: true)]
        public Input<string> EdgeConfigId { get; set; } = null!;

        /// <summary>
        /// The name of the key you want to add to or update within your Edge Config.
        /// </summary>
        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        /// <summary>
        /// The ID of the team the Edge Config should exist under. Required when configuring a team resource if a default team has not been set in the provider.
        /// </summary>
        [Input("teamId")]
        public Input<string>? TeamId { get; set; }

        /// <summary>
        /// The value you want to assign to the key.
        /// </summary>
        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public EdgeConfigItemArgs()
        {
        }
        public static new EdgeConfigItemArgs Empty => new EdgeConfigItemArgs();
    }

    public sealed class EdgeConfigItemState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Edge Config store.
        /// </summary>
        [Input("edgeConfigId")]
        public Input<string>? EdgeConfigId { get; set; }

        /// <summary>
        /// The name of the key you want to add to or update within your Edge Config.
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        /// <summary>
        /// The ID of the team the Edge Config should exist under. Required when configuring a team resource if a default team has not been set in the provider.
        /// </summary>
        [Input("teamId")]
        public Input<string>? TeamId { get; set; }

        /// <summary>
        /// The value you want to assign to the key.
        /// </summary>
        [Input("value")]
        public Input<string>? Value { get; set; }

        public EdgeConfigItemState()
        {
        }
        public static new EdgeConfigItemState Empty => new EdgeConfigItemState();
    }
}
