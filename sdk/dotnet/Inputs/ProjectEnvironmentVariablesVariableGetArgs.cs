// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Vercel.Inputs
{

    public sealed class ProjectEnvironmentVariablesVariableGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A comment explaining what the environment variable is for.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        [Input("customEnvironmentIds")]
        private InputList<string>? _customEnvironmentIds;

        /// <summary>
        /// The IDs of Custom Environments that the Environment Variable should be present on. At least one of `target` or `custom_environment_ids` must be set.
        /// </summary>
        public InputList<string> CustomEnvironmentIds
        {
            get => _customEnvironmentIds ?? (_customEnvironmentIds = new InputList<string>());
            set => _customEnvironmentIds = value;
        }

        /// <summary>
        /// The git branch of the Environment Variable.
        /// </summary>
        [Input("gitBranch")]
        public Input<string>? GitBranch { get; set; }

        /// <summary>
        /// The ID of the Environment Variable.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the Environment Variable.
        /// </summary>
        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        /// <summary>
        /// Whether the Environment Variable is sensitive or not.
        /// </summary>
        [Input("sensitive")]
        public Input<bool>? Sensitive { get; set; }

        [Input("targets")]
        private InputList<string>? _targets;

        /// <summary>
        /// The environments that the Environment Variable should be present on. Valid targets are either `production`, `preview`, or `development`. At least one of `target` or `custom_environment_ids` must be set.
        /// </summary>
        public InputList<string> Targets
        {
            get => _targets ?? (_targets = new InputList<string>());
            set => _targets = value;
        }

        [Input("value", required: true)]
        private Input<string>? _value;

        /// <summary>
        /// The value of the Environment Variable.
        /// </summary>
        public Input<string>? Value
        {
            get => _value;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _value = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        public ProjectEnvironmentVariablesVariableGetArgs()
        {
        }
        public static new ProjectEnvironmentVariablesVariableGetArgs Empty => new ProjectEnvironmentVariablesVariableGetArgs();
    }
}
