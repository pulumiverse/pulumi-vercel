// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Vercel
{
    /// <summary>
    /// Links a project to a Shared Environment Variable.
    /// 
    /// &gt; This resource is intended to be used alongside a vercel.SharedEnvironmentVariable Data Source, not the Resource. The Resource also defines which projects to link to the shared environment variable, and using both vercel.SharedEnvironmentVariable and vercel.SharedEnvironmentVariableProjectLink together results in undefined behavior.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Vercel = Pulumi.Vercel;
    /// using Vercel = Pulumiverse.Vercel;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = Vercel.GetSharedEnvironmentVariable.Invoke(new()
    ///     {
    ///         Key = "EXAMPLE_ENV_VAR",
    ///         Targets = new[]
    ///         {
    ///             "production",
    ///             "preview",
    ///         },
    ///     });
    /// 
    ///     var exampleProject = new Vercel.Project("example", new()
    ///     {
    ///         Name = "example",
    ///     });
    /// 
    ///     var exampleSharedEnvironmentVariableProjectLink = new Vercel.SharedEnvironmentVariableProjectLink("example", new()
    ///     {
    ///         SharedEnvironmentVariableId = example.Apply(getSharedEnvironmentVariableResult =&gt; getSharedEnvironmentVariableResult.Id),
    ///         ProjectId = exampleProject.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [VercelResourceType("vercel:index/sharedEnvironmentVariableProjectLink:SharedEnvironmentVariableProjectLink")]
    public partial class SharedEnvironmentVariableProjectLink : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the Vercel project.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// The ID of the shared environment variable.
        /// </summary>
        [Output("sharedEnvironmentVariableId")]
        public Output<string> SharedEnvironmentVariableId { get; private set; } = null!;

        /// <summary>
        /// The ID of the Vercel team. Required when configuring a team resource if a default team has not been set in the provider.
        /// </summary>
        [Output("teamId")]
        public Output<string> TeamId { get; private set; } = null!;


        /// <summary>
        /// Create a SharedEnvironmentVariableProjectLink resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SharedEnvironmentVariableProjectLink(string name, SharedEnvironmentVariableProjectLinkArgs args, CustomResourceOptions? options = null)
            : base("vercel:index/sharedEnvironmentVariableProjectLink:SharedEnvironmentVariableProjectLink", name, args ?? new SharedEnvironmentVariableProjectLinkArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SharedEnvironmentVariableProjectLink(string name, Input<string> id, SharedEnvironmentVariableProjectLinkState? state = null, CustomResourceOptions? options = null)
            : base("vercel:index/sharedEnvironmentVariableProjectLink:SharedEnvironmentVariableProjectLink", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SharedEnvironmentVariableProjectLink resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SharedEnvironmentVariableProjectLink Get(string name, Input<string> id, SharedEnvironmentVariableProjectLinkState? state = null, CustomResourceOptions? options = null)
        {
            return new SharedEnvironmentVariableProjectLink(name, id, state, options);
        }
    }

    public sealed class SharedEnvironmentVariableProjectLinkArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Vercel project.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// The ID of the shared environment variable.
        /// </summary>
        [Input("sharedEnvironmentVariableId", required: true)]
        public Input<string> SharedEnvironmentVariableId { get; set; } = null!;

        /// <summary>
        /// The ID of the Vercel team. Required when configuring a team resource if a default team has not been set in the provider.
        /// </summary>
        [Input("teamId")]
        public Input<string>? TeamId { get; set; }

        public SharedEnvironmentVariableProjectLinkArgs()
        {
        }
        public static new SharedEnvironmentVariableProjectLinkArgs Empty => new SharedEnvironmentVariableProjectLinkArgs();
    }

    public sealed class SharedEnvironmentVariableProjectLinkState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Vercel project.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The ID of the shared environment variable.
        /// </summary>
        [Input("sharedEnvironmentVariableId")]
        public Input<string>? SharedEnvironmentVariableId { get; set; }

        /// <summary>
        /// The ID of the Vercel team. Required when configuring a team resource if a default team has not been set in the provider.
        /// </summary>
        [Input("teamId")]
        public Input<string>? TeamId { get; set; }

        public SharedEnvironmentVariableProjectLinkState()
        {
        }
        public static new SharedEnvironmentVariableProjectLinkState Empty => new SharedEnvironmentVariableProjectLinkState();
    }
}
