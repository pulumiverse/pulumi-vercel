// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Vercel
{
    /// <summary>
    /// Provides Project access to an existing Integration. This requires the integration already exists and is already configured for Specific Project access.
    /// </summary>
    [VercelResourceType("vercel:index/integrationProjectAccess:IntegrationProjectAccess")]
    public partial class IntegrationProjectAccess : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the integration.
        /// </summary>
        [Output("integrationId")]
        public Output<string> IntegrationId { get; private set; } = null!;

        /// <summary>
        /// The ID of the Vercel project.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// The ID of the Vercel team.Required when configuring a team resource if a default team has not been set in the provider.
        /// </summary>
        [Output("teamId")]
        public Output<string> TeamId { get; private set; } = null!;


        /// <summary>
        /// Create a IntegrationProjectAccess resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IntegrationProjectAccess(string name, IntegrationProjectAccessArgs args, CustomResourceOptions? options = null)
            : base("vercel:index/integrationProjectAccess:IntegrationProjectAccess", name, args ?? new IntegrationProjectAccessArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IntegrationProjectAccess(string name, Input<string> id, IntegrationProjectAccessState? state = null, CustomResourceOptions? options = null)
            : base("vercel:index/integrationProjectAccess:IntegrationProjectAccess", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IntegrationProjectAccess resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IntegrationProjectAccess Get(string name, Input<string> id, IntegrationProjectAccessState? state = null, CustomResourceOptions? options = null)
        {
            return new IntegrationProjectAccess(name, id, state, options);
        }
    }

    public sealed class IntegrationProjectAccessArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the integration.
        /// </summary>
        [Input("integrationId", required: true)]
        public Input<string> IntegrationId { get; set; } = null!;

        /// <summary>
        /// The ID of the Vercel project.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// The ID of the Vercel team.Required when configuring a team resource if a default team has not been set in the provider.
        /// </summary>
        [Input("teamId")]
        public Input<string>? TeamId { get; set; }

        public IntegrationProjectAccessArgs()
        {
        }
        public static new IntegrationProjectAccessArgs Empty => new IntegrationProjectAccessArgs();
    }

    public sealed class IntegrationProjectAccessState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the integration.
        /// </summary>
        [Input("integrationId")]
        public Input<string>? IntegrationId { get; set; }

        /// <summary>
        /// The ID of the Vercel project.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The ID of the Vercel team.Required when configuring a team resource if a default team has not been set in the provider.
        /// </summary>
        [Input("teamId")]
        public Input<string>? TeamId { get; set; }

        public IntegrationProjectAccessState()
        {
        }
        public static new IntegrationProjectAccessState Empty => new IntegrationProjectAccessState();
    }
}
