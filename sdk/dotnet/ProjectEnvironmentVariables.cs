// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Vercel
{
    /// <summary>
    /// ## Example Usage
    /// </summary>
    [VercelResourceType("vercel:index/projectEnvironmentVariables:ProjectEnvironmentVariables")]
    public partial class ProjectEnvironmentVariables : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the Vercel project.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// The ID of the Vercel team. Required when configuring a team resource if a default team has not been set in the provider.
        /// </summary>
        [Output("teamId")]
        public Output<string> TeamId { get; private set; } = null!;

        /// <summary>
        /// A set of Environment Variables that should be configured for the project.
        /// </summary>
        [Output("variables")]
        public Output<ImmutableArray<Outputs.ProjectEnvironmentVariablesVariable>> Variables { get; private set; } = null!;


        /// <summary>
        /// Create a ProjectEnvironmentVariables resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ProjectEnvironmentVariables(string name, ProjectEnvironmentVariablesArgs args, CustomResourceOptions? options = null)
            : base("vercel:index/projectEnvironmentVariables:ProjectEnvironmentVariables", name, args ?? new ProjectEnvironmentVariablesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ProjectEnvironmentVariables(string name, Input<string> id, ProjectEnvironmentVariablesState? state = null, CustomResourceOptions? options = null)
            : base("vercel:index/projectEnvironmentVariables:ProjectEnvironmentVariables", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ProjectEnvironmentVariables resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ProjectEnvironmentVariables Get(string name, Input<string> id, ProjectEnvironmentVariablesState? state = null, CustomResourceOptions? options = null)
        {
            return new ProjectEnvironmentVariables(name, id, state, options);
        }
    }

    public sealed class ProjectEnvironmentVariablesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Vercel project.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// The ID of the Vercel team. Required when configuring a team resource if a default team has not been set in the provider.
        /// </summary>
        [Input("teamId")]
        public Input<string>? TeamId { get; set; }

        [Input("variables", required: true)]
        private InputList<Inputs.ProjectEnvironmentVariablesVariableArgs>? _variables;

        /// <summary>
        /// A set of Environment Variables that should be configured for the project.
        /// </summary>
        public InputList<Inputs.ProjectEnvironmentVariablesVariableArgs> Variables
        {
            get => _variables ?? (_variables = new InputList<Inputs.ProjectEnvironmentVariablesVariableArgs>());
            set => _variables = value;
        }

        public ProjectEnvironmentVariablesArgs()
        {
        }
        public static new ProjectEnvironmentVariablesArgs Empty => new ProjectEnvironmentVariablesArgs();
    }

    public sealed class ProjectEnvironmentVariablesState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Vercel project.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The ID of the Vercel team. Required when configuring a team resource if a default team has not been set in the provider.
        /// </summary>
        [Input("teamId")]
        public Input<string>? TeamId { get; set; }

        [Input("variables")]
        private InputList<Inputs.ProjectEnvironmentVariablesVariableGetArgs>? _variables;

        /// <summary>
        /// A set of Environment Variables that should be configured for the project.
        /// </summary>
        public InputList<Inputs.ProjectEnvironmentVariablesVariableGetArgs> Variables
        {
            get => _variables ?? (_variables = new InputList<Inputs.ProjectEnvironmentVariablesVariableGetArgs>());
            set => _variables = value;
        }

        public ProjectEnvironmentVariablesState()
        {
        }
        public static new ProjectEnvironmentVariablesState Empty => new ProjectEnvironmentVariablesState();
    }
}
