// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vercel

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-vercel/sdk/v3/go/vercel/internal"
)

var _ = internal.GetEnvOrDefault

type CustomEnvironmentBranchTracking struct {
	// The pattern of the branch name to track.
	Pattern string `pulumi:"pattern"`
	// How a branch name should be matched against the pattern. Must be one of 'startsWith', 'endsWith' or 'equals'.
	Type string `pulumi:"type"`
}

// CustomEnvironmentBranchTrackingInput is an input type that accepts CustomEnvironmentBranchTrackingArgs and CustomEnvironmentBranchTrackingOutput values.
// You can construct a concrete instance of `CustomEnvironmentBranchTrackingInput` via:
//
//	CustomEnvironmentBranchTrackingArgs{...}
type CustomEnvironmentBranchTrackingInput interface {
	pulumi.Input

	ToCustomEnvironmentBranchTrackingOutput() CustomEnvironmentBranchTrackingOutput
	ToCustomEnvironmentBranchTrackingOutputWithContext(context.Context) CustomEnvironmentBranchTrackingOutput
}

type CustomEnvironmentBranchTrackingArgs struct {
	// The pattern of the branch name to track.
	Pattern pulumi.StringInput `pulumi:"pattern"`
	// How a branch name should be matched against the pattern. Must be one of 'startsWith', 'endsWith' or 'equals'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CustomEnvironmentBranchTrackingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomEnvironmentBranchTracking)(nil)).Elem()
}

func (i CustomEnvironmentBranchTrackingArgs) ToCustomEnvironmentBranchTrackingOutput() CustomEnvironmentBranchTrackingOutput {
	return i.ToCustomEnvironmentBranchTrackingOutputWithContext(context.Background())
}

func (i CustomEnvironmentBranchTrackingArgs) ToCustomEnvironmentBranchTrackingOutputWithContext(ctx context.Context) CustomEnvironmentBranchTrackingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomEnvironmentBranchTrackingOutput)
}

func (i CustomEnvironmentBranchTrackingArgs) ToCustomEnvironmentBranchTrackingPtrOutput() CustomEnvironmentBranchTrackingPtrOutput {
	return i.ToCustomEnvironmentBranchTrackingPtrOutputWithContext(context.Background())
}

func (i CustomEnvironmentBranchTrackingArgs) ToCustomEnvironmentBranchTrackingPtrOutputWithContext(ctx context.Context) CustomEnvironmentBranchTrackingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomEnvironmentBranchTrackingOutput).ToCustomEnvironmentBranchTrackingPtrOutputWithContext(ctx)
}

// CustomEnvironmentBranchTrackingPtrInput is an input type that accepts CustomEnvironmentBranchTrackingArgs, CustomEnvironmentBranchTrackingPtr and CustomEnvironmentBranchTrackingPtrOutput values.
// You can construct a concrete instance of `CustomEnvironmentBranchTrackingPtrInput` via:
//
//	        CustomEnvironmentBranchTrackingArgs{...}
//
//	or:
//
//	        nil
type CustomEnvironmentBranchTrackingPtrInput interface {
	pulumi.Input

	ToCustomEnvironmentBranchTrackingPtrOutput() CustomEnvironmentBranchTrackingPtrOutput
	ToCustomEnvironmentBranchTrackingPtrOutputWithContext(context.Context) CustomEnvironmentBranchTrackingPtrOutput
}

type customEnvironmentBranchTrackingPtrType CustomEnvironmentBranchTrackingArgs

func CustomEnvironmentBranchTrackingPtr(v *CustomEnvironmentBranchTrackingArgs) CustomEnvironmentBranchTrackingPtrInput {
	return (*customEnvironmentBranchTrackingPtrType)(v)
}

func (*customEnvironmentBranchTrackingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomEnvironmentBranchTracking)(nil)).Elem()
}

func (i *customEnvironmentBranchTrackingPtrType) ToCustomEnvironmentBranchTrackingPtrOutput() CustomEnvironmentBranchTrackingPtrOutput {
	return i.ToCustomEnvironmentBranchTrackingPtrOutputWithContext(context.Background())
}

func (i *customEnvironmentBranchTrackingPtrType) ToCustomEnvironmentBranchTrackingPtrOutputWithContext(ctx context.Context) CustomEnvironmentBranchTrackingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomEnvironmentBranchTrackingPtrOutput)
}

type CustomEnvironmentBranchTrackingOutput struct{ *pulumi.OutputState }

func (CustomEnvironmentBranchTrackingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomEnvironmentBranchTracking)(nil)).Elem()
}

func (o CustomEnvironmentBranchTrackingOutput) ToCustomEnvironmentBranchTrackingOutput() CustomEnvironmentBranchTrackingOutput {
	return o
}

func (o CustomEnvironmentBranchTrackingOutput) ToCustomEnvironmentBranchTrackingOutputWithContext(ctx context.Context) CustomEnvironmentBranchTrackingOutput {
	return o
}

func (o CustomEnvironmentBranchTrackingOutput) ToCustomEnvironmentBranchTrackingPtrOutput() CustomEnvironmentBranchTrackingPtrOutput {
	return o.ToCustomEnvironmentBranchTrackingPtrOutputWithContext(context.Background())
}

func (o CustomEnvironmentBranchTrackingOutput) ToCustomEnvironmentBranchTrackingPtrOutputWithContext(ctx context.Context) CustomEnvironmentBranchTrackingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomEnvironmentBranchTracking) *CustomEnvironmentBranchTracking {
		return &v
	}).(CustomEnvironmentBranchTrackingPtrOutput)
}

// The pattern of the branch name to track.
func (o CustomEnvironmentBranchTrackingOutput) Pattern() pulumi.StringOutput {
	return o.ApplyT(func(v CustomEnvironmentBranchTracking) string { return v.Pattern }).(pulumi.StringOutput)
}

// How a branch name should be matched against the pattern. Must be one of 'startsWith', 'endsWith' or 'equals'.
func (o CustomEnvironmentBranchTrackingOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CustomEnvironmentBranchTracking) string { return v.Type }).(pulumi.StringOutput)
}

type CustomEnvironmentBranchTrackingPtrOutput struct{ *pulumi.OutputState }

func (CustomEnvironmentBranchTrackingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomEnvironmentBranchTracking)(nil)).Elem()
}

func (o CustomEnvironmentBranchTrackingPtrOutput) ToCustomEnvironmentBranchTrackingPtrOutput() CustomEnvironmentBranchTrackingPtrOutput {
	return o
}

func (o CustomEnvironmentBranchTrackingPtrOutput) ToCustomEnvironmentBranchTrackingPtrOutputWithContext(ctx context.Context) CustomEnvironmentBranchTrackingPtrOutput {
	return o
}

func (o CustomEnvironmentBranchTrackingPtrOutput) Elem() CustomEnvironmentBranchTrackingOutput {
	return o.ApplyT(func(v *CustomEnvironmentBranchTracking) CustomEnvironmentBranchTracking {
		if v != nil {
			return *v
		}
		var ret CustomEnvironmentBranchTracking
		return ret
	}).(CustomEnvironmentBranchTrackingOutput)
}

// The pattern of the branch name to track.
func (o CustomEnvironmentBranchTrackingPtrOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomEnvironmentBranchTracking) *string {
		if v == nil {
			return nil
		}
		return &v.Pattern
	}).(pulumi.StringPtrOutput)
}

// How a branch name should be matched against the pattern. Must be one of 'startsWith', 'endsWith' or 'equals'.
func (o CustomEnvironmentBranchTrackingPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomEnvironmentBranchTracking) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type DeploymentProjectSettings struct {
	// The build command for this deployment. If omitted, this value will be taken from the project or automatically detected.
	BuildCommand *string `pulumi:"buildCommand"`
	// The framework that is being used for this deployment. If omitted, no framework is selected.
	Framework *string `pulumi:"framework"`
	// The install command for this deployment. If omitted, this value will be taken from the project or automatically detected.
	InstallCommand *string `pulumi:"installCommand"`
	// The output directory of the deployment. If omitted, this value will be taken from the project or automatically detected.
	OutputDirectory *string `pulumi:"outputDirectory"`
	// The name of a directory or relative path to the source code of your project. When null is used it will default to the project root.
	RootDirectory *string `pulumi:"rootDirectory"`
}

// DeploymentProjectSettingsInput is an input type that accepts DeploymentProjectSettingsArgs and DeploymentProjectSettingsOutput values.
// You can construct a concrete instance of `DeploymentProjectSettingsInput` via:
//
//	DeploymentProjectSettingsArgs{...}
type DeploymentProjectSettingsInput interface {
	pulumi.Input

	ToDeploymentProjectSettingsOutput() DeploymentProjectSettingsOutput
	ToDeploymentProjectSettingsOutputWithContext(context.Context) DeploymentProjectSettingsOutput
}

type DeploymentProjectSettingsArgs struct {
	// The build command for this deployment. If omitted, this value will be taken from the project or automatically detected.
	BuildCommand pulumi.StringPtrInput `pulumi:"buildCommand"`
	// The framework that is being used for this deployment. If omitted, no framework is selected.
	Framework pulumi.StringPtrInput `pulumi:"framework"`
	// The install command for this deployment. If omitted, this value will be taken from the project or automatically detected.
	InstallCommand pulumi.StringPtrInput `pulumi:"installCommand"`
	// The output directory of the deployment. If omitted, this value will be taken from the project or automatically detected.
	OutputDirectory pulumi.StringPtrInput `pulumi:"outputDirectory"`
	// The name of a directory or relative path to the source code of your project. When null is used it will default to the project root.
	RootDirectory pulumi.StringPtrInput `pulumi:"rootDirectory"`
}

func (DeploymentProjectSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentProjectSettings)(nil)).Elem()
}

func (i DeploymentProjectSettingsArgs) ToDeploymentProjectSettingsOutput() DeploymentProjectSettingsOutput {
	return i.ToDeploymentProjectSettingsOutputWithContext(context.Background())
}

func (i DeploymentProjectSettingsArgs) ToDeploymentProjectSettingsOutputWithContext(ctx context.Context) DeploymentProjectSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentProjectSettingsOutput)
}

func (i DeploymentProjectSettingsArgs) ToDeploymentProjectSettingsPtrOutput() DeploymentProjectSettingsPtrOutput {
	return i.ToDeploymentProjectSettingsPtrOutputWithContext(context.Background())
}

func (i DeploymentProjectSettingsArgs) ToDeploymentProjectSettingsPtrOutputWithContext(ctx context.Context) DeploymentProjectSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentProjectSettingsOutput).ToDeploymentProjectSettingsPtrOutputWithContext(ctx)
}

// DeploymentProjectSettingsPtrInput is an input type that accepts DeploymentProjectSettingsArgs, DeploymentProjectSettingsPtr and DeploymentProjectSettingsPtrOutput values.
// You can construct a concrete instance of `DeploymentProjectSettingsPtrInput` via:
//
//	        DeploymentProjectSettingsArgs{...}
//
//	or:
//
//	        nil
type DeploymentProjectSettingsPtrInput interface {
	pulumi.Input

	ToDeploymentProjectSettingsPtrOutput() DeploymentProjectSettingsPtrOutput
	ToDeploymentProjectSettingsPtrOutputWithContext(context.Context) DeploymentProjectSettingsPtrOutput
}

type deploymentProjectSettingsPtrType DeploymentProjectSettingsArgs

func DeploymentProjectSettingsPtr(v *DeploymentProjectSettingsArgs) DeploymentProjectSettingsPtrInput {
	return (*deploymentProjectSettingsPtrType)(v)
}

func (*deploymentProjectSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentProjectSettings)(nil)).Elem()
}

func (i *deploymentProjectSettingsPtrType) ToDeploymentProjectSettingsPtrOutput() DeploymentProjectSettingsPtrOutput {
	return i.ToDeploymentProjectSettingsPtrOutputWithContext(context.Background())
}

func (i *deploymentProjectSettingsPtrType) ToDeploymentProjectSettingsPtrOutputWithContext(ctx context.Context) DeploymentProjectSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentProjectSettingsPtrOutput)
}

type DeploymentProjectSettingsOutput struct{ *pulumi.OutputState }

func (DeploymentProjectSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentProjectSettings)(nil)).Elem()
}

func (o DeploymentProjectSettingsOutput) ToDeploymentProjectSettingsOutput() DeploymentProjectSettingsOutput {
	return o
}

func (o DeploymentProjectSettingsOutput) ToDeploymentProjectSettingsOutputWithContext(ctx context.Context) DeploymentProjectSettingsOutput {
	return o
}

func (o DeploymentProjectSettingsOutput) ToDeploymentProjectSettingsPtrOutput() DeploymentProjectSettingsPtrOutput {
	return o.ToDeploymentProjectSettingsPtrOutputWithContext(context.Background())
}

func (o DeploymentProjectSettingsOutput) ToDeploymentProjectSettingsPtrOutputWithContext(ctx context.Context) DeploymentProjectSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentProjectSettings) *DeploymentProjectSettings {
		return &v
	}).(DeploymentProjectSettingsPtrOutput)
}

// The build command for this deployment. If omitted, this value will be taken from the project or automatically detected.
func (o DeploymentProjectSettingsOutput) BuildCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentProjectSettings) *string { return v.BuildCommand }).(pulumi.StringPtrOutput)
}

// The framework that is being used for this deployment. If omitted, no framework is selected.
func (o DeploymentProjectSettingsOutput) Framework() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentProjectSettings) *string { return v.Framework }).(pulumi.StringPtrOutput)
}

// The install command for this deployment. If omitted, this value will be taken from the project or automatically detected.
func (o DeploymentProjectSettingsOutput) InstallCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentProjectSettings) *string { return v.InstallCommand }).(pulumi.StringPtrOutput)
}

// The output directory of the deployment. If omitted, this value will be taken from the project or automatically detected.
func (o DeploymentProjectSettingsOutput) OutputDirectory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentProjectSettings) *string { return v.OutputDirectory }).(pulumi.StringPtrOutput)
}

// The name of a directory or relative path to the source code of your project. When null is used it will default to the project root.
func (o DeploymentProjectSettingsOutput) RootDirectory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentProjectSettings) *string { return v.RootDirectory }).(pulumi.StringPtrOutput)
}

type DeploymentProjectSettingsPtrOutput struct{ *pulumi.OutputState }

func (DeploymentProjectSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentProjectSettings)(nil)).Elem()
}

func (o DeploymentProjectSettingsPtrOutput) ToDeploymentProjectSettingsPtrOutput() DeploymentProjectSettingsPtrOutput {
	return o
}

func (o DeploymentProjectSettingsPtrOutput) ToDeploymentProjectSettingsPtrOutputWithContext(ctx context.Context) DeploymentProjectSettingsPtrOutput {
	return o
}

func (o DeploymentProjectSettingsPtrOutput) Elem() DeploymentProjectSettingsOutput {
	return o.ApplyT(func(v *DeploymentProjectSettings) DeploymentProjectSettings {
		if v != nil {
			return *v
		}
		var ret DeploymentProjectSettings
		return ret
	}).(DeploymentProjectSettingsOutput)
}

// The build command for this deployment. If omitted, this value will be taken from the project or automatically detected.
func (o DeploymentProjectSettingsPtrOutput) BuildCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentProjectSettings) *string {
		if v == nil {
			return nil
		}
		return v.BuildCommand
	}).(pulumi.StringPtrOutput)
}

// The framework that is being used for this deployment. If omitted, no framework is selected.
func (o DeploymentProjectSettingsPtrOutput) Framework() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentProjectSettings) *string {
		if v == nil {
			return nil
		}
		return v.Framework
	}).(pulumi.StringPtrOutput)
}

// The install command for this deployment. If omitted, this value will be taken from the project or automatically detected.
func (o DeploymentProjectSettingsPtrOutput) InstallCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentProjectSettings) *string {
		if v == nil {
			return nil
		}
		return v.InstallCommand
	}).(pulumi.StringPtrOutput)
}

// The output directory of the deployment. If omitted, this value will be taken from the project or automatically detected.
func (o DeploymentProjectSettingsPtrOutput) OutputDirectory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentProjectSettings) *string {
		if v == nil {
			return nil
		}
		return v.OutputDirectory
	}).(pulumi.StringPtrOutput)
}

// The name of a directory or relative path to the source code of your project. When null is used it will default to the project root.
func (o DeploymentProjectSettingsPtrOutput) RootDirectory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentProjectSettings) *string {
		if v == nil {
			return nil
		}
		return v.RootDirectory
	}).(pulumi.StringPtrOutput)
}

type DnsRecordSrv struct {
	// The TCP or UDP port on which the service is to be found.
	Port int `pulumi:"port"`
	// The priority of the target host, lower value means more preferred.
	Priority int `pulumi:"priority"`
	// The canonical hostname of the machine providing the service, ending in a dot.
	Target string `pulumi:"target"`
	// A relative weight for records with the same priority, higher value means higher chance of getting picked.
	Weight int `pulumi:"weight"`
}

// DnsRecordSrvInput is an input type that accepts DnsRecordSrvArgs and DnsRecordSrvOutput values.
// You can construct a concrete instance of `DnsRecordSrvInput` via:
//
//	DnsRecordSrvArgs{...}
type DnsRecordSrvInput interface {
	pulumi.Input

	ToDnsRecordSrvOutput() DnsRecordSrvOutput
	ToDnsRecordSrvOutputWithContext(context.Context) DnsRecordSrvOutput
}

type DnsRecordSrvArgs struct {
	// The TCP or UDP port on which the service is to be found.
	Port pulumi.IntInput `pulumi:"port"`
	// The priority of the target host, lower value means more preferred.
	Priority pulumi.IntInput `pulumi:"priority"`
	// The canonical hostname of the machine providing the service, ending in a dot.
	Target pulumi.StringInput `pulumi:"target"`
	// A relative weight for records with the same priority, higher value means higher chance of getting picked.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (DnsRecordSrvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsRecordSrv)(nil)).Elem()
}

func (i DnsRecordSrvArgs) ToDnsRecordSrvOutput() DnsRecordSrvOutput {
	return i.ToDnsRecordSrvOutputWithContext(context.Background())
}

func (i DnsRecordSrvArgs) ToDnsRecordSrvOutputWithContext(ctx context.Context) DnsRecordSrvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsRecordSrvOutput)
}

func (i DnsRecordSrvArgs) ToDnsRecordSrvPtrOutput() DnsRecordSrvPtrOutput {
	return i.ToDnsRecordSrvPtrOutputWithContext(context.Background())
}

func (i DnsRecordSrvArgs) ToDnsRecordSrvPtrOutputWithContext(ctx context.Context) DnsRecordSrvPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsRecordSrvOutput).ToDnsRecordSrvPtrOutputWithContext(ctx)
}

// DnsRecordSrvPtrInput is an input type that accepts DnsRecordSrvArgs, DnsRecordSrvPtr and DnsRecordSrvPtrOutput values.
// You can construct a concrete instance of `DnsRecordSrvPtrInput` via:
//
//	        DnsRecordSrvArgs{...}
//
//	or:
//
//	        nil
type DnsRecordSrvPtrInput interface {
	pulumi.Input

	ToDnsRecordSrvPtrOutput() DnsRecordSrvPtrOutput
	ToDnsRecordSrvPtrOutputWithContext(context.Context) DnsRecordSrvPtrOutput
}

type dnsRecordSrvPtrType DnsRecordSrvArgs

func DnsRecordSrvPtr(v *DnsRecordSrvArgs) DnsRecordSrvPtrInput {
	return (*dnsRecordSrvPtrType)(v)
}

func (*dnsRecordSrvPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsRecordSrv)(nil)).Elem()
}

func (i *dnsRecordSrvPtrType) ToDnsRecordSrvPtrOutput() DnsRecordSrvPtrOutput {
	return i.ToDnsRecordSrvPtrOutputWithContext(context.Background())
}

func (i *dnsRecordSrvPtrType) ToDnsRecordSrvPtrOutputWithContext(ctx context.Context) DnsRecordSrvPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsRecordSrvPtrOutput)
}

type DnsRecordSrvOutput struct{ *pulumi.OutputState }

func (DnsRecordSrvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsRecordSrv)(nil)).Elem()
}

func (o DnsRecordSrvOutput) ToDnsRecordSrvOutput() DnsRecordSrvOutput {
	return o
}

func (o DnsRecordSrvOutput) ToDnsRecordSrvOutputWithContext(ctx context.Context) DnsRecordSrvOutput {
	return o
}

func (o DnsRecordSrvOutput) ToDnsRecordSrvPtrOutput() DnsRecordSrvPtrOutput {
	return o.ToDnsRecordSrvPtrOutputWithContext(context.Background())
}

func (o DnsRecordSrvOutput) ToDnsRecordSrvPtrOutputWithContext(ctx context.Context) DnsRecordSrvPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DnsRecordSrv) *DnsRecordSrv {
		return &v
	}).(DnsRecordSrvPtrOutput)
}

// The TCP or UDP port on which the service is to be found.
func (o DnsRecordSrvOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v DnsRecordSrv) int { return v.Port }).(pulumi.IntOutput)
}

// The priority of the target host, lower value means more preferred.
func (o DnsRecordSrvOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v DnsRecordSrv) int { return v.Priority }).(pulumi.IntOutput)
}

// The canonical hostname of the machine providing the service, ending in a dot.
func (o DnsRecordSrvOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v DnsRecordSrv) string { return v.Target }).(pulumi.StringOutput)
}

// A relative weight for records with the same priority, higher value means higher chance of getting picked.
func (o DnsRecordSrvOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v DnsRecordSrv) int { return v.Weight }).(pulumi.IntOutput)
}

type DnsRecordSrvPtrOutput struct{ *pulumi.OutputState }

func (DnsRecordSrvPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsRecordSrv)(nil)).Elem()
}

func (o DnsRecordSrvPtrOutput) ToDnsRecordSrvPtrOutput() DnsRecordSrvPtrOutput {
	return o
}

func (o DnsRecordSrvPtrOutput) ToDnsRecordSrvPtrOutputWithContext(ctx context.Context) DnsRecordSrvPtrOutput {
	return o
}

func (o DnsRecordSrvPtrOutput) Elem() DnsRecordSrvOutput {
	return o.ApplyT(func(v *DnsRecordSrv) DnsRecordSrv {
		if v != nil {
			return *v
		}
		var ret DnsRecordSrv
		return ret
	}).(DnsRecordSrvOutput)
}

// The TCP or UDP port on which the service is to be found.
func (o DnsRecordSrvPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DnsRecordSrv) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// The priority of the target host, lower value means more preferred.
func (o DnsRecordSrvPtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DnsRecordSrv) *int {
		if v == nil {
			return nil
		}
		return &v.Priority
	}).(pulumi.IntPtrOutput)
}

// The canonical hostname of the machine providing the service, ending in a dot.
func (o DnsRecordSrvPtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsRecordSrv) *string {
		if v == nil {
			return nil
		}
		return &v.Target
	}).(pulumi.StringPtrOutput)
}

// A relative weight for records with the same priority, higher value means higher chance of getting picked.
func (o DnsRecordSrvPtrOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DnsRecordSrv) *int {
		if v == nil {
			return nil
		}
		return &v.Weight
	}).(pulumi.IntPtrOutput)
}

type FirewallConfigIpRules struct {
	Rules []FirewallConfigIpRulesRule `pulumi:"rules"`
}

// FirewallConfigIpRulesInput is an input type that accepts FirewallConfigIpRulesArgs and FirewallConfigIpRulesOutput values.
// You can construct a concrete instance of `FirewallConfigIpRulesInput` via:
//
//	FirewallConfigIpRulesArgs{...}
type FirewallConfigIpRulesInput interface {
	pulumi.Input

	ToFirewallConfigIpRulesOutput() FirewallConfigIpRulesOutput
	ToFirewallConfigIpRulesOutputWithContext(context.Context) FirewallConfigIpRulesOutput
}

type FirewallConfigIpRulesArgs struct {
	Rules FirewallConfigIpRulesRuleArrayInput `pulumi:"rules"`
}

func (FirewallConfigIpRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigIpRules)(nil)).Elem()
}

func (i FirewallConfigIpRulesArgs) ToFirewallConfigIpRulesOutput() FirewallConfigIpRulesOutput {
	return i.ToFirewallConfigIpRulesOutputWithContext(context.Background())
}

func (i FirewallConfigIpRulesArgs) ToFirewallConfigIpRulesOutputWithContext(ctx context.Context) FirewallConfigIpRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigIpRulesOutput)
}

func (i FirewallConfigIpRulesArgs) ToFirewallConfigIpRulesPtrOutput() FirewallConfigIpRulesPtrOutput {
	return i.ToFirewallConfigIpRulesPtrOutputWithContext(context.Background())
}

func (i FirewallConfigIpRulesArgs) ToFirewallConfigIpRulesPtrOutputWithContext(ctx context.Context) FirewallConfigIpRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigIpRulesOutput).ToFirewallConfigIpRulesPtrOutputWithContext(ctx)
}

// FirewallConfigIpRulesPtrInput is an input type that accepts FirewallConfigIpRulesArgs, FirewallConfigIpRulesPtr and FirewallConfigIpRulesPtrOutput values.
// You can construct a concrete instance of `FirewallConfigIpRulesPtrInput` via:
//
//	        FirewallConfigIpRulesArgs{...}
//
//	or:
//
//	        nil
type FirewallConfigIpRulesPtrInput interface {
	pulumi.Input

	ToFirewallConfigIpRulesPtrOutput() FirewallConfigIpRulesPtrOutput
	ToFirewallConfigIpRulesPtrOutputWithContext(context.Context) FirewallConfigIpRulesPtrOutput
}

type firewallConfigIpRulesPtrType FirewallConfigIpRulesArgs

func FirewallConfigIpRulesPtr(v *FirewallConfigIpRulesArgs) FirewallConfigIpRulesPtrInput {
	return (*firewallConfigIpRulesPtrType)(v)
}

func (*firewallConfigIpRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallConfigIpRules)(nil)).Elem()
}

func (i *firewallConfigIpRulesPtrType) ToFirewallConfigIpRulesPtrOutput() FirewallConfigIpRulesPtrOutput {
	return i.ToFirewallConfigIpRulesPtrOutputWithContext(context.Background())
}

func (i *firewallConfigIpRulesPtrType) ToFirewallConfigIpRulesPtrOutputWithContext(ctx context.Context) FirewallConfigIpRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigIpRulesPtrOutput)
}

type FirewallConfigIpRulesOutput struct{ *pulumi.OutputState }

func (FirewallConfigIpRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigIpRules)(nil)).Elem()
}

func (o FirewallConfigIpRulesOutput) ToFirewallConfigIpRulesOutput() FirewallConfigIpRulesOutput {
	return o
}

func (o FirewallConfigIpRulesOutput) ToFirewallConfigIpRulesOutputWithContext(ctx context.Context) FirewallConfigIpRulesOutput {
	return o
}

func (o FirewallConfigIpRulesOutput) ToFirewallConfigIpRulesPtrOutput() FirewallConfigIpRulesPtrOutput {
	return o.ToFirewallConfigIpRulesPtrOutputWithContext(context.Background())
}

func (o FirewallConfigIpRulesOutput) ToFirewallConfigIpRulesPtrOutputWithContext(ctx context.Context) FirewallConfigIpRulesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallConfigIpRules) *FirewallConfigIpRules {
		return &v
	}).(FirewallConfigIpRulesPtrOutput)
}

func (o FirewallConfigIpRulesOutput) Rules() FirewallConfigIpRulesRuleArrayOutput {
	return o.ApplyT(func(v FirewallConfigIpRules) []FirewallConfigIpRulesRule { return v.Rules }).(FirewallConfigIpRulesRuleArrayOutput)
}

type FirewallConfigIpRulesPtrOutput struct{ *pulumi.OutputState }

func (FirewallConfigIpRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallConfigIpRules)(nil)).Elem()
}

func (o FirewallConfigIpRulesPtrOutput) ToFirewallConfigIpRulesPtrOutput() FirewallConfigIpRulesPtrOutput {
	return o
}

func (o FirewallConfigIpRulesPtrOutput) ToFirewallConfigIpRulesPtrOutputWithContext(ctx context.Context) FirewallConfigIpRulesPtrOutput {
	return o
}

func (o FirewallConfigIpRulesPtrOutput) Elem() FirewallConfigIpRulesOutput {
	return o.ApplyT(func(v *FirewallConfigIpRules) FirewallConfigIpRules {
		if v != nil {
			return *v
		}
		var ret FirewallConfigIpRules
		return ret
	}).(FirewallConfigIpRulesOutput)
}

func (o FirewallConfigIpRulesPtrOutput) Rules() FirewallConfigIpRulesRuleArrayOutput {
	return o.ApplyT(func(v *FirewallConfigIpRules) []FirewallConfigIpRulesRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(FirewallConfigIpRulesRuleArrayOutput)
}

type FirewallConfigIpRulesRule struct {
	Action string `pulumi:"action"`
	// Hosts to apply these rules to
	Hostname string  `pulumi:"hostname"`
	Id       *string `pulumi:"id"`
	// IP or CIDR to block
	Ip    string  `pulumi:"ip"`
	Notes *string `pulumi:"notes"`
}

// FirewallConfigIpRulesRuleInput is an input type that accepts FirewallConfigIpRulesRuleArgs and FirewallConfigIpRulesRuleOutput values.
// You can construct a concrete instance of `FirewallConfigIpRulesRuleInput` via:
//
//	FirewallConfigIpRulesRuleArgs{...}
type FirewallConfigIpRulesRuleInput interface {
	pulumi.Input

	ToFirewallConfigIpRulesRuleOutput() FirewallConfigIpRulesRuleOutput
	ToFirewallConfigIpRulesRuleOutputWithContext(context.Context) FirewallConfigIpRulesRuleOutput
}

type FirewallConfigIpRulesRuleArgs struct {
	Action pulumi.StringInput `pulumi:"action"`
	// Hosts to apply these rules to
	Hostname pulumi.StringInput    `pulumi:"hostname"`
	Id       pulumi.StringPtrInput `pulumi:"id"`
	// IP or CIDR to block
	Ip    pulumi.StringInput    `pulumi:"ip"`
	Notes pulumi.StringPtrInput `pulumi:"notes"`
}

func (FirewallConfigIpRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigIpRulesRule)(nil)).Elem()
}

func (i FirewallConfigIpRulesRuleArgs) ToFirewallConfigIpRulesRuleOutput() FirewallConfigIpRulesRuleOutput {
	return i.ToFirewallConfigIpRulesRuleOutputWithContext(context.Background())
}

func (i FirewallConfigIpRulesRuleArgs) ToFirewallConfigIpRulesRuleOutputWithContext(ctx context.Context) FirewallConfigIpRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigIpRulesRuleOutput)
}

// FirewallConfigIpRulesRuleArrayInput is an input type that accepts FirewallConfigIpRulesRuleArray and FirewallConfigIpRulesRuleArrayOutput values.
// You can construct a concrete instance of `FirewallConfigIpRulesRuleArrayInput` via:
//
//	FirewallConfigIpRulesRuleArray{ FirewallConfigIpRulesRuleArgs{...} }
type FirewallConfigIpRulesRuleArrayInput interface {
	pulumi.Input

	ToFirewallConfigIpRulesRuleArrayOutput() FirewallConfigIpRulesRuleArrayOutput
	ToFirewallConfigIpRulesRuleArrayOutputWithContext(context.Context) FirewallConfigIpRulesRuleArrayOutput
}

type FirewallConfigIpRulesRuleArray []FirewallConfigIpRulesRuleInput

func (FirewallConfigIpRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallConfigIpRulesRule)(nil)).Elem()
}

func (i FirewallConfigIpRulesRuleArray) ToFirewallConfigIpRulesRuleArrayOutput() FirewallConfigIpRulesRuleArrayOutput {
	return i.ToFirewallConfigIpRulesRuleArrayOutputWithContext(context.Background())
}

func (i FirewallConfigIpRulesRuleArray) ToFirewallConfigIpRulesRuleArrayOutputWithContext(ctx context.Context) FirewallConfigIpRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigIpRulesRuleArrayOutput)
}

type FirewallConfigIpRulesRuleOutput struct{ *pulumi.OutputState }

func (FirewallConfigIpRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigIpRulesRule)(nil)).Elem()
}

func (o FirewallConfigIpRulesRuleOutput) ToFirewallConfigIpRulesRuleOutput() FirewallConfigIpRulesRuleOutput {
	return o
}

func (o FirewallConfigIpRulesRuleOutput) ToFirewallConfigIpRulesRuleOutputWithContext(ctx context.Context) FirewallConfigIpRulesRuleOutput {
	return o
}

func (o FirewallConfigIpRulesRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallConfigIpRulesRule) string { return v.Action }).(pulumi.StringOutput)
}

// Hosts to apply these rules to
func (o FirewallConfigIpRulesRuleOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallConfigIpRulesRule) string { return v.Hostname }).(pulumi.StringOutput)
}

func (o FirewallConfigIpRulesRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallConfigIpRulesRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// IP or CIDR to block
func (o FirewallConfigIpRulesRuleOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallConfigIpRulesRule) string { return v.Ip }).(pulumi.StringOutput)
}

func (o FirewallConfigIpRulesRuleOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallConfigIpRulesRule) *string { return v.Notes }).(pulumi.StringPtrOutput)
}

type FirewallConfigIpRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (FirewallConfigIpRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallConfigIpRulesRule)(nil)).Elem()
}

func (o FirewallConfigIpRulesRuleArrayOutput) ToFirewallConfigIpRulesRuleArrayOutput() FirewallConfigIpRulesRuleArrayOutput {
	return o
}

func (o FirewallConfigIpRulesRuleArrayOutput) ToFirewallConfigIpRulesRuleArrayOutputWithContext(ctx context.Context) FirewallConfigIpRulesRuleArrayOutput {
	return o
}

func (o FirewallConfigIpRulesRuleArrayOutput) Index(i pulumi.IntInput) FirewallConfigIpRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallConfigIpRulesRule {
		return vs[0].([]FirewallConfigIpRulesRule)[vs[1].(int)]
	}).(FirewallConfigIpRulesRuleOutput)
}

type FirewallConfigManagedRulesets struct {
	// Enable the bot*filter managed ruleset and select action
	BotFilter *FirewallConfigManagedRulesetsBotFilter `pulumi:"botFilter"`
	// Enable the owasp managed rulesets and select ruleset behaviors
	Owasp *FirewallConfigManagedRulesetsOwasp `pulumi:"owasp"`
}

// FirewallConfigManagedRulesetsInput is an input type that accepts FirewallConfigManagedRulesetsArgs and FirewallConfigManagedRulesetsOutput values.
// You can construct a concrete instance of `FirewallConfigManagedRulesetsInput` via:
//
//	FirewallConfigManagedRulesetsArgs{...}
type FirewallConfigManagedRulesetsInput interface {
	pulumi.Input

	ToFirewallConfigManagedRulesetsOutput() FirewallConfigManagedRulesetsOutput
	ToFirewallConfigManagedRulesetsOutputWithContext(context.Context) FirewallConfigManagedRulesetsOutput
}

type FirewallConfigManagedRulesetsArgs struct {
	// Enable the bot*filter managed ruleset and select action
	BotFilter FirewallConfigManagedRulesetsBotFilterPtrInput `pulumi:"botFilter"`
	// Enable the owasp managed rulesets and select ruleset behaviors
	Owasp FirewallConfigManagedRulesetsOwaspPtrInput `pulumi:"owasp"`
}

func (FirewallConfigManagedRulesetsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigManagedRulesets)(nil)).Elem()
}

func (i FirewallConfigManagedRulesetsArgs) ToFirewallConfigManagedRulesetsOutput() FirewallConfigManagedRulesetsOutput {
	return i.ToFirewallConfigManagedRulesetsOutputWithContext(context.Background())
}

func (i FirewallConfigManagedRulesetsArgs) ToFirewallConfigManagedRulesetsOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigManagedRulesetsOutput)
}

func (i FirewallConfigManagedRulesetsArgs) ToFirewallConfigManagedRulesetsPtrOutput() FirewallConfigManagedRulesetsPtrOutput {
	return i.ToFirewallConfigManagedRulesetsPtrOutputWithContext(context.Background())
}

func (i FirewallConfigManagedRulesetsArgs) ToFirewallConfigManagedRulesetsPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigManagedRulesetsOutput).ToFirewallConfigManagedRulesetsPtrOutputWithContext(ctx)
}

// FirewallConfigManagedRulesetsPtrInput is an input type that accepts FirewallConfigManagedRulesetsArgs, FirewallConfigManagedRulesetsPtr and FirewallConfigManagedRulesetsPtrOutput values.
// You can construct a concrete instance of `FirewallConfigManagedRulesetsPtrInput` via:
//
//	        FirewallConfigManagedRulesetsArgs{...}
//
//	or:
//
//	        nil
type FirewallConfigManagedRulesetsPtrInput interface {
	pulumi.Input

	ToFirewallConfigManagedRulesetsPtrOutput() FirewallConfigManagedRulesetsPtrOutput
	ToFirewallConfigManagedRulesetsPtrOutputWithContext(context.Context) FirewallConfigManagedRulesetsPtrOutput
}

type firewallConfigManagedRulesetsPtrType FirewallConfigManagedRulesetsArgs

func FirewallConfigManagedRulesetsPtr(v *FirewallConfigManagedRulesetsArgs) FirewallConfigManagedRulesetsPtrInput {
	return (*firewallConfigManagedRulesetsPtrType)(v)
}

func (*firewallConfigManagedRulesetsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallConfigManagedRulesets)(nil)).Elem()
}

func (i *firewallConfigManagedRulesetsPtrType) ToFirewallConfigManagedRulesetsPtrOutput() FirewallConfigManagedRulesetsPtrOutput {
	return i.ToFirewallConfigManagedRulesetsPtrOutputWithContext(context.Background())
}

func (i *firewallConfigManagedRulesetsPtrType) ToFirewallConfigManagedRulesetsPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigManagedRulesetsPtrOutput)
}

type FirewallConfigManagedRulesetsOutput struct{ *pulumi.OutputState }

func (FirewallConfigManagedRulesetsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigManagedRulesets)(nil)).Elem()
}

func (o FirewallConfigManagedRulesetsOutput) ToFirewallConfigManagedRulesetsOutput() FirewallConfigManagedRulesetsOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOutput) ToFirewallConfigManagedRulesetsOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOutput) ToFirewallConfigManagedRulesetsPtrOutput() FirewallConfigManagedRulesetsPtrOutput {
	return o.ToFirewallConfigManagedRulesetsPtrOutputWithContext(context.Background())
}

func (o FirewallConfigManagedRulesetsOutput) ToFirewallConfigManagedRulesetsPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallConfigManagedRulesets) *FirewallConfigManagedRulesets {
		return &v
	}).(FirewallConfigManagedRulesetsPtrOutput)
}

// Enable the bot*filter managed ruleset and select action
func (o FirewallConfigManagedRulesetsOutput) BotFilter() FirewallConfigManagedRulesetsBotFilterPtrOutput {
	return o.ApplyT(func(v FirewallConfigManagedRulesets) *FirewallConfigManagedRulesetsBotFilter { return v.BotFilter }).(FirewallConfigManagedRulesetsBotFilterPtrOutput)
}

// Enable the owasp managed rulesets and select ruleset behaviors
func (o FirewallConfigManagedRulesetsOutput) Owasp() FirewallConfigManagedRulesetsOwaspPtrOutput {
	return o.ApplyT(func(v FirewallConfigManagedRulesets) *FirewallConfigManagedRulesetsOwasp { return v.Owasp }).(FirewallConfigManagedRulesetsOwaspPtrOutput)
}

type FirewallConfigManagedRulesetsPtrOutput struct{ *pulumi.OutputState }

func (FirewallConfigManagedRulesetsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallConfigManagedRulesets)(nil)).Elem()
}

func (o FirewallConfigManagedRulesetsPtrOutput) ToFirewallConfigManagedRulesetsPtrOutput() FirewallConfigManagedRulesetsPtrOutput {
	return o
}

func (o FirewallConfigManagedRulesetsPtrOutput) ToFirewallConfigManagedRulesetsPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsPtrOutput {
	return o
}

func (o FirewallConfigManagedRulesetsPtrOutput) Elem() FirewallConfigManagedRulesetsOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesets) FirewallConfigManagedRulesets {
		if v != nil {
			return *v
		}
		var ret FirewallConfigManagedRulesets
		return ret
	}).(FirewallConfigManagedRulesetsOutput)
}

// Enable the bot*filter managed ruleset and select action
func (o FirewallConfigManagedRulesetsPtrOutput) BotFilter() FirewallConfigManagedRulesetsBotFilterPtrOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesets) *FirewallConfigManagedRulesetsBotFilter {
		if v == nil {
			return nil
		}
		return v.BotFilter
	}).(FirewallConfigManagedRulesetsBotFilterPtrOutput)
}

// Enable the owasp managed rulesets and select ruleset behaviors
func (o FirewallConfigManagedRulesetsPtrOutput) Owasp() FirewallConfigManagedRulesetsOwaspPtrOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesets) *FirewallConfigManagedRulesetsOwasp {
		if v == nil {
			return nil
		}
		return v.Owasp
	}).(FirewallConfigManagedRulesetsOwaspPtrOutput)
}

type FirewallConfigManagedRulesetsBotFilter struct {
	Action *string `pulumi:"action"`
	Active *bool   `pulumi:"active"`
}

// FirewallConfigManagedRulesetsBotFilterInput is an input type that accepts FirewallConfigManagedRulesetsBotFilterArgs and FirewallConfigManagedRulesetsBotFilterOutput values.
// You can construct a concrete instance of `FirewallConfigManagedRulesetsBotFilterInput` via:
//
//	FirewallConfigManagedRulesetsBotFilterArgs{...}
type FirewallConfigManagedRulesetsBotFilterInput interface {
	pulumi.Input

	ToFirewallConfigManagedRulesetsBotFilterOutput() FirewallConfigManagedRulesetsBotFilterOutput
	ToFirewallConfigManagedRulesetsBotFilterOutputWithContext(context.Context) FirewallConfigManagedRulesetsBotFilterOutput
}

type FirewallConfigManagedRulesetsBotFilterArgs struct {
	Action pulumi.StringPtrInput `pulumi:"action"`
	Active pulumi.BoolPtrInput   `pulumi:"active"`
}

func (FirewallConfigManagedRulesetsBotFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigManagedRulesetsBotFilter)(nil)).Elem()
}

func (i FirewallConfigManagedRulesetsBotFilterArgs) ToFirewallConfigManagedRulesetsBotFilterOutput() FirewallConfigManagedRulesetsBotFilterOutput {
	return i.ToFirewallConfigManagedRulesetsBotFilterOutputWithContext(context.Background())
}

func (i FirewallConfigManagedRulesetsBotFilterArgs) ToFirewallConfigManagedRulesetsBotFilterOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsBotFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigManagedRulesetsBotFilterOutput)
}

func (i FirewallConfigManagedRulesetsBotFilterArgs) ToFirewallConfigManagedRulesetsBotFilterPtrOutput() FirewallConfigManagedRulesetsBotFilterPtrOutput {
	return i.ToFirewallConfigManagedRulesetsBotFilterPtrOutputWithContext(context.Background())
}

func (i FirewallConfigManagedRulesetsBotFilterArgs) ToFirewallConfigManagedRulesetsBotFilterPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsBotFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigManagedRulesetsBotFilterOutput).ToFirewallConfigManagedRulesetsBotFilterPtrOutputWithContext(ctx)
}

// FirewallConfigManagedRulesetsBotFilterPtrInput is an input type that accepts FirewallConfigManagedRulesetsBotFilterArgs, FirewallConfigManagedRulesetsBotFilterPtr and FirewallConfigManagedRulesetsBotFilterPtrOutput values.
// You can construct a concrete instance of `FirewallConfigManagedRulesetsBotFilterPtrInput` via:
//
//	        FirewallConfigManagedRulesetsBotFilterArgs{...}
//
//	or:
//
//	        nil
type FirewallConfigManagedRulesetsBotFilterPtrInput interface {
	pulumi.Input

	ToFirewallConfigManagedRulesetsBotFilterPtrOutput() FirewallConfigManagedRulesetsBotFilterPtrOutput
	ToFirewallConfigManagedRulesetsBotFilterPtrOutputWithContext(context.Context) FirewallConfigManagedRulesetsBotFilterPtrOutput
}

type firewallConfigManagedRulesetsBotFilterPtrType FirewallConfigManagedRulesetsBotFilterArgs

func FirewallConfigManagedRulesetsBotFilterPtr(v *FirewallConfigManagedRulesetsBotFilterArgs) FirewallConfigManagedRulesetsBotFilterPtrInput {
	return (*firewallConfigManagedRulesetsBotFilterPtrType)(v)
}

func (*firewallConfigManagedRulesetsBotFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallConfigManagedRulesetsBotFilter)(nil)).Elem()
}

func (i *firewallConfigManagedRulesetsBotFilterPtrType) ToFirewallConfigManagedRulesetsBotFilterPtrOutput() FirewallConfigManagedRulesetsBotFilterPtrOutput {
	return i.ToFirewallConfigManagedRulesetsBotFilterPtrOutputWithContext(context.Background())
}

func (i *firewallConfigManagedRulesetsBotFilterPtrType) ToFirewallConfigManagedRulesetsBotFilterPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsBotFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigManagedRulesetsBotFilterPtrOutput)
}

type FirewallConfigManagedRulesetsBotFilterOutput struct{ *pulumi.OutputState }

func (FirewallConfigManagedRulesetsBotFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigManagedRulesetsBotFilter)(nil)).Elem()
}

func (o FirewallConfigManagedRulesetsBotFilterOutput) ToFirewallConfigManagedRulesetsBotFilterOutput() FirewallConfigManagedRulesetsBotFilterOutput {
	return o
}

func (o FirewallConfigManagedRulesetsBotFilterOutput) ToFirewallConfigManagedRulesetsBotFilterOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsBotFilterOutput {
	return o
}

func (o FirewallConfigManagedRulesetsBotFilterOutput) ToFirewallConfigManagedRulesetsBotFilterPtrOutput() FirewallConfigManagedRulesetsBotFilterPtrOutput {
	return o.ToFirewallConfigManagedRulesetsBotFilterPtrOutputWithContext(context.Background())
}

func (o FirewallConfigManagedRulesetsBotFilterOutput) ToFirewallConfigManagedRulesetsBotFilterPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsBotFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallConfigManagedRulesetsBotFilter) *FirewallConfigManagedRulesetsBotFilter {
		return &v
	}).(FirewallConfigManagedRulesetsBotFilterPtrOutput)
}

func (o FirewallConfigManagedRulesetsBotFilterOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallConfigManagedRulesetsBotFilter) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o FirewallConfigManagedRulesetsBotFilterOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirewallConfigManagedRulesetsBotFilter) *bool { return v.Active }).(pulumi.BoolPtrOutput)
}

type FirewallConfigManagedRulesetsBotFilterPtrOutput struct{ *pulumi.OutputState }

func (FirewallConfigManagedRulesetsBotFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallConfigManagedRulesetsBotFilter)(nil)).Elem()
}

func (o FirewallConfigManagedRulesetsBotFilterPtrOutput) ToFirewallConfigManagedRulesetsBotFilterPtrOutput() FirewallConfigManagedRulesetsBotFilterPtrOutput {
	return o
}

func (o FirewallConfigManagedRulesetsBotFilterPtrOutput) ToFirewallConfigManagedRulesetsBotFilterPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsBotFilterPtrOutput {
	return o
}

func (o FirewallConfigManagedRulesetsBotFilterPtrOutput) Elem() FirewallConfigManagedRulesetsBotFilterOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsBotFilter) FirewallConfigManagedRulesetsBotFilter {
		if v != nil {
			return *v
		}
		var ret FirewallConfigManagedRulesetsBotFilter
		return ret
	}).(FirewallConfigManagedRulesetsBotFilterOutput)
}

func (o FirewallConfigManagedRulesetsBotFilterPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsBotFilter) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

func (o FirewallConfigManagedRulesetsBotFilterPtrOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsBotFilter) *bool {
		if v == nil {
			return nil
		}
		return v.Active
	}).(pulumi.BoolPtrOutput)
}

type FirewallConfigManagedRulesetsOwasp struct {
	// Generic Attack Detection
	Gen *FirewallConfigManagedRulesetsOwaspGen `pulumi:"gen"`
	// Java Attack Detection
	Java *FirewallConfigManagedRulesetsOwaspJava `pulumi:"java"`
	// Local File Inclusion Rules
	Lfi *FirewallConfigManagedRulesetsOwaspLfi `pulumi:"lfi"`
	// Multipart Rules
	Ma *FirewallConfigManagedRulesetsOwaspMa `pulumi:"ma"`
	// PHP Attack Detection
	Php *FirewallConfigManagedRulesetsOwaspPhp `pulumi:"php"`
	// Remote Code Execution Rules
	Rce *FirewallConfigManagedRulesetsOwaspRce `pulumi:"rce"`
	// Remote File Inclusion Rules
	Rfi *FirewallConfigManagedRulesetsOwaspRfi `pulumi:"rfi"`
	// Scanner Detection Rules
	Sd *FirewallConfigManagedRulesetsOwaspSd `pulumi:"sd"`
	// SQL Injection Rules
	Sqli *FirewallConfigManagedRulesetsOwaspSqli `pulumi:"sqli"`
	// Cross Site Scripting Rules
	Xss *FirewallConfigManagedRulesetsOwaspXss `pulumi:"xss"`
}

// FirewallConfigManagedRulesetsOwaspInput is an input type that accepts FirewallConfigManagedRulesetsOwaspArgs and FirewallConfigManagedRulesetsOwaspOutput values.
// You can construct a concrete instance of `FirewallConfigManagedRulesetsOwaspInput` via:
//
//	FirewallConfigManagedRulesetsOwaspArgs{...}
type FirewallConfigManagedRulesetsOwaspInput interface {
	pulumi.Input

	ToFirewallConfigManagedRulesetsOwaspOutput() FirewallConfigManagedRulesetsOwaspOutput
	ToFirewallConfigManagedRulesetsOwaspOutputWithContext(context.Context) FirewallConfigManagedRulesetsOwaspOutput
}

type FirewallConfigManagedRulesetsOwaspArgs struct {
	// Generic Attack Detection
	Gen FirewallConfigManagedRulesetsOwaspGenPtrInput `pulumi:"gen"`
	// Java Attack Detection
	Java FirewallConfigManagedRulesetsOwaspJavaPtrInput `pulumi:"java"`
	// Local File Inclusion Rules
	Lfi FirewallConfigManagedRulesetsOwaspLfiPtrInput `pulumi:"lfi"`
	// Multipart Rules
	Ma FirewallConfigManagedRulesetsOwaspMaPtrInput `pulumi:"ma"`
	// PHP Attack Detection
	Php FirewallConfigManagedRulesetsOwaspPhpPtrInput `pulumi:"php"`
	// Remote Code Execution Rules
	Rce FirewallConfigManagedRulesetsOwaspRcePtrInput `pulumi:"rce"`
	// Remote File Inclusion Rules
	Rfi FirewallConfigManagedRulesetsOwaspRfiPtrInput `pulumi:"rfi"`
	// Scanner Detection Rules
	Sd FirewallConfigManagedRulesetsOwaspSdPtrInput `pulumi:"sd"`
	// SQL Injection Rules
	Sqli FirewallConfigManagedRulesetsOwaspSqliPtrInput `pulumi:"sqli"`
	// Cross Site Scripting Rules
	Xss FirewallConfigManagedRulesetsOwaspXssPtrInput `pulumi:"xss"`
}

func (FirewallConfigManagedRulesetsOwaspArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigManagedRulesetsOwasp)(nil)).Elem()
}

func (i FirewallConfigManagedRulesetsOwaspArgs) ToFirewallConfigManagedRulesetsOwaspOutput() FirewallConfigManagedRulesetsOwaspOutput {
	return i.ToFirewallConfigManagedRulesetsOwaspOutputWithContext(context.Background())
}

func (i FirewallConfigManagedRulesetsOwaspArgs) ToFirewallConfigManagedRulesetsOwaspOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigManagedRulesetsOwaspOutput)
}

func (i FirewallConfigManagedRulesetsOwaspArgs) ToFirewallConfigManagedRulesetsOwaspPtrOutput() FirewallConfigManagedRulesetsOwaspPtrOutput {
	return i.ToFirewallConfigManagedRulesetsOwaspPtrOutputWithContext(context.Background())
}

func (i FirewallConfigManagedRulesetsOwaspArgs) ToFirewallConfigManagedRulesetsOwaspPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigManagedRulesetsOwaspOutput).ToFirewallConfigManagedRulesetsOwaspPtrOutputWithContext(ctx)
}

// FirewallConfigManagedRulesetsOwaspPtrInput is an input type that accepts FirewallConfigManagedRulesetsOwaspArgs, FirewallConfigManagedRulesetsOwaspPtr and FirewallConfigManagedRulesetsOwaspPtrOutput values.
// You can construct a concrete instance of `FirewallConfigManagedRulesetsOwaspPtrInput` via:
//
//	        FirewallConfigManagedRulesetsOwaspArgs{...}
//
//	or:
//
//	        nil
type FirewallConfigManagedRulesetsOwaspPtrInput interface {
	pulumi.Input

	ToFirewallConfigManagedRulesetsOwaspPtrOutput() FirewallConfigManagedRulesetsOwaspPtrOutput
	ToFirewallConfigManagedRulesetsOwaspPtrOutputWithContext(context.Context) FirewallConfigManagedRulesetsOwaspPtrOutput
}

type firewallConfigManagedRulesetsOwaspPtrType FirewallConfigManagedRulesetsOwaspArgs

func FirewallConfigManagedRulesetsOwaspPtr(v *FirewallConfigManagedRulesetsOwaspArgs) FirewallConfigManagedRulesetsOwaspPtrInput {
	return (*firewallConfigManagedRulesetsOwaspPtrType)(v)
}

func (*firewallConfigManagedRulesetsOwaspPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallConfigManagedRulesetsOwasp)(nil)).Elem()
}

func (i *firewallConfigManagedRulesetsOwaspPtrType) ToFirewallConfigManagedRulesetsOwaspPtrOutput() FirewallConfigManagedRulesetsOwaspPtrOutput {
	return i.ToFirewallConfigManagedRulesetsOwaspPtrOutputWithContext(context.Background())
}

func (i *firewallConfigManagedRulesetsOwaspPtrType) ToFirewallConfigManagedRulesetsOwaspPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigManagedRulesetsOwaspPtrOutput)
}

type FirewallConfigManagedRulesetsOwaspOutput struct{ *pulumi.OutputState }

func (FirewallConfigManagedRulesetsOwaspOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigManagedRulesetsOwasp)(nil)).Elem()
}

func (o FirewallConfigManagedRulesetsOwaspOutput) ToFirewallConfigManagedRulesetsOwaspOutput() FirewallConfigManagedRulesetsOwaspOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspOutput) ToFirewallConfigManagedRulesetsOwaspOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspOutput) ToFirewallConfigManagedRulesetsOwaspPtrOutput() FirewallConfigManagedRulesetsOwaspPtrOutput {
	return o.ToFirewallConfigManagedRulesetsOwaspPtrOutputWithContext(context.Background())
}

func (o FirewallConfigManagedRulesetsOwaspOutput) ToFirewallConfigManagedRulesetsOwaspPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallConfigManagedRulesetsOwasp) *FirewallConfigManagedRulesetsOwasp {
		return &v
	}).(FirewallConfigManagedRulesetsOwaspPtrOutput)
}

// Generic Attack Detection
func (o FirewallConfigManagedRulesetsOwaspOutput) Gen() FirewallConfigManagedRulesetsOwaspGenPtrOutput {
	return o.ApplyT(func(v FirewallConfigManagedRulesetsOwasp) *FirewallConfigManagedRulesetsOwaspGen { return v.Gen }).(FirewallConfigManagedRulesetsOwaspGenPtrOutput)
}

// Java Attack Detection
func (o FirewallConfigManagedRulesetsOwaspOutput) Java() FirewallConfigManagedRulesetsOwaspJavaPtrOutput {
	return o.ApplyT(func(v FirewallConfigManagedRulesetsOwasp) *FirewallConfigManagedRulesetsOwaspJava { return v.Java }).(FirewallConfigManagedRulesetsOwaspJavaPtrOutput)
}

// Local File Inclusion Rules
func (o FirewallConfigManagedRulesetsOwaspOutput) Lfi() FirewallConfigManagedRulesetsOwaspLfiPtrOutput {
	return o.ApplyT(func(v FirewallConfigManagedRulesetsOwasp) *FirewallConfigManagedRulesetsOwaspLfi { return v.Lfi }).(FirewallConfigManagedRulesetsOwaspLfiPtrOutput)
}

// Multipart Rules
func (o FirewallConfigManagedRulesetsOwaspOutput) Ma() FirewallConfigManagedRulesetsOwaspMaPtrOutput {
	return o.ApplyT(func(v FirewallConfigManagedRulesetsOwasp) *FirewallConfigManagedRulesetsOwaspMa { return v.Ma }).(FirewallConfigManagedRulesetsOwaspMaPtrOutput)
}

// PHP Attack Detection
func (o FirewallConfigManagedRulesetsOwaspOutput) Php() FirewallConfigManagedRulesetsOwaspPhpPtrOutput {
	return o.ApplyT(func(v FirewallConfigManagedRulesetsOwasp) *FirewallConfigManagedRulesetsOwaspPhp { return v.Php }).(FirewallConfigManagedRulesetsOwaspPhpPtrOutput)
}

// Remote Code Execution Rules
func (o FirewallConfigManagedRulesetsOwaspOutput) Rce() FirewallConfigManagedRulesetsOwaspRcePtrOutput {
	return o.ApplyT(func(v FirewallConfigManagedRulesetsOwasp) *FirewallConfigManagedRulesetsOwaspRce { return v.Rce }).(FirewallConfigManagedRulesetsOwaspRcePtrOutput)
}

// Remote File Inclusion Rules
func (o FirewallConfigManagedRulesetsOwaspOutput) Rfi() FirewallConfigManagedRulesetsOwaspRfiPtrOutput {
	return o.ApplyT(func(v FirewallConfigManagedRulesetsOwasp) *FirewallConfigManagedRulesetsOwaspRfi { return v.Rfi }).(FirewallConfigManagedRulesetsOwaspRfiPtrOutput)
}

// Scanner Detection Rules
func (o FirewallConfigManagedRulesetsOwaspOutput) Sd() FirewallConfigManagedRulesetsOwaspSdPtrOutput {
	return o.ApplyT(func(v FirewallConfigManagedRulesetsOwasp) *FirewallConfigManagedRulesetsOwaspSd { return v.Sd }).(FirewallConfigManagedRulesetsOwaspSdPtrOutput)
}

// SQL Injection Rules
func (o FirewallConfigManagedRulesetsOwaspOutput) Sqli() FirewallConfigManagedRulesetsOwaspSqliPtrOutput {
	return o.ApplyT(func(v FirewallConfigManagedRulesetsOwasp) *FirewallConfigManagedRulesetsOwaspSqli { return v.Sqli }).(FirewallConfigManagedRulesetsOwaspSqliPtrOutput)
}

// Cross Site Scripting Rules
func (o FirewallConfigManagedRulesetsOwaspOutput) Xss() FirewallConfigManagedRulesetsOwaspXssPtrOutput {
	return o.ApplyT(func(v FirewallConfigManagedRulesetsOwasp) *FirewallConfigManagedRulesetsOwaspXss { return v.Xss }).(FirewallConfigManagedRulesetsOwaspXssPtrOutput)
}

type FirewallConfigManagedRulesetsOwaspPtrOutput struct{ *pulumi.OutputState }

func (FirewallConfigManagedRulesetsOwaspPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallConfigManagedRulesetsOwasp)(nil)).Elem()
}

func (o FirewallConfigManagedRulesetsOwaspPtrOutput) ToFirewallConfigManagedRulesetsOwaspPtrOutput() FirewallConfigManagedRulesetsOwaspPtrOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspPtrOutput) ToFirewallConfigManagedRulesetsOwaspPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspPtrOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspPtrOutput) Elem() FirewallConfigManagedRulesetsOwaspOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwasp) FirewallConfigManagedRulesetsOwasp {
		if v != nil {
			return *v
		}
		var ret FirewallConfigManagedRulesetsOwasp
		return ret
	}).(FirewallConfigManagedRulesetsOwaspOutput)
}

// Generic Attack Detection
func (o FirewallConfigManagedRulesetsOwaspPtrOutput) Gen() FirewallConfigManagedRulesetsOwaspGenPtrOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwasp) *FirewallConfigManagedRulesetsOwaspGen {
		if v == nil {
			return nil
		}
		return v.Gen
	}).(FirewallConfigManagedRulesetsOwaspGenPtrOutput)
}

// Java Attack Detection
func (o FirewallConfigManagedRulesetsOwaspPtrOutput) Java() FirewallConfigManagedRulesetsOwaspJavaPtrOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwasp) *FirewallConfigManagedRulesetsOwaspJava {
		if v == nil {
			return nil
		}
		return v.Java
	}).(FirewallConfigManagedRulesetsOwaspJavaPtrOutput)
}

// Local File Inclusion Rules
func (o FirewallConfigManagedRulesetsOwaspPtrOutput) Lfi() FirewallConfigManagedRulesetsOwaspLfiPtrOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwasp) *FirewallConfigManagedRulesetsOwaspLfi {
		if v == nil {
			return nil
		}
		return v.Lfi
	}).(FirewallConfigManagedRulesetsOwaspLfiPtrOutput)
}

// Multipart Rules
func (o FirewallConfigManagedRulesetsOwaspPtrOutput) Ma() FirewallConfigManagedRulesetsOwaspMaPtrOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwasp) *FirewallConfigManagedRulesetsOwaspMa {
		if v == nil {
			return nil
		}
		return v.Ma
	}).(FirewallConfigManagedRulesetsOwaspMaPtrOutput)
}

// PHP Attack Detection
func (o FirewallConfigManagedRulesetsOwaspPtrOutput) Php() FirewallConfigManagedRulesetsOwaspPhpPtrOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwasp) *FirewallConfigManagedRulesetsOwaspPhp {
		if v == nil {
			return nil
		}
		return v.Php
	}).(FirewallConfigManagedRulesetsOwaspPhpPtrOutput)
}

// Remote Code Execution Rules
func (o FirewallConfigManagedRulesetsOwaspPtrOutput) Rce() FirewallConfigManagedRulesetsOwaspRcePtrOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwasp) *FirewallConfigManagedRulesetsOwaspRce {
		if v == nil {
			return nil
		}
		return v.Rce
	}).(FirewallConfigManagedRulesetsOwaspRcePtrOutput)
}

// Remote File Inclusion Rules
func (o FirewallConfigManagedRulesetsOwaspPtrOutput) Rfi() FirewallConfigManagedRulesetsOwaspRfiPtrOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwasp) *FirewallConfigManagedRulesetsOwaspRfi {
		if v == nil {
			return nil
		}
		return v.Rfi
	}).(FirewallConfigManagedRulesetsOwaspRfiPtrOutput)
}

// Scanner Detection Rules
func (o FirewallConfigManagedRulesetsOwaspPtrOutput) Sd() FirewallConfigManagedRulesetsOwaspSdPtrOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwasp) *FirewallConfigManagedRulesetsOwaspSd {
		if v == nil {
			return nil
		}
		return v.Sd
	}).(FirewallConfigManagedRulesetsOwaspSdPtrOutput)
}

// SQL Injection Rules
func (o FirewallConfigManagedRulesetsOwaspPtrOutput) Sqli() FirewallConfigManagedRulesetsOwaspSqliPtrOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwasp) *FirewallConfigManagedRulesetsOwaspSqli {
		if v == nil {
			return nil
		}
		return v.Sqli
	}).(FirewallConfigManagedRulesetsOwaspSqliPtrOutput)
}

// Cross Site Scripting Rules
func (o FirewallConfigManagedRulesetsOwaspPtrOutput) Xss() FirewallConfigManagedRulesetsOwaspXssPtrOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwasp) *FirewallConfigManagedRulesetsOwaspXss {
		if v == nil {
			return nil
		}
		return v.Xss
	}).(FirewallConfigManagedRulesetsOwaspXssPtrOutput)
}

type FirewallConfigManagedRulesetsOwaspGen struct {
	Action string `pulumi:"action"`
	Active *bool  `pulumi:"active"`
}

// FirewallConfigManagedRulesetsOwaspGenInput is an input type that accepts FirewallConfigManagedRulesetsOwaspGenArgs and FirewallConfigManagedRulesetsOwaspGenOutput values.
// You can construct a concrete instance of `FirewallConfigManagedRulesetsOwaspGenInput` via:
//
//	FirewallConfigManagedRulesetsOwaspGenArgs{...}
type FirewallConfigManagedRulesetsOwaspGenInput interface {
	pulumi.Input

	ToFirewallConfigManagedRulesetsOwaspGenOutput() FirewallConfigManagedRulesetsOwaspGenOutput
	ToFirewallConfigManagedRulesetsOwaspGenOutputWithContext(context.Context) FirewallConfigManagedRulesetsOwaspGenOutput
}

type FirewallConfigManagedRulesetsOwaspGenArgs struct {
	Action pulumi.StringInput  `pulumi:"action"`
	Active pulumi.BoolPtrInput `pulumi:"active"`
}

func (FirewallConfigManagedRulesetsOwaspGenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspGen)(nil)).Elem()
}

func (i FirewallConfigManagedRulesetsOwaspGenArgs) ToFirewallConfigManagedRulesetsOwaspGenOutput() FirewallConfigManagedRulesetsOwaspGenOutput {
	return i.ToFirewallConfigManagedRulesetsOwaspGenOutputWithContext(context.Background())
}

func (i FirewallConfigManagedRulesetsOwaspGenArgs) ToFirewallConfigManagedRulesetsOwaspGenOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspGenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigManagedRulesetsOwaspGenOutput)
}

func (i FirewallConfigManagedRulesetsOwaspGenArgs) ToFirewallConfigManagedRulesetsOwaspGenPtrOutput() FirewallConfigManagedRulesetsOwaspGenPtrOutput {
	return i.ToFirewallConfigManagedRulesetsOwaspGenPtrOutputWithContext(context.Background())
}

func (i FirewallConfigManagedRulesetsOwaspGenArgs) ToFirewallConfigManagedRulesetsOwaspGenPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspGenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigManagedRulesetsOwaspGenOutput).ToFirewallConfigManagedRulesetsOwaspGenPtrOutputWithContext(ctx)
}

// FirewallConfigManagedRulesetsOwaspGenPtrInput is an input type that accepts FirewallConfigManagedRulesetsOwaspGenArgs, FirewallConfigManagedRulesetsOwaspGenPtr and FirewallConfigManagedRulesetsOwaspGenPtrOutput values.
// You can construct a concrete instance of `FirewallConfigManagedRulesetsOwaspGenPtrInput` via:
//
//	        FirewallConfigManagedRulesetsOwaspGenArgs{...}
//
//	or:
//
//	        nil
type FirewallConfigManagedRulesetsOwaspGenPtrInput interface {
	pulumi.Input

	ToFirewallConfigManagedRulesetsOwaspGenPtrOutput() FirewallConfigManagedRulesetsOwaspGenPtrOutput
	ToFirewallConfigManagedRulesetsOwaspGenPtrOutputWithContext(context.Context) FirewallConfigManagedRulesetsOwaspGenPtrOutput
}

type firewallConfigManagedRulesetsOwaspGenPtrType FirewallConfigManagedRulesetsOwaspGenArgs

func FirewallConfigManagedRulesetsOwaspGenPtr(v *FirewallConfigManagedRulesetsOwaspGenArgs) FirewallConfigManagedRulesetsOwaspGenPtrInput {
	return (*firewallConfigManagedRulesetsOwaspGenPtrType)(v)
}

func (*firewallConfigManagedRulesetsOwaspGenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallConfigManagedRulesetsOwaspGen)(nil)).Elem()
}

func (i *firewallConfigManagedRulesetsOwaspGenPtrType) ToFirewallConfigManagedRulesetsOwaspGenPtrOutput() FirewallConfigManagedRulesetsOwaspGenPtrOutput {
	return i.ToFirewallConfigManagedRulesetsOwaspGenPtrOutputWithContext(context.Background())
}

func (i *firewallConfigManagedRulesetsOwaspGenPtrType) ToFirewallConfigManagedRulesetsOwaspGenPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspGenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigManagedRulesetsOwaspGenPtrOutput)
}

type FirewallConfigManagedRulesetsOwaspGenOutput struct{ *pulumi.OutputState }

func (FirewallConfigManagedRulesetsOwaspGenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspGen)(nil)).Elem()
}

func (o FirewallConfigManagedRulesetsOwaspGenOutput) ToFirewallConfigManagedRulesetsOwaspGenOutput() FirewallConfigManagedRulesetsOwaspGenOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspGenOutput) ToFirewallConfigManagedRulesetsOwaspGenOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspGenOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspGenOutput) ToFirewallConfigManagedRulesetsOwaspGenPtrOutput() FirewallConfigManagedRulesetsOwaspGenPtrOutput {
	return o.ToFirewallConfigManagedRulesetsOwaspGenPtrOutputWithContext(context.Background())
}

func (o FirewallConfigManagedRulesetsOwaspGenOutput) ToFirewallConfigManagedRulesetsOwaspGenPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspGenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallConfigManagedRulesetsOwaspGen) *FirewallConfigManagedRulesetsOwaspGen {
		return &v
	}).(FirewallConfigManagedRulesetsOwaspGenPtrOutput)
}

func (o FirewallConfigManagedRulesetsOwaspGenOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallConfigManagedRulesetsOwaspGen) string { return v.Action }).(pulumi.StringOutput)
}

func (o FirewallConfigManagedRulesetsOwaspGenOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirewallConfigManagedRulesetsOwaspGen) *bool { return v.Active }).(pulumi.BoolPtrOutput)
}

type FirewallConfigManagedRulesetsOwaspGenPtrOutput struct{ *pulumi.OutputState }

func (FirewallConfigManagedRulesetsOwaspGenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallConfigManagedRulesetsOwaspGen)(nil)).Elem()
}

func (o FirewallConfigManagedRulesetsOwaspGenPtrOutput) ToFirewallConfigManagedRulesetsOwaspGenPtrOutput() FirewallConfigManagedRulesetsOwaspGenPtrOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspGenPtrOutput) ToFirewallConfigManagedRulesetsOwaspGenPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspGenPtrOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspGenPtrOutput) Elem() FirewallConfigManagedRulesetsOwaspGenOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwaspGen) FirewallConfigManagedRulesetsOwaspGen {
		if v != nil {
			return *v
		}
		var ret FirewallConfigManagedRulesetsOwaspGen
		return ret
	}).(FirewallConfigManagedRulesetsOwaspGenOutput)
}

func (o FirewallConfigManagedRulesetsOwaspGenPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwaspGen) *string {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(pulumi.StringPtrOutput)
}

func (o FirewallConfigManagedRulesetsOwaspGenPtrOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwaspGen) *bool {
		if v == nil {
			return nil
		}
		return v.Active
	}).(pulumi.BoolPtrOutput)
}

type FirewallConfigManagedRulesetsOwaspJava struct {
	Action string `pulumi:"action"`
	Active *bool  `pulumi:"active"`
}

// FirewallConfigManagedRulesetsOwaspJavaInput is an input type that accepts FirewallConfigManagedRulesetsOwaspJavaArgs and FirewallConfigManagedRulesetsOwaspJavaOutput values.
// You can construct a concrete instance of `FirewallConfigManagedRulesetsOwaspJavaInput` via:
//
//	FirewallConfigManagedRulesetsOwaspJavaArgs{...}
type FirewallConfigManagedRulesetsOwaspJavaInput interface {
	pulumi.Input

	ToFirewallConfigManagedRulesetsOwaspJavaOutput() FirewallConfigManagedRulesetsOwaspJavaOutput
	ToFirewallConfigManagedRulesetsOwaspJavaOutputWithContext(context.Context) FirewallConfigManagedRulesetsOwaspJavaOutput
}

type FirewallConfigManagedRulesetsOwaspJavaArgs struct {
	Action pulumi.StringInput  `pulumi:"action"`
	Active pulumi.BoolPtrInput `pulumi:"active"`
}

func (FirewallConfigManagedRulesetsOwaspJavaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspJava)(nil)).Elem()
}

func (i FirewallConfigManagedRulesetsOwaspJavaArgs) ToFirewallConfigManagedRulesetsOwaspJavaOutput() FirewallConfigManagedRulesetsOwaspJavaOutput {
	return i.ToFirewallConfigManagedRulesetsOwaspJavaOutputWithContext(context.Background())
}

func (i FirewallConfigManagedRulesetsOwaspJavaArgs) ToFirewallConfigManagedRulesetsOwaspJavaOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspJavaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigManagedRulesetsOwaspJavaOutput)
}

func (i FirewallConfigManagedRulesetsOwaspJavaArgs) ToFirewallConfigManagedRulesetsOwaspJavaPtrOutput() FirewallConfigManagedRulesetsOwaspJavaPtrOutput {
	return i.ToFirewallConfigManagedRulesetsOwaspJavaPtrOutputWithContext(context.Background())
}

func (i FirewallConfigManagedRulesetsOwaspJavaArgs) ToFirewallConfigManagedRulesetsOwaspJavaPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspJavaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigManagedRulesetsOwaspJavaOutput).ToFirewallConfigManagedRulesetsOwaspJavaPtrOutputWithContext(ctx)
}

// FirewallConfigManagedRulesetsOwaspJavaPtrInput is an input type that accepts FirewallConfigManagedRulesetsOwaspJavaArgs, FirewallConfigManagedRulesetsOwaspJavaPtr and FirewallConfigManagedRulesetsOwaspJavaPtrOutput values.
// You can construct a concrete instance of `FirewallConfigManagedRulesetsOwaspJavaPtrInput` via:
//
//	        FirewallConfigManagedRulesetsOwaspJavaArgs{...}
//
//	or:
//
//	        nil
type FirewallConfigManagedRulesetsOwaspJavaPtrInput interface {
	pulumi.Input

	ToFirewallConfigManagedRulesetsOwaspJavaPtrOutput() FirewallConfigManagedRulesetsOwaspJavaPtrOutput
	ToFirewallConfigManagedRulesetsOwaspJavaPtrOutputWithContext(context.Context) FirewallConfigManagedRulesetsOwaspJavaPtrOutput
}

type firewallConfigManagedRulesetsOwaspJavaPtrType FirewallConfigManagedRulesetsOwaspJavaArgs

func FirewallConfigManagedRulesetsOwaspJavaPtr(v *FirewallConfigManagedRulesetsOwaspJavaArgs) FirewallConfigManagedRulesetsOwaspJavaPtrInput {
	return (*firewallConfigManagedRulesetsOwaspJavaPtrType)(v)
}

func (*firewallConfigManagedRulesetsOwaspJavaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallConfigManagedRulesetsOwaspJava)(nil)).Elem()
}

func (i *firewallConfigManagedRulesetsOwaspJavaPtrType) ToFirewallConfigManagedRulesetsOwaspJavaPtrOutput() FirewallConfigManagedRulesetsOwaspJavaPtrOutput {
	return i.ToFirewallConfigManagedRulesetsOwaspJavaPtrOutputWithContext(context.Background())
}

func (i *firewallConfigManagedRulesetsOwaspJavaPtrType) ToFirewallConfigManagedRulesetsOwaspJavaPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspJavaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigManagedRulesetsOwaspJavaPtrOutput)
}

type FirewallConfigManagedRulesetsOwaspJavaOutput struct{ *pulumi.OutputState }

func (FirewallConfigManagedRulesetsOwaspJavaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspJava)(nil)).Elem()
}

func (o FirewallConfigManagedRulesetsOwaspJavaOutput) ToFirewallConfigManagedRulesetsOwaspJavaOutput() FirewallConfigManagedRulesetsOwaspJavaOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspJavaOutput) ToFirewallConfigManagedRulesetsOwaspJavaOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspJavaOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspJavaOutput) ToFirewallConfigManagedRulesetsOwaspJavaPtrOutput() FirewallConfigManagedRulesetsOwaspJavaPtrOutput {
	return o.ToFirewallConfigManagedRulesetsOwaspJavaPtrOutputWithContext(context.Background())
}

func (o FirewallConfigManagedRulesetsOwaspJavaOutput) ToFirewallConfigManagedRulesetsOwaspJavaPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspJavaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallConfigManagedRulesetsOwaspJava) *FirewallConfigManagedRulesetsOwaspJava {
		return &v
	}).(FirewallConfigManagedRulesetsOwaspJavaPtrOutput)
}

func (o FirewallConfigManagedRulesetsOwaspJavaOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallConfigManagedRulesetsOwaspJava) string { return v.Action }).(pulumi.StringOutput)
}

func (o FirewallConfigManagedRulesetsOwaspJavaOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirewallConfigManagedRulesetsOwaspJava) *bool { return v.Active }).(pulumi.BoolPtrOutput)
}

type FirewallConfigManagedRulesetsOwaspJavaPtrOutput struct{ *pulumi.OutputState }

func (FirewallConfigManagedRulesetsOwaspJavaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallConfigManagedRulesetsOwaspJava)(nil)).Elem()
}

func (o FirewallConfigManagedRulesetsOwaspJavaPtrOutput) ToFirewallConfigManagedRulesetsOwaspJavaPtrOutput() FirewallConfigManagedRulesetsOwaspJavaPtrOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspJavaPtrOutput) ToFirewallConfigManagedRulesetsOwaspJavaPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspJavaPtrOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspJavaPtrOutput) Elem() FirewallConfigManagedRulesetsOwaspJavaOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwaspJava) FirewallConfigManagedRulesetsOwaspJava {
		if v != nil {
			return *v
		}
		var ret FirewallConfigManagedRulesetsOwaspJava
		return ret
	}).(FirewallConfigManagedRulesetsOwaspJavaOutput)
}

func (o FirewallConfigManagedRulesetsOwaspJavaPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwaspJava) *string {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(pulumi.StringPtrOutput)
}

func (o FirewallConfigManagedRulesetsOwaspJavaPtrOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwaspJava) *bool {
		if v == nil {
			return nil
		}
		return v.Active
	}).(pulumi.BoolPtrOutput)
}

type FirewallConfigManagedRulesetsOwaspLfi struct {
	Action string `pulumi:"action"`
	Active *bool  `pulumi:"active"`
}

// FirewallConfigManagedRulesetsOwaspLfiInput is an input type that accepts FirewallConfigManagedRulesetsOwaspLfiArgs and FirewallConfigManagedRulesetsOwaspLfiOutput values.
// You can construct a concrete instance of `FirewallConfigManagedRulesetsOwaspLfiInput` via:
//
//	FirewallConfigManagedRulesetsOwaspLfiArgs{...}
type FirewallConfigManagedRulesetsOwaspLfiInput interface {
	pulumi.Input

	ToFirewallConfigManagedRulesetsOwaspLfiOutput() FirewallConfigManagedRulesetsOwaspLfiOutput
	ToFirewallConfigManagedRulesetsOwaspLfiOutputWithContext(context.Context) FirewallConfigManagedRulesetsOwaspLfiOutput
}

type FirewallConfigManagedRulesetsOwaspLfiArgs struct {
	Action pulumi.StringInput  `pulumi:"action"`
	Active pulumi.BoolPtrInput `pulumi:"active"`
}

func (FirewallConfigManagedRulesetsOwaspLfiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspLfi)(nil)).Elem()
}

func (i FirewallConfigManagedRulesetsOwaspLfiArgs) ToFirewallConfigManagedRulesetsOwaspLfiOutput() FirewallConfigManagedRulesetsOwaspLfiOutput {
	return i.ToFirewallConfigManagedRulesetsOwaspLfiOutputWithContext(context.Background())
}

func (i FirewallConfigManagedRulesetsOwaspLfiArgs) ToFirewallConfigManagedRulesetsOwaspLfiOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspLfiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigManagedRulesetsOwaspLfiOutput)
}

func (i FirewallConfigManagedRulesetsOwaspLfiArgs) ToFirewallConfigManagedRulesetsOwaspLfiPtrOutput() FirewallConfigManagedRulesetsOwaspLfiPtrOutput {
	return i.ToFirewallConfigManagedRulesetsOwaspLfiPtrOutputWithContext(context.Background())
}

func (i FirewallConfigManagedRulesetsOwaspLfiArgs) ToFirewallConfigManagedRulesetsOwaspLfiPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspLfiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigManagedRulesetsOwaspLfiOutput).ToFirewallConfigManagedRulesetsOwaspLfiPtrOutputWithContext(ctx)
}

// FirewallConfigManagedRulesetsOwaspLfiPtrInput is an input type that accepts FirewallConfigManagedRulesetsOwaspLfiArgs, FirewallConfigManagedRulesetsOwaspLfiPtr and FirewallConfigManagedRulesetsOwaspLfiPtrOutput values.
// You can construct a concrete instance of `FirewallConfigManagedRulesetsOwaspLfiPtrInput` via:
//
//	        FirewallConfigManagedRulesetsOwaspLfiArgs{...}
//
//	or:
//
//	        nil
type FirewallConfigManagedRulesetsOwaspLfiPtrInput interface {
	pulumi.Input

	ToFirewallConfigManagedRulesetsOwaspLfiPtrOutput() FirewallConfigManagedRulesetsOwaspLfiPtrOutput
	ToFirewallConfigManagedRulesetsOwaspLfiPtrOutputWithContext(context.Context) FirewallConfigManagedRulesetsOwaspLfiPtrOutput
}

type firewallConfigManagedRulesetsOwaspLfiPtrType FirewallConfigManagedRulesetsOwaspLfiArgs

func FirewallConfigManagedRulesetsOwaspLfiPtr(v *FirewallConfigManagedRulesetsOwaspLfiArgs) FirewallConfigManagedRulesetsOwaspLfiPtrInput {
	return (*firewallConfigManagedRulesetsOwaspLfiPtrType)(v)
}

func (*firewallConfigManagedRulesetsOwaspLfiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallConfigManagedRulesetsOwaspLfi)(nil)).Elem()
}

func (i *firewallConfigManagedRulesetsOwaspLfiPtrType) ToFirewallConfigManagedRulesetsOwaspLfiPtrOutput() FirewallConfigManagedRulesetsOwaspLfiPtrOutput {
	return i.ToFirewallConfigManagedRulesetsOwaspLfiPtrOutputWithContext(context.Background())
}

func (i *firewallConfigManagedRulesetsOwaspLfiPtrType) ToFirewallConfigManagedRulesetsOwaspLfiPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspLfiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigManagedRulesetsOwaspLfiPtrOutput)
}

type FirewallConfigManagedRulesetsOwaspLfiOutput struct{ *pulumi.OutputState }

func (FirewallConfigManagedRulesetsOwaspLfiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspLfi)(nil)).Elem()
}

func (o FirewallConfigManagedRulesetsOwaspLfiOutput) ToFirewallConfigManagedRulesetsOwaspLfiOutput() FirewallConfigManagedRulesetsOwaspLfiOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspLfiOutput) ToFirewallConfigManagedRulesetsOwaspLfiOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspLfiOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspLfiOutput) ToFirewallConfigManagedRulesetsOwaspLfiPtrOutput() FirewallConfigManagedRulesetsOwaspLfiPtrOutput {
	return o.ToFirewallConfigManagedRulesetsOwaspLfiPtrOutputWithContext(context.Background())
}

func (o FirewallConfigManagedRulesetsOwaspLfiOutput) ToFirewallConfigManagedRulesetsOwaspLfiPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspLfiPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallConfigManagedRulesetsOwaspLfi) *FirewallConfigManagedRulesetsOwaspLfi {
		return &v
	}).(FirewallConfigManagedRulesetsOwaspLfiPtrOutput)
}

func (o FirewallConfigManagedRulesetsOwaspLfiOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallConfigManagedRulesetsOwaspLfi) string { return v.Action }).(pulumi.StringOutput)
}

func (o FirewallConfigManagedRulesetsOwaspLfiOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirewallConfigManagedRulesetsOwaspLfi) *bool { return v.Active }).(pulumi.BoolPtrOutput)
}

type FirewallConfigManagedRulesetsOwaspLfiPtrOutput struct{ *pulumi.OutputState }

func (FirewallConfigManagedRulesetsOwaspLfiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallConfigManagedRulesetsOwaspLfi)(nil)).Elem()
}

func (o FirewallConfigManagedRulesetsOwaspLfiPtrOutput) ToFirewallConfigManagedRulesetsOwaspLfiPtrOutput() FirewallConfigManagedRulesetsOwaspLfiPtrOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspLfiPtrOutput) ToFirewallConfigManagedRulesetsOwaspLfiPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspLfiPtrOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspLfiPtrOutput) Elem() FirewallConfigManagedRulesetsOwaspLfiOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwaspLfi) FirewallConfigManagedRulesetsOwaspLfi {
		if v != nil {
			return *v
		}
		var ret FirewallConfigManagedRulesetsOwaspLfi
		return ret
	}).(FirewallConfigManagedRulesetsOwaspLfiOutput)
}

func (o FirewallConfigManagedRulesetsOwaspLfiPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwaspLfi) *string {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(pulumi.StringPtrOutput)
}

func (o FirewallConfigManagedRulesetsOwaspLfiPtrOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwaspLfi) *bool {
		if v == nil {
			return nil
		}
		return v.Active
	}).(pulumi.BoolPtrOutput)
}

type FirewallConfigManagedRulesetsOwaspMa struct {
	Action string `pulumi:"action"`
	Active *bool  `pulumi:"active"`
}

// FirewallConfigManagedRulesetsOwaspMaInput is an input type that accepts FirewallConfigManagedRulesetsOwaspMaArgs and FirewallConfigManagedRulesetsOwaspMaOutput values.
// You can construct a concrete instance of `FirewallConfigManagedRulesetsOwaspMaInput` via:
//
//	FirewallConfigManagedRulesetsOwaspMaArgs{...}
type FirewallConfigManagedRulesetsOwaspMaInput interface {
	pulumi.Input

	ToFirewallConfigManagedRulesetsOwaspMaOutput() FirewallConfigManagedRulesetsOwaspMaOutput
	ToFirewallConfigManagedRulesetsOwaspMaOutputWithContext(context.Context) FirewallConfigManagedRulesetsOwaspMaOutput
}

type FirewallConfigManagedRulesetsOwaspMaArgs struct {
	Action pulumi.StringInput  `pulumi:"action"`
	Active pulumi.BoolPtrInput `pulumi:"active"`
}

func (FirewallConfigManagedRulesetsOwaspMaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspMa)(nil)).Elem()
}

func (i FirewallConfigManagedRulesetsOwaspMaArgs) ToFirewallConfigManagedRulesetsOwaspMaOutput() FirewallConfigManagedRulesetsOwaspMaOutput {
	return i.ToFirewallConfigManagedRulesetsOwaspMaOutputWithContext(context.Background())
}

func (i FirewallConfigManagedRulesetsOwaspMaArgs) ToFirewallConfigManagedRulesetsOwaspMaOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspMaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigManagedRulesetsOwaspMaOutput)
}

func (i FirewallConfigManagedRulesetsOwaspMaArgs) ToFirewallConfigManagedRulesetsOwaspMaPtrOutput() FirewallConfigManagedRulesetsOwaspMaPtrOutput {
	return i.ToFirewallConfigManagedRulesetsOwaspMaPtrOutputWithContext(context.Background())
}

func (i FirewallConfigManagedRulesetsOwaspMaArgs) ToFirewallConfigManagedRulesetsOwaspMaPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspMaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigManagedRulesetsOwaspMaOutput).ToFirewallConfigManagedRulesetsOwaspMaPtrOutputWithContext(ctx)
}

// FirewallConfigManagedRulesetsOwaspMaPtrInput is an input type that accepts FirewallConfigManagedRulesetsOwaspMaArgs, FirewallConfigManagedRulesetsOwaspMaPtr and FirewallConfigManagedRulesetsOwaspMaPtrOutput values.
// You can construct a concrete instance of `FirewallConfigManagedRulesetsOwaspMaPtrInput` via:
//
//	        FirewallConfigManagedRulesetsOwaspMaArgs{...}
//
//	or:
//
//	        nil
type FirewallConfigManagedRulesetsOwaspMaPtrInput interface {
	pulumi.Input

	ToFirewallConfigManagedRulesetsOwaspMaPtrOutput() FirewallConfigManagedRulesetsOwaspMaPtrOutput
	ToFirewallConfigManagedRulesetsOwaspMaPtrOutputWithContext(context.Context) FirewallConfigManagedRulesetsOwaspMaPtrOutput
}

type firewallConfigManagedRulesetsOwaspMaPtrType FirewallConfigManagedRulesetsOwaspMaArgs

func FirewallConfigManagedRulesetsOwaspMaPtr(v *FirewallConfigManagedRulesetsOwaspMaArgs) FirewallConfigManagedRulesetsOwaspMaPtrInput {
	return (*firewallConfigManagedRulesetsOwaspMaPtrType)(v)
}

func (*firewallConfigManagedRulesetsOwaspMaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallConfigManagedRulesetsOwaspMa)(nil)).Elem()
}

func (i *firewallConfigManagedRulesetsOwaspMaPtrType) ToFirewallConfigManagedRulesetsOwaspMaPtrOutput() FirewallConfigManagedRulesetsOwaspMaPtrOutput {
	return i.ToFirewallConfigManagedRulesetsOwaspMaPtrOutputWithContext(context.Background())
}

func (i *firewallConfigManagedRulesetsOwaspMaPtrType) ToFirewallConfigManagedRulesetsOwaspMaPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspMaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigManagedRulesetsOwaspMaPtrOutput)
}

type FirewallConfigManagedRulesetsOwaspMaOutput struct{ *pulumi.OutputState }

func (FirewallConfigManagedRulesetsOwaspMaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspMa)(nil)).Elem()
}

func (o FirewallConfigManagedRulesetsOwaspMaOutput) ToFirewallConfigManagedRulesetsOwaspMaOutput() FirewallConfigManagedRulesetsOwaspMaOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspMaOutput) ToFirewallConfigManagedRulesetsOwaspMaOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspMaOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspMaOutput) ToFirewallConfigManagedRulesetsOwaspMaPtrOutput() FirewallConfigManagedRulesetsOwaspMaPtrOutput {
	return o.ToFirewallConfigManagedRulesetsOwaspMaPtrOutputWithContext(context.Background())
}

func (o FirewallConfigManagedRulesetsOwaspMaOutput) ToFirewallConfigManagedRulesetsOwaspMaPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspMaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallConfigManagedRulesetsOwaspMa) *FirewallConfigManagedRulesetsOwaspMa {
		return &v
	}).(FirewallConfigManagedRulesetsOwaspMaPtrOutput)
}

func (o FirewallConfigManagedRulesetsOwaspMaOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallConfigManagedRulesetsOwaspMa) string { return v.Action }).(pulumi.StringOutput)
}

func (o FirewallConfigManagedRulesetsOwaspMaOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirewallConfigManagedRulesetsOwaspMa) *bool { return v.Active }).(pulumi.BoolPtrOutput)
}

type FirewallConfigManagedRulesetsOwaspMaPtrOutput struct{ *pulumi.OutputState }

func (FirewallConfigManagedRulesetsOwaspMaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallConfigManagedRulesetsOwaspMa)(nil)).Elem()
}

func (o FirewallConfigManagedRulesetsOwaspMaPtrOutput) ToFirewallConfigManagedRulesetsOwaspMaPtrOutput() FirewallConfigManagedRulesetsOwaspMaPtrOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspMaPtrOutput) ToFirewallConfigManagedRulesetsOwaspMaPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspMaPtrOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspMaPtrOutput) Elem() FirewallConfigManagedRulesetsOwaspMaOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwaspMa) FirewallConfigManagedRulesetsOwaspMa {
		if v != nil {
			return *v
		}
		var ret FirewallConfigManagedRulesetsOwaspMa
		return ret
	}).(FirewallConfigManagedRulesetsOwaspMaOutput)
}

func (o FirewallConfigManagedRulesetsOwaspMaPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwaspMa) *string {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(pulumi.StringPtrOutput)
}

func (o FirewallConfigManagedRulesetsOwaspMaPtrOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwaspMa) *bool {
		if v == nil {
			return nil
		}
		return v.Active
	}).(pulumi.BoolPtrOutput)
}

type FirewallConfigManagedRulesetsOwaspPhp struct {
	Action string `pulumi:"action"`
	Active *bool  `pulumi:"active"`
}

// FirewallConfigManagedRulesetsOwaspPhpInput is an input type that accepts FirewallConfigManagedRulesetsOwaspPhpArgs and FirewallConfigManagedRulesetsOwaspPhpOutput values.
// You can construct a concrete instance of `FirewallConfigManagedRulesetsOwaspPhpInput` via:
//
//	FirewallConfigManagedRulesetsOwaspPhpArgs{...}
type FirewallConfigManagedRulesetsOwaspPhpInput interface {
	pulumi.Input

	ToFirewallConfigManagedRulesetsOwaspPhpOutput() FirewallConfigManagedRulesetsOwaspPhpOutput
	ToFirewallConfigManagedRulesetsOwaspPhpOutputWithContext(context.Context) FirewallConfigManagedRulesetsOwaspPhpOutput
}

type FirewallConfigManagedRulesetsOwaspPhpArgs struct {
	Action pulumi.StringInput  `pulumi:"action"`
	Active pulumi.BoolPtrInput `pulumi:"active"`
}

func (FirewallConfigManagedRulesetsOwaspPhpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspPhp)(nil)).Elem()
}

func (i FirewallConfigManagedRulesetsOwaspPhpArgs) ToFirewallConfigManagedRulesetsOwaspPhpOutput() FirewallConfigManagedRulesetsOwaspPhpOutput {
	return i.ToFirewallConfigManagedRulesetsOwaspPhpOutputWithContext(context.Background())
}

func (i FirewallConfigManagedRulesetsOwaspPhpArgs) ToFirewallConfigManagedRulesetsOwaspPhpOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspPhpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigManagedRulesetsOwaspPhpOutput)
}

func (i FirewallConfigManagedRulesetsOwaspPhpArgs) ToFirewallConfigManagedRulesetsOwaspPhpPtrOutput() FirewallConfigManagedRulesetsOwaspPhpPtrOutput {
	return i.ToFirewallConfigManagedRulesetsOwaspPhpPtrOutputWithContext(context.Background())
}

func (i FirewallConfigManagedRulesetsOwaspPhpArgs) ToFirewallConfigManagedRulesetsOwaspPhpPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspPhpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigManagedRulesetsOwaspPhpOutput).ToFirewallConfigManagedRulesetsOwaspPhpPtrOutputWithContext(ctx)
}

// FirewallConfigManagedRulesetsOwaspPhpPtrInput is an input type that accepts FirewallConfigManagedRulesetsOwaspPhpArgs, FirewallConfigManagedRulesetsOwaspPhpPtr and FirewallConfigManagedRulesetsOwaspPhpPtrOutput values.
// You can construct a concrete instance of `FirewallConfigManagedRulesetsOwaspPhpPtrInput` via:
//
//	        FirewallConfigManagedRulesetsOwaspPhpArgs{...}
//
//	or:
//
//	        nil
type FirewallConfigManagedRulesetsOwaspPhpPtrInput interface {
	pulumi.Input

	ToFirewallConfigManagedRulesetsOwaspPhpPtrOutput() FirewallConfigManagedRulesetsOwaspPhpPtrOutput
	ToFirewallConfigManagedRulesetsOwaspPhpPtrOutputWithContext(context.Context) FirewallConfigManagedRulesetsOwaspPhpPtrOutput
}

type firewallConfigManagedRulesetsOwaspPhpPtrType FirewallConfigManagedRulesetsOwaspPhpArgs

func FirewallConfigManagedRulesetsOwaspPhpPtr(v *FirewallConfigManagedRulesetsOwaspPhpArgs) FirewallConfigManagedRulesetsOwaspPhpPtrInput {
	return (*firewallConfigManagedRulesetsOwaspPhpPtrType)(v)
}

func (*firewallConfigManagedRulesetsOwaspPhpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallConfigManagedRulesetsOwaspPhp)(nil)).Elem()
}

func (i *firewallConfigManagedRulesetsOwaspPhpPtrType) ToFirewallConfigManagedRulesetsOwaspPhpPtrOutput() FirewallConfigManagedRulesetsOwaspPhpPtrOutput {
	return i.ToFirewallConfigManagedRulesetsOwaspPhpPtrOutputWithContext(context.Background())
}

func (i *firewallConfigManagedRulesetsOwaspPhpPtrType) ToFirewallConfigManagedRulesetsOwaspPhpPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspPhpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigManagedRulesetsOwaspPhpPtrOutput)
}

type FirewallConfigManagedRulesetsOwaspPhpOutput struct{ *pulumi.OutputState }

func (FirewallConfigManagedRulesetsOwaspPhpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspPhp)(nil)).Elem()
}

func (o FirewallConfigManagedRulesetsOwaspPhpOutput) ToFirewallConfigManagedRulesetsOwaspPhpOutput() FirewallConfigManagedRulesetsOwaspPhpOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspPhpOutput) ToFirewallConfigManagedRulesetsOwaspPhpOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspPhpOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspPhpOutput) ToFirewallConfigManagedRulesetsOwaspPhpPtrOutput() FirewallConfigManagedRulesetsOwaspPhpPtrOutput {
	return o.ToFirewallConfigManagedRulesetsOwaspPhpPtrOutputWithContext(context.Background())
}

func (o FirewallConfigManagedRulesetsOwaspPhpOutput) ToFirewallConfigManagedRulesetsOwaspPhpPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspPhpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallConfigManagedRulesetsOwaspPhp) *FirewallConfigManagedRulesetsOwaspPhp {
		return &v
	}).(FirewallConfigManagedRulesetsOwaspPhpPtrOutput)
}

func (o FirewallConfigManagedRulesetsOwaspPhpOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallConfigManagedRulesetsOwaspPhp) string { return v.Action }).(pulumi.StringOutput)
}

func (o FirewallConfigManagedRulesetsOwaspPhpOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirewallConfigManagedRulesetsOwaspPhp) *bool { return v.Active }).(pulumi.BoolPtrOutput)
}

type FirewallConfigManagedRulesetsOwaspPhpPtrOutput struct{ *pulumi.OutputState }

func (FirewallConfigManagedRulesetsOwaspPhpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallConfigManagedRulesetsOwaspPhp)(nil)).Elem()
}

func (o FirewallConfigManagedRulesetsOwaspPhpPtrOutput) ToFirewallConfigManagedRulesetsOwaspPhpPtrOutput() FirewallConfigManagedRulesetsOwaspPhpPtrOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspPhpPtrOutput) ToFirewallConfigManagedRulesetsOwaspPhpPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspPhpPtrOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspPhpPtrOutput) Elem() FirewallConfigManagedRulesetsOwaspPhpOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwaspPhp) FirewallConfigManagedRulesetsOwaspPhp {
		if v != nil {
			return *v
		}
		var ret FirewallConfigManagedRulesetsOwaspPhp
		return ret
	}).(FirewallConfigManagedRulesetsOwaspPhpOutput)
}

func (o FirewallConfigManagedRulesetsOwaspPhpPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwaspPhp) *string {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(pulumi.StringPtrOutput)
}

func (o FirewallConfigManagedRulesetsOwaspPhpPtrOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwaspPhp) *bool {
		if v == nil {
			return nil
		}
		return v.Active
	}).(pulumi.BoolPtrOutput)
}

type FirewallConfigManagedRulesetsOwaspRce struct {
	Action string `pulumi:"action"`
	Active *bool  `pulumi:"active"`
}

// FirewallConfigManagedRulesetsOwaspRceInput is an input type that accepts FirewallConfigManagedRulesetsOwaspRceArgs and FirewallConfigManagedRulesetsOwaspRceOutput values.
// You can construct a concrete instance of `FirewallConfigManagedRulesetsOwaspRceInput` via:
//
//	FirewallConfigManagedRulesetsOwaspRceArgs{...}
type FirewallConfigManagedRulesetsOwaspRceInput interface {
	pulumi.Input

	ToFirewallConfigManagedRulesetsOwaspRceOutput() FirewallConfigManagedRulesetsOwaspRceOutput
	ToFirewallConfigManagedRulesetsOwaspRceOutputWithContext(context.Context) FirewallConfigManagedRulesetsOwaspRceOutput
}

type FirewallConfigManagedRulesetsOwaspRceArgs struct {
	Action pulumi.StringInput  `pulumi:"action"`
	Active pulumi.BoolPtrInput `pulumi:"active"`
}

func (FirewallConfigManagedRulesetsOwaspRceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspRce)(nil)).Elem()
}

func (i FirewallConfigManagedRulesetsOwaspRceArgs) ToFirewallConfigManagedRulesetsOwaspRceOutput() FirewallConfigManagedRulesetsOwaspRceOutput {
	return i.ToFirewallConfigManagedRulesetsOwaspRceOutputWithContext(context.Background())
}

func (i FirewallConfigManagedRulesetsOwaspRceArgs) ToFirewallConfigManagedRulesetsOwaspRceOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspRceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigManagedRulesetsOwaspRceOutput)
}

func (i FirewallConfigManagedRulesetsOwaspRceArgs) ToFirewallConfigManagedRulesetsOwaspRcePtrOutput() FirewallConfigManagedRulesetsOwaspRcePtrOutput {
	return i.ToFirewallConfigManagedRulesetsOwaspRcePtrOutputWithContext(context.Background())
}

func (i FirewallConfigManagedRulesetsOwaspRceArgs) ToFirewallConfigManagedRulesetsOwaspRcePtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspRcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigManagedRulesetsOwaspRceOutput).ToFirewallConfigManagedRulesetsOwaspRcePtrOutputWithContext(ctx)
}

// FirewallConfigManagedRulesetsOwaspRcePtrInput is an input type that accepts FirewallConfigManagedRulesetsOwaspRceArgs, FirewallConfigManagedRulesetsOwaspRcePtr and FirewallConfigManagedRulesetsOwaspRcePtrOutput values.
// You can construct a concrete instance of `FirewallConfigManagedRulesetsOwaspRcePtrInput` via:
//
//	        FirewallConfigManagedRulesetsOwaspRceArgs{...}
//
//	or:
//
//	        nil
type FirewallConfigManagedRulesetsOwaspRcePtrInput interface {
	pulumi.Input

	ToFirewallConfigManagedRulesetsOwaspRcePtrOutput() FirewallConfigManagedRulesetsOwaspRcePtrOutput
	ToFirewallConfigManagedRulesetsOwaspRcePtrOutputWithContext(context.Context) FirewallConfigManagedRulesetsOwaspRcePtrOutput
}

type firewallConfigManagedRulesetsOwaspRcePtrType FirewallConfigManagedRulesetsOwaspRceArgs

func FirewallConfigManagedRulesetsOwaspRcePtr(v *FirewallConfigManagedRulesetsOwaspRceArgs) FirewallConfigManagedRulesetsOwaspRcePtrInput {
	return (*firewallConfigManagedRulesetsOwaspRcePtrType)(v)
}

func (*firewallConfigManagedRulesetsOwaspRcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallConfigManagedRulesetsOwaspRce)(nil)).Elem()
}

func (i *firewallConfigManagedRulesetsOwaspRcePtrType) ToFirewallConfigManagedRulesetsOwaspRcePtrOutput() FirewallConfigManagedRulesetsOwaspRcePtrOutput {
	return i.ToFirewallConfigManagedRulesetsOwaspRcePtrOutputWithContext(context.Background())
}

func (i *firewallConfigManagedRulesetsOwaspRcePtrType) ToFirewallConfigManagedRulesetsOwaspRcePtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspRcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigManagedRulesetsOwaspRcePtrOutput)
}

type FirewallConfigManagedRulesetsOwaspRceOutput struct{ *pulumi.OutputState }

func (FirewallConfigManagedRulesetsOwaspRceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspRce)(nil)).Elem()
}

func (o FirewallConfigManagedRulesetsOwaspRceOutput) ToFirewallConfigManagedRulesetsOwaspRceOutput() FirewallConfigManagedRulesetsOwaspRceOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspRceOutput) ToFirewallConfigManagedRulesetsOwaspRceOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspRceOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspRceOutput) ToFirewallConfigManagedRulesetsOwaspRcePtrOutput() FirewallConfigManagedRulesetsOwaspRcePtrOutput {
	return o.ToFirewallConfigManagedRulesetsOwaspRcePtrOutputWithContext(context.Background())
}

func (o FirewallConfigManagedRulesetsOwaspRceOutput) ToFirewallConfigManagedRulesetsOwaspRcePtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspRcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallConfigManagedRulesetsOwaspRce) *FirewallConfigManagedRulesetsOwaspRce {
		return &v
	}).(FirewallConfigManagedRulesetsOwaspRcePtrOutput)
}

func (o FirewallConfigManagedRulesetsOwaspRceOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallConfigManagedRulesetsOwaspRce) string { return v.Action }).(pulumi.StringOutput)
}

func (o FirewallConfigManagedRulesetsOwaspRceOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirewallConfigManagedRulesetsOwaspRce) *bool { return v.Active }).(pulumi.BoolPtrOutput)
}

type FirewallConfigManagedRulesetsOwaspRcePtrOutput struct{ *pulumi.OutputState }

func (FirewallConfigManagedRulesetsOwaspRcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallConfigManagedRulesetsOwaspRce)(nil)).Elem()
}

func (o FirewallConfigManagedRulesetsOwaspRcePtrOutput) ToFirewallConfigManagedRulesetsOwaspRcePtrOutput() FirewallConfigManagedRulesetsOwaspRcePtrOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspRcePtrOutput) ToFirewallConfigManagedRulesetsOwaspRcePtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspRcePtrOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspRcePtrOutput) Elem() FirewallConfigManagedRulesetsOwaspRceOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwaspRce) FirewallConfigManagedRulesetsOwaspRce {
		if v != nil {
			return *v
		}
		var ret FirewallConfigManagedRulesetsOwaspRce
		return ret
	}).(FirewallConfigManagedRulesetsOwaspRceOutput)
}

func (o FirewallConfigManagedRulesetsOwaspRcePtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwaspRce) *string {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(pulumi.StringPtrOutput)
}

func (o FirewallConfigManagedRulesetsOwaspRcePtrOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwaspRce) *bool {
		if v == nil {
			return nil
		}
		return v.Active
	}).(pulumi.BoolPtrOutput)
}

type FirewallConfigManagedRulesetsOwaspRfi struct {
	Action string `pulumi:"action"`
	Active *bool  `pulumi:"active"`
}

// FirewallConfigManagedRulesetsOwaspRfiInput is an input type that accepts FirewallConfigManagedRulesetsOwaspRfiArgs and FirewallConfigManagedRulesetsOwaspRfiOutput values.
// You can construct a concrete instance of `FirewallConfigManagedRulesetsOwaspRfiInput` via:
//
//	FirewallConfigManagedRulesetsOwaspRfiArgs{...}
type FirewallConfigManagedRulesetsOwaspRfiInput interface {
	pulumi.Input

	ToFirewallConfigManagedRulesetsOwaspRfiOutput() FirewallConfigManagedRulesetsOwaspRfiOutput
	ToFirewallConfigManagedRulesetsOwaspRfiOutputWithContext(context.Context) FirewallConfigManagedRulesetsOwaspRfiOutput
}

type FirewallConfigManagedRulesetsOwaspRfiArgs struct {
	Action pulumi.StringInput  `pulumi:"action"`
	Active pulumi.BoolPtrInput `pulumi:"active"`
}

func (FirewallConfigManagedRulesetsOwaspRfiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspRfi)(nil)).Elem()
}

func (i FirewallConfigManagedRulesetsOwaspRfiArgs) ToFirewallConfigManagedRulesetsOwaspRfiOutput() FirewallConfigManagedRulesetsOwaspRfiOutput {
	return i.ToFirewallConfigManagedRulesetsOwaspRfiOutputWithContext(context.Background())
}

func (i FirewallConfigManagedRulesetsOwaspRfiArgs) ToFirewallConfigManagedRulesetsOwaspRfiOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspRfiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigManagedRulesetsOwaspRfiOutput)
}

func (i FirewallConfigManagedRulesetsOwaspRfiArgs) ToFirewallConfigManagedRulesetsOwaspRfiPtrOutput() FirewallConfigManagedRulesetsOwaspRfiPtrOutput {
	return i.ToFirewallConfigManagedRulesetsOwaspRfiPtrOutputWithContext(context.Background())
}

func (i FirewallConfigManagedRulesetsOwaspRfiArgs) ToFirewallConfigManagedRulesetsOwaspRfiPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspRfiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigManagedRulesetsOwaspRfiOutput).ToFirewallConfigManagedRulesetsOwaspRfiPtrOutputWithContext(ctx)
}

// FirewallConfigManagedRulesetsOwaspRfiPtrInput is an input type that accepts FirewallConfigManagedRulesetsOwaspRfiArgs, FirewallConfigManagedRulesetsOwaspRfiPtr and FirewallConfigManagedRulesetsOwaspRfiPtrOutput values.
// You can construct a concrete instance of `FirewallConfigManagedRulesetsOwaspRfiPtrInput` via:
//
//	        FirewallConfigManagedRulesetsOwaspRfiArgs{...}
//
//	or:
//
//	        nil
type FirewallConfigManagedRulesetsOwaspRfiPtrInput interface {
	pulumi.Input

	ToFirewallConfigManagedRulesetsOwaspRfiPtrOutput() FirewallConfigManagedRulesetsOwaspRfiPtrOutput
	ToFirewallConfigManagedRulesetsOwaspRfiPtrOutputWithContext(context.Context) FirewallConfigManagedRulesetsOwaspRfiPtrOutput
}

type firewallConfigManagedRulesetsOwaspRfiPtrType FirewallConfigManagedRulesetsOwaspRfiArgs

func FirewallConfigManagedRulesetsOwaspRfiPtr(v *FirewallConfigManagedRulesetsOwaspRfiArgs) FirewallConfigManagedRulesetsOwaspRfiPtrInput {
	return (*firewallConfigManagedRulesetsOwaspRfiPtrType)(v)
}

func (*firewallConfigManagedRulesetsOwaspRfiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallConfigManagedRulesetsOwaspRfi)(nil)).Elem()
}

func (i *firewallConfigManagedRulesetsOwaspRfiPtrType) ToFirewallConfigManagedRulesetsOwaspRfiPtrOutput() FirewallConfigManagedRulesetsOwaspRfiPtrOutput {
	return i.ToFirewallConfigManagedRulesetsOwaspRfiPtrOutputWithContext(context.Background())
}

func (i *firewallConfigManagedRulesetsOwaspRfiPtrType) ToFirewallConfigManagedRulesetsOwaspRfiPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspRfiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigManagedRulesetsOwaspRfiPtrOutput)
}

type FirewallConfigManagedRulesetsOwaspRfiOutput struct{ *pulumi.OutputState }

func (FirewallConfigManagedRulesetsOwaspRfiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspRfi)(nil)).Elem()
}

func (o FirewallConfigManagedRulesetsOwaspRfiOutput) ToFirewallConfigManagedRulesetsOwaspRfiOutput() FirewallConfigManagedRulesetsOwaspRfiOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspRfiOutput) ToFirewallConfigManagedRulesetsOwaspRfiOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspRfiOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspRfiOutput) ToFirewallConfigManagedRulesetsOwaspRfiPtrOutput() FirewallConfigManagedRulesetsOwaspRfiPtrOutput {
	return o.ToFirewallConfigManagedRulesetsOwaspRfiPtrOutputWithContext(context.Background())
}

func (o FirewallConfigManagedRulesetsOwaspRfiOutput) ToFirewallConfigManagedRulesetsOwaspRfiPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspRfiPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallConfigManagedRulesetsOwaspRfi) *FirewallConfigManagedRulesetsOwaspRfi {
		return &v
	}).(FirewallConfigManagedRulesetsOwaspRfiPtrOutput)
}

func (o FirewallConfigManagedRulesetsOwaspRfiOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallConfigManagedRulesetsOwaspRfi) string { return v.Action }).(pulumi.StringOutput)
}

func (o FirewallConfigManagedRulesetsOwaspRfiOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirewallConfigManagedRulesetsOwaspRfi) *bool { return v.Active }).(pulumi.BoolPtrOutput)
}

type FirewallConfigManagedRulesetsOwaspRfiPtrOutput struct{ *pulumi.OutputState }

func (FirewallConfigManagedRulesetsOwaspRfiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallConfigManagedRulesetsOwaspRfi)(nil)).Elem()
}

func (o FirewallConfigManagedRulesetsOwaspRfiPtrOutput) ToFirewallConfigManagedRulesetsOwaspRfiPtrOutput() FirewallConfigManagedRulesetsOwaspRfiPtrOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspRfiPtrOutput) ToFirewallConfigManagedRulesetsOwaspRfiPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspRfiPtrOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspRfiPtrOutput) Elem() FirewallConfigManagedRulesetsOwaspRfiOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwaspRfi) FirewallConfigManagedRulesetsOwaspRfi {
		if v != nil {
			return *v
		}
		var ret FirewallConfigManagedRulesetsOwaspRfi
		return ret
	}).(FirewallConfigManagedRulesetsOwaspRfiOutput)
}

func (o FirewallConfigManagedRulesetsOwaspRfiPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwaspRfi) *string {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(pulumi.StringPtrOutput)
}

func (o FirewallConfigManagedRulesetsOwaspRfiPtrOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwaspRfi) *bool {
		if v == nil {
			return nil
		}
		return v.Active
	}).(pulumi.BoolPtrOutput)
}

type FirewallConfigManagedRulesetsOwaspSd struct {
	Action string `pulumi:"action"`
	Active *bool  `pulumi:"active"`
}

// FirewallConfigManagedRulesetsOwaspSdInput is an input type that accepts FirewallConfigManagedRulesetsOwaspSdArgs and FirewallConfigManagedRulesetsOwaspSdOutput values.
// You can construct a concrete instance of `FirewallConfigManagedRulesetsOwaspSdInput` via:
//
//	FirewallConfigManagedRulesetsOwaspSdArgs{...}
type FirewallConfigManagedRulesetsOwaspSdInput interface {
	pulumi.Input

	ToFirewallConfigManagedRulesetsOwaspSdOutput() FirewallConfigManagedRulesetsOwaspSdOutput
	ToFirewallConfigManagedRulesetsOwaspSdOutputWithContext(context.Context) FirewallConfigManagedRulesetsOwaspSdOutput
}

type FirewallConfigManagedRulesetsOwaspSdArgs struct {
	Action pulumi.StringInput  `pulumi:"action"`
	Active pulumi.BoolPtrInput `pulumi:"active"`
}

func (FirewallConfigManagedRulesetsOwaspSdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspSd)(nil)).Elem()
}

func (i FirewallConfigManagedRulesetsOwaspSdArgs) ToFirewallConfigManagedRulesetsOwaspSdOutput() FirewallConfigManagedRulesetsOwaspSdOutput {
	return i.ToFirewallConfigManagedRulesetsOwaspSdOutputWithContext(context.Background())
}

func (i FirewallConfigManagedRulesetsOwaspSdArgs) ToFirewallConfigManagedRulesetsOwaspSdOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspSdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigManagedRulesetsOwaspSdOutput)
}

func (i FirewallConfigManagedRulesetsOwaspSdArgs) ToFirewallConfigManagedRulesetsOwaspSdPtrOutput() FirewallConfigManagedRulesetsOwaspSdPtrOutput {
	return i.ToFirewallConfigManagedRulesetsOwaspSdPtrOutputWithContext(context.Background())
}

func (i FirewallConfigManagedRulesetsOwaspSdArgs) ToFirewallConfigManagedRulesetsOwaspSdPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspSdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigManagedRulesetsOwaspSdOutput).ToFirewallConfigManagedRulesetsOwaspSdPtrOutputWithContext(ctx)
}

// FirewallConfigManagedRulesetsOwaspSdPtrInput is an input type that accepts FirewallConfigManagedRulesetsOwaspSdArgs, FirewallConfigManagedRulesetsOwaspSdPtr and FirewallConfigManagedRulesetsOwaspSdPtrOutput values.
// You can construct a concrete instance of `FirewallConfigManagedRulesetsOwaspSdPtrInput` via:
//
//	        FirewallConfigManagedRulesetsOwaspSdArgs{...}
//
//	or:
//
//	        nil
type FirewallConfigManagedRulesetsOwaspSdPtrInput interface {
	pulumi.Input

	ToFirewallConfigManagedRulesetsOwaspSdPtrOutput() FirewallConfigManagedRulesetsOwaspSdPtrOutput
	ToFirewallConfigManagedRulesetsOwaspSdPtrOutputWithContext(context.Context) FirewallConfigManagedRulesetsOwaspSdPtrOutput
}

type firewallConfigManagedRulesetsOwaspSdPtrType FirewallConfigManagedRulesetsOwaspSdArgs

func FirewallConfigManagedRulesetsOwaspSdPtr(v *FirewallConfigManagedRulesetsOwaspSdArgs) FirewallConfigManagedRulesetsOwaspSdPtrInput {
	return (*firewallConfigManagedRulesetsOwaspSdPtrType)(v)
}

func (*firewallConfigManagedRulesetsOwaspSdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallConfigManagedRulesetsOwaspSd)(nil)).Elem()
}

func (i *firewallConfigManagedRulesetsOwaspSdPtrType) ToFirewallConfigManagedRulesetsOwaspSdPtrOutput() FirewallConfigManagedRulesetsOwaspSdPtrOutput {
	return i.ToFirewallConfigManagedRulesetsOwaspSdPtrOutputWithContext(context.Background())
}

func (i *firewallConfigManagedRulesetsOwaspSdPtrType) ToFirewallConfigManagedRulesetsOwaspSdPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspSdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigManagedRulesetsOwaspSdPtrOutput)
}

type FirewallConfigManagedRulesetsOwaspSdOutput struct{ *pulumi.OutputState }

func (FirewallConfigManagedRulesetsOwaspSdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspSd)(nil)).Elem()
}

func (o FirewallConfigManagedRulesetsOwaspSdOutput) ToFirewallConfigManagedRulesetsOwaspSdOutput() FirewallConfigManagedRulesetsOwaspSdOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspSdOutput) ToFirewallConfigManagedRulesetsOwaspSdOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspSdOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspSdOutput) ToFirewallConfigManagedRulesetsOwaspSdPtrOutput() FirewallConfigManagedRulesetsOwaspSdPtrOutput {
	return o.ToFirewallConfigManagedRulesetsOwaspSdPtrOutputWithContext(context.Background())
}

func (o FirewallConfigManagedRulesetsOwaspSdOutput) ToFirewallConfigManagedRulesetsOwaspSdPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspSdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallConfigManagedRulesetsOwaspSd) *FirewallConfigManagedRulesetsOwaspSd {
		return &v
	}).(FirewallConfigManagedRulesetsOwaspSdPtrOutput)
}

func (o FirewallConfigManagedRulesetsOwaspSdOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallConfigManagedRulesetsOwaspSd) string { return v.Action }).(pulumi.StringOutput)
}

func (o FirewallConfigManagedRulesetsOwaspSdOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirewallConfigManagedRulesetsOwaspSd) *bool { return v.Active }).(pulumi.BoolPtrOutput)
}

type FirewallConfigManagedRulesetsOwaspSdPtrOutput struct{ *pulumi.OutputState }

func (FirewallConfigManagedRulesetsOwaspSdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallConfigManagedRulesetsOwaspSd)(nil)).Elem()
}

func (o FirewallConfigManagedRulesetsOwaspSdPtrOutput) ToFirewallConfigManagedRulesetsOwaspSdPtrOutput() FirewallConfigManagedRulesetsOwaspSdPtrOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspSdPtrOutput) ToFirewallConfigManagedRulesetsOwaspSdPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspSdPtrOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspSdPtrOutput) Elem() FirewallConfigManagedRulesetsOwaspSdOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwaspSd) FirewallConfigManagedRulesetsOwaspSd {
		if v != nil {
			return *v
		}
		var ret FirewallConfigManagedRulesetsOwaspSd
		return ret
	}).(FirewallConfigManagedRulesetsOwaspSdOutput)
}

func (o FirewallConfigManagedRulesetsOwaspSdPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwaspSd) *string {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(pulumi.StringPtrOutput)
}

func (o FirewallConfigManagedRulesetsOwaspSdPtrOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwaspSd) *bool {
		if v == nil {
			return nil
		}
		return v.Active
	}).(pulumi.BoolPtrOutput)
}

type FirewallConfigManagedRulesetsOwaspSqli struct {
	Action string `pulumi:"action"`
	Active *bool  `pulumi:"active"`
}

// FirewallConfigManagedRulesetsOwaspSqliInput is an input type that accepts FirewallConfigManagedRulesetsOwaspSqliArgs and FirewallConfigManagedRulesetsOwaspSqliOutput values.
// You can construct a concrete instance of `FirewallConfigManagedRulesetsOwaspSqliInput` via:
//
//	FirewallConfigManagedRulesetsOwaspSqliArgs{...}
type FirewallConfigManagedRulesetsOwaspSqliInput interface {
	pulumi.Input

	ToFirewallConfigManagedRulesetsOwaspSqliOutput() FirewallConfigManagedRulesetsOwaspSqliOutput
	ToFirewallConfigManagedRulesetsOwaspSqliOutputWithContext(context.Context) FirewallConfigManagedRulesetsOwaspSqliOutput
}

type FirewallConfigManagedRulesetsOwaspSqliArgs struct {
	Action pulumi.StringInput  `pulumi:"action"`
	Active pulumi.BoolPtrInput `pulumi:"active"`
}

func (FirewallConfigManagedRulesetsOwaspSqliArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspSqli)(nil)).Elem()
}

func (i FirewallConfigManagedRulesetsOwaspSqliArgs) ToFirewallConfigManagedRulesetsOwaspSqliOutput() FirewallConfigManagedRulesetsOwaspSqliOutput {
	return i.ToFirewallConfigManagedRulesetsOwaspSqliOutputWithContext(context.Background())
}

func (i FirewallConfigManagedRulesetsOwaspSqliArgs) ToFirewallConfigManagedRulesetsOwaspSqliOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspSqliOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigManagedRulesetsOwaspSqliOutput)
}

func (i FirewallConfigManagedRulesetsOwaspSqliArgs) ToFirewallConfigManagedRulesetsOwaspSqliPtrOutput() FirewallConfigManagedRulesetsOwaspSqliPtrOutput {
	return i.ToFirewallConfigManagedRulesetsOwaspSqliPtrOutputWithContext(context.Background())
}

func (i FirewallConfigManagedRulesetsOwaspSqliArgs) ToFirewallConfigManagedRulesetsOwaspSqliPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspSqliPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigManagedRulesetsOwaspSqliOutput).ToFirewallConfigManagedRulesetsOwaspSqliPtrOutputWithContext(ctx)
}

// FirewallConfigManagedRulesetsOwaspSqliPtrInput is an input type that accepts FirewallConfigManagedRulesetsOwaspSqliArgs, FirewallConfigManagedRulesetsOwaspSqliPtr and FirewallConfigManagedRulesetsOwaspSqliPtrOutput values.
// You can construct a concrete instance of `FirewallConfigManagedRulesetsOwaspSqliPtrInput` via:
//
//	        FirewallConfigManagedRulesetsOwaspSqliArgs{...}
//
//	or:
//
//	        nil
type FirewallConfigManagedRulesetsOwaspSqliPtrInput interface {
	pulumi.Input

	ToFirewallConfigManagedRulesetsOwaspSqliPtrOutput() FirewallConfigManagedRulesetsOwaspSqliPtrOutput
	ToFirewallConfigManagedRulesetsOwaspSqliPtrOutputWithContext(context.Context) FirewallConfigManagedRulesetsOwaspSqliPtrOutput
}

type firewallConfigManagedRulesetsOwaspSqliPtrType FirewallConfigManagedRulesetsOwaspSqliArgs

func FirewallConfigManagedRulesetsOwaspSqliPtr(v *FirewallConfigManagedRulesetsOwaspSqliArgs) FirewallConfigManagedRulesetsOwaspSqliPtrInput {
	return (*firewallConfigManagedRulesetsOwaspSqliPtrType)(v)
}

func (*firewallConfigManagedRulesetsOwaspSqliPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallConfigManagedRulesetsOwaspSqli)(nil)).Elem()
}

func (i *firewallConfigManagedRulesetsOwaspSqliPtrType) ToFirewallConfigManagedRulesetsOwaspSqliPtrOutput() FirewallConfigManagedRulesetsOwaspSqliPtrOutput {
	return i.ToFirewallConfigManagedRulesetsOwaspSqliPtrOutputWithContext(context.Background())
}

func (i *firewallConfigManagedRulesetsOwaspSqliPtrType) ToFirewallConfigManagedRulesetsOwaspSqliPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspSqliPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigManagedRulesetsOwaspSqliPtrOutput)
}

type FirewallConfigManagedRulesetsOwaspSqliOutput struct{ *pulumi.OutputState }

func (FirewallConfigManagedRulesetsOwaspSqliOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspSqli)(nil)).Elem()
}

func (o FirewallConfigManagedRulesetsOwaspSqliOutput) ToFirewallConfigManagedRulesetsOwaspSqliOutput() FirewallConfigManagedRulesetsOwaspSqliOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspSqliOutput) ToFirewallConfigManagedRulesetsOwaspSqliOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspSqliOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspSqliOutput) ToFirewallConfigManagedRulesetsOwaspSqliPtrOutput() FirewallConfigManagedRulesetsOwaspSqliPtrOutput {
	return o.ToFirewallConfigManagedRulesetsOwaspSqliPtrOutputWithContext(context.Background())
}

func (o FirewallConfigManagedRulesetsOwaspSqliOutput) ToFirewallConfigManagedRulesetsOwaspSqliPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspSqliPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallConfigManagedRulesetsOwaspSqli) *FirewallConfigManagedRulesetsOwaspSqli {
		return &v
	}).(FirewallConfigManagedRulesetsOwaspSqliPtrOutput)
}

func (o FirewallConfigManagedRulesetsOwaspSqliOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallConfigManagedRulesetsOwaspSqli) string { return v.Action }).(pulumi.StringOutput)
}

func (o FirewallConfigManagedRulesetsOwaspSqliOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirewallConfigManagedRulesetsOwaspSqli) *bool { return v.Active }).(pulumi.BoolPtrOutput)
}

type FirewallConfigManagedRulesetsOwaspSqliPtrOutput struct{ *pulumi.OutputState }

func (FirewallConfigManagedRulesetsOwaspSqliPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallConfigManagedRulesetsOwaspSqli)(nil)).Elem()
}

func (o FirewallConfigManagedRulesetsOwaspSqliPtrOutput) ToFirewallConfigManagedRulesetsOwaspSqliPtrOutput() FirewallConfigManagedRulesetsOwaspSqliPtrOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspSqliPtrOutput) ToFirewallConfigManagedRulesetsOwaspSqliPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspSqliPtrOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspSqliPtrOutput) Elem() FirewallConfigManagedRulesetsOwaspSqliOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwaspSqli) FirewallConfigManagedRulesetsOwaspSqli {
		if v != nil {
			return *v
		}
		var ret FirewallConfigManagedRulesetsOwaspSqli
		return ret
	}).(FirewallConfigManagedRulesetsOwaspSqliOutput)
}

func (o FirewallConfigManagedRulesetsOwaspSqliPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwaspSqli) *string {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(pulumi.StringPtrOutput)
}

func (o FirewallConfigManagedRulesetsOwaspSqliPtrOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwaspSqli) *bool {
		if v == nil {
			return nil
		}
		return v.Active
	}).(pulumi.BoolPtrOutput)
}

type FirewallConfigManagedRulesetsOwaspXss struct {
	Action string `pulumi:"action"`
	Active *bool  `pulumi:"active"`
}

// FirewallConfigManagedRulesetsOwaspXssInput is an input type that accepts FirewallConfigManagedRulesetsOwaspXssArgs and FirewallConfigManagedRulesetsOwaspXssOutput values.
// You can construct a concrete instance of `FirewallConfigManagedRulesetsOwaspXssInput` via:
//
//	FirewallConfigManagedRulesetsOwaspXssArgs{...}
type FirewallConfigManagedRulesetsOwaspXssInput interface {
	pulumi.Input

	ToFirewallConfigManagedRulesetsOwaspXssOutput() FirewallConfigManagedRulesetsOwaspXssOutput
	ToFirewallConfigManagedRulesetsOwaspXssOutputWithContext(context.Context) FirewallConfigManagedRulesetsOwaspXssOutput
}

type FirewallConfigManagedRulesetsOwaspXssArgs struct {
	Action pulumi.StringInput  `pulumi:"action"`
	Active pulumi.BoolPtrInput `pulumi:"active"`
}

func (FirewallConfigManagedRulesetsOwaspXssArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspXss)(nil)).Elem()
}

func (i FirewallConfigManagedRulesetsOwaspXssArgs) ToFirewallConfigManagedRulesetsOwaspXssOutput() FirewallConfigManagedRulesetsOwaspXssOutput {
	return i.ToFirewallConfigManagedRulesetsOwaspXssOutputWithContext(context.Background())
}

func (i FirewallConfigManagedRulesetsOwaspXssArgs) ToFirewallConfigManagedRulesetsOwaspXssOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspXssOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigManagedRulesetsOwaspXssOutput)
}

func (i FirewallConfigManagedRulesetsOwaspXssArgs) ToFirewallConfigManagedRulesetsOwaspXssPtrOutput() FirewallConfigManagedRulesetsOwaspXssPtrOutput {
	return i.ToFirewallConfigManagedRulesetsOwaspXssPtrOutputWithContext(context.Background())
}

func (i FirewallConfigManagedRulesetsOwaspXssArgs) ToFirewallConfigManagedRulesetsOwaspXssPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspXssPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigManagedRulesetsOwaspXssOutput).ToFirewallConfigManagedRulesetsOwaspXssPtrOutputWithContext(ctx)
}

// FirewallConfigManagedRulesetsOwaspXssPtrInput is an input type that accepts FirewallConfigManagedRulesetsOwaspXssArgs, FirewallConfigManagedRulesetsOwaspXssPtr and FirewallConfigManagedRulesetsOwaspXssPtrOutput values.
// You can construct a concrete instance of `FirewallConfigManagedRulesetsOwaspXssPtrInput` via:
//
//	        FirewallConfigManagedRulesetsOwaspXssArgs{...}
//
//	or:
//
//	        nil
type FirewallConfigManagedRulesetsOwaspXssPtrInput interface {
	pulumi.Input

	ToFirewallConfigManagedRulesetsOwaspXssPtrOutput() FirewallConfigManagedRulesetsOwaspXssPtrOutput
	ToFirewallConfigManagedRulesetsOwaspXssPtrOutputWithContext(context.Context) FirewallConfigManagedRulesetsOwaspXssPtrOutput
}

type firewallConfigManagedRulesetsOwaspXssPtrType FirewallConfigManagedRulesetsOwaspXssArgs

func FirewallConfigManagedRulesetsOwaspXssPtr(v *FirewallConfigManagedRulesetsOwaspXssArgs) FirewallConfigManagedRulesetsOwaspXssPtrInput {
	return (*firewallConfigManagedRulesetsOwaspXssPtrType)(v)
}

func (*firewallConfigManagedRulesetsOwaspXssPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallConfigManagedRulesetsOwaspXss)(nil)).Elem()
}

func (i *firewallConfigManagedRulesetsOwaspXssPtrType) ToFirewallConfigManagedRulesetsOwaspXssPtrOutput() FirewallConfigManagedRulesetsOwaspXssPtrOutput {
	return i.ToFirewallConfigManagedRulesetsOwaspXssPtrOutputWithContext(context.Background())
}

func (i *firewallConfigManagedRulesetsOwaspXssPtrType) ToFirewallConfigManagedRulesetsOwaspXssPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspXssPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigManagedRulesetsOwaspXssPtrOutput)
}

type FirewallConfigManagedRulesetsOwaspXssOutput struct{ *pulumi.OutputState }

func (FirewallConfigManagedRulesetsOwaspXssOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspXss)(nil)).Elem()
}

func (o FirewallConfigManagedRulesetsOwaspXssOutput) ToFirewallConfigManagedRulesetsOwaspXssOutput() FirewallConfigManagedRulesetsOwaspXssOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspXssOutput) ToFirewallConfigManagedRulesetsOwaspXssOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspXssOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspXssOutput) ToFirewallConfigManagedRulesetsOwaspXssPtrOutput() FirewallConfigManagedRulesetsOwaspXssPtrOutput {
	return o.ToFirewallConfigManagedRulesetsOwaspXssPtrOutputWithContext(context.Background())
}

func (o FirewallConfigManagedRulesetsOwaspXssOutput) ToFirewallConfigManagedRulesetsOwaspXssPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspXssPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallConfigManagedRulesetsOwaspXss) *FirewallConfigManagedRulesetsOwaspXss {
		return &v
	}).(FirewallConfigManagedRulesetsOwaspXssPtrOutput)
}

func (o FirewallConfigManagedRulesetsOwaspXssOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallConfigManagedRulesetsOwaspXss) string { return v.Action }).(pulumi.StringOutput)
}

func (o FirewallConfigManagedRulesetsOwaspXssOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirewallConfigManagedRulesetsOwaspXss) *bool { return v.Active }).(pulumi.BoolPtrOutput)
}

type FirewallConfigManagedRulesetsOwaspXssPtrOutput struct{ *pulumi.OutputState }

func (FirewallConfigManagedRulesetsOwaspXssPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallConfigManagedRulesetsOwaspXss)(nil)).Elem()
}

func (o FirewallConfigManagedRulesetsOwaspXssPtrOutput) ToFirewallConfigManagedRulesetsOwaspXssPtrOutput() FirewallConfigManagedRulesetsOwaspXssPtrOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspXssPtrOutput) ToFirewallConfigManagedRulesetsOwaspXssPtrOutputWithContext(ctx context.Context) FirewallConfigManagedRulesetsOwaspXssPtrOutput {
	return o
}

func (o FirewallConfigManagedRulesetsOwaspXssPtrOutput) Elem() FirewallConfigManagedRulesetsOwaspXssOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwaspXss) FirewallConfigManagedRulesetsOwaspXss {
		if v != nil {
			return *v
		}
		var ret FirewallConfigManagedRulesetsOwaspXss
		return ret
	}).(FirewallConfigManagedRulesetsOwaspXssOutput)
}

func (o FirewallConfigManagedRulesetsOwaspXssPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwaspXss) *string {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(pulumi.StringPtrOutput)
}

func (o FirewallConfigManagedRulesetsOwaspXssPtrOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirewallConfigManagedRulesetsOwaspXss) *bool {
		if v == nil {
			return nil
		}
		return v.Active
	}).(pulumi.BoolPtrOutput)
}

type FirewallConfigRules struct {
	Rules []FirewallConfigRulesRule `pulumi:"rules"`
}

// FirewallConfigRulesInput is an input type that accepts FirewallConfigRulesArgs and FirewallConfigRulesOutput values.
// You can construct a concrete instance of `FirewallConfigRulesInput` via:
//
//	FirewallConfigRulesArgs{...}
type FirewallConfigRulesInput interface {
	pulumi.Input

	ToFirewallConfigRulesOutput() FirewallConfigRulesOutput
	ToFirewallConfigRulesOutputWithContext(context.Context) FirewallConfigRulesOutput
}

type FirewallConfigRulesArgs struct {
	Rules FirewallConfigRulesRuleArrayInput `pulumi:"rules"`
}

func (FirewallConfigRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigRules)(nil)).Elem()
}

func (i FirewallConfigRulesArgs) ToFirewallConfigRulesOutput() FirewallConfigRulesOutput {
	return i.ToFirewallConfigRulesOutputWithContext(context.Background())
}

func (i FirewallConfigRulesArgs) ToFirewallConfigRulesOutputWithContext(ctx context.Context) FirewallConfigRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigRulesOutput)
}

func (i FirewallConfigRulesArgs) ToFirewallConfigRulesPtrOutput() FirewallConfigRulesPtrOutput {
	return i.ToFirewallConfigRulesPtrOutputWithContext(context.Background())
}

func (i FirewallConfigRulesArgs) ToFirewallConfigRulesPtrOutputWithContext(ctx context.Context) FirewallConfigRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigRulesOutput).ToFirewallConfigRulesPtrOutputWithContext(ctx)
}

// FirewallConfigRulesPtrInput is an input type that accepts FirewallConfigRulesArgs, FirewallConfigRulesPtr and FirewallConfigRulesPtrOutput values.
// You can construct a concrete instance of `FirewallConfigRulesPtrInput` via:
//
//	        FirewallConfigRulesArgs{...}
//
//	or:
//
//	        nil
type FirewallConfigRulesPtrInput interface {
	pulumi.Input

	ToFirewallConfigRulesPtrOutput() FirewallConfigRulesPtrOutput
	ToFirewallConfigRulesPtrOutputWithContext(context.Context) FirewallConfigRulesPtrOutput
}

type firewallConfigRulesPtrType FirewallConfigRulesArgs

func FirewallConfigRulesPtr(v *FirewallConfigRulesArgs) FirewallConfigRulesPtrInput {
	return (*firewallConfigRulesPtrType)(v)
}

func (*firewallConfigRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallConfigRules)(nil)).Elem()
}

func (i *firewallConfigRulesPtrType) ToFirewallConfigRulesPtrOutput() FirewallConfigRulesPtrOutput {
	return i.ToFirewallConfigRulesPtrOutputWithContext(context.Background())
}

func (i *firewallConfigRulesPtrType) ToFirewallConfigRulesPtrOutputWithContext(ctx context.Context) FirewallConfigRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigRulesPtrOutput)
}

type FirewallConfigRulesOutput struct{ *pulumi.OutputState }

func (FirewallConfigRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigRules)(nil)).Elem()
}

func (o FirewallConfigRulesOutput) ToFirewallConfigRulesOutput() FirewallConfigRulesOutput {
	return o
}

func (o FirewallConfigRulesOutput) ToFirewallConfigRulesOutputWithContext(ctx context.Context) FirewallConfigRulesOutput {
	return o
}

func (o FirewallConfigRulesOutput) ToFirewallConfigRulesPtrOutput() FirewallConfigRulesPtrOutput {
	return o.ToFirewallConfigRulesPtrOutputWithContext(context.Background())
}

func (o FirewallConfigRulesOutput) ToFirewallConfigRulesPtrOutputWithContext(ctx context.Context) FirewallConfigRulesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallConfigRules) *FirewallConfigRules {
		return &v
	}).(FirewallConfigRulesPtrOutput)
}

func (o FirewallConfigRulesOutput) Rules() FirewallConfigRulesRuleArrayOutput {
	return o.ApplyT(func(v FirewallConfigRules) []FirewallConfigRulesRule { return v.Rules }).(FirewallConfigRulesRuleArrayOutput)
}

type FirewallConfigRulesPtrOutput struct{ *pulumi.OutputState }

func (FirewallConfigRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallConfigRules)(nil)).Elem()
}

func (o FirewallConfigRulesPtrOutput) ToFirewallConfigRulesPtrOutput() FirewallConfigRulesPtrOutput {
	return o
}

func (o FirewallConfigRulesPtrOutput) ToFirewallConfigRulesPtrOutputWithContext(ctx context.Context) FirewallConfigRulesPtrOutput {
	return o
}

func (o FirewallConfigRulesPtrOutput) Elem() FirewallConfigRulesOutput {
	return o.ApplyT(func(v *FirewallConfigRules) FirewallConfigRules {
		if v != nil {
			return *v
		}
		var ret FirewallConfigRules
		return ret
	}).(FirewallConfigRulesOutput)
}

func (o FirewallConfigRulesPtrOutput) Rules() FirewallConfigRulesRuleArrayOutput {
	return o.ApplyT(func(v *FirewallConfigRules) []FirewallConfigRulesRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(FirewallConfigRulesRuleArrayOutput)
}

type FirewallConfigRulesRule struct {
	// Actions to take when the condition groups match a request
	Action FirewallConfigRulesRuleAction `pulumi:"action"`
	// Rule is active or disabled
	Active *bool `pulumi:"active"`
	// Sets of conditions that may match a request
	ConditionGroups []FirewallConfigRulesRuleConditionGroup `pulumi:"conditionGroups"`
	Description     *string                                 `pulumi:"description"`
	Id              *string                                 `pulumi:"id"`
	// Name to identify the rule
	Name string `pulumi:"name"`
}

// FirewallConfigRulesRuleInput is an input type that accepts FirewallConfigRulesRuleArgs and FirewallConfigRulesRuleOutput values.
// You can construct a concrete instance of `FirewallConfigRulesRuleInput` via:
//
//	FirewallConfigRulesRuleArgs{...}
type FirewallConfigRulesRuleInput interface {
	pulumi.Input

	ToFirewallConfigRulesRuleOutput() FirewallConfigRulesRuleOutput
	ToFirewallConfigRulesRuleOutputWithContext(context.Context) FirewallConfigRulesRuleOutput
}

type FirewallConfigRulesRuleArgs struct {
	// Actions to take when the condition groups match a request
	Action FirewallConfigRulesRuleActionInput `pulumi:"action"`
	// Rule is active or disabled
	Active pulumi.BoolPtrInput `pulumi:"active"`
	// Sets of conditions that may match a request
	ConditionGroups FirewallConfigRulesRuleConditionGroupArrayInput `pulumi:"conditionGroups"`
	Description     pulumi.StringPtrInput                           `pulumi:"description"`
	Id              pulumi.StringPtrInput                           `pulumi:"id"`
	// Name to identify the rule
	Name pulumi.StringInput `pulumi:"name"`
}

func (FirewallConfigRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigRulesRule)(nil)).Elem()
}

func (i FirewallConfigRulesRuleArgs) ToFirewallConfigRulesRuleOutput() FirewallConfigRulesRuleOutput {
	return i.ToFirewallConfigRulesRuleOutputWithContext(context.Background())
}

func (i FirewallConfigRulesRuleArgs) ToFirewallConfigRulesRuleOutputWithContext(ctx context.Context) FirewallConfigRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigRulesRuleOutput)
}

// FirewallConfigRulesRuleArrayInput is an input type that accepts FirewallConfigRulesRuleArray and FirewallConfigRulesRuleArrayOutput values.
// You can construct a concrete instance of `FirewallConfigRulesRuleArrayInput` via:
//
//	FirewallConfigRulesRuleArray{ FirewallConfigRulesRuleArgs{...} }
type FirewallConfigRulesRuleArrayInput interface {
	pulumi.Input

	ToFirewallConfigRulesRuleArrayOutput() FirewallConfigRulesRuleArrayOutput
	ToFirewallConfigRulesRuleArrayOutputWithContext(context.Context) FirewallConfigRulesRuleArrayOutput
}

type FirewallConfigRulesRuleArray []FirewallConfigRulesRuleInput

func (FirewallConfigRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallConfigRulesRule)(nil)).Elem()
}

func (i FirewallConfigRulesRuleArray) ToFirewallConfigRulesRuleArrayOutput() FirewallConfigRulesRuleArrayOutput {
	return i.ToFirewallConfigRulesRuleArrayOutputWithContext(context.Background())
}

func (i FirewallConfigRulesRuleArray) ToFirewallConfigRulesRuleArrayOutputWithContext(ctx context.Context) FirewallConfigRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigRulesRuleArrayOutput)
}

type FirewallConfigRulesRuleOutput struct{ *pulumi.OutputState }

func (FirewallConfigRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigRulesRule)(nil)).Elem()
}

func (o FirewallConfigRulesRuleOutput) ToFirewallConfigRulesRuleOutput() FirewallConfigRulesRuleOutput {
	return o
}

func (o FirewallConfigRulesRuleOutput) ToFirewallConfigRulesRuleOutputWithContext(ctx context.Context) FirewallConfigRulesRuleOutput {
	return o
}

// Actions to take when the condition groups match a request
func (o FirewallConfigRulesRuleOutput) Action() FirewallConfigRulesRuleActionOutput {
	return o.ApplyT(func(v FirewallConfigRulesRule) FirewallConfigRulesRuleAction { return v.Action }).(FirewallConfigRulesRuleActionOutput)
}

// Rule is active or disabled
func (o FirewallConfigRulesRuleOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirewallConfigRulesRule) *bool { return v.Active }).(pulumi.BoolPtrOutput)
}

// Sets of conditions that may match a request
func (o FirewallConfigRulesRuleOutput) ConditionGroups() FirewallConfigRulesRuleConditionGroupArrayOutput {
	return o.ApplyT(func(v FirewallConfigRulesRule) []FirewallConfigRulesRuleConditionGroup { return v.ConditionGroups }).(FirewallConfigRulesRuleConditionGroupArrayOutput)
}

func (o FirewallConfigRulesRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallConfigRulesRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o FirewallConfigRulesRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallConfigRulesRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name to identify the rule
func (o FirewallConfigRulesRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallConfigRulesRule) string { return v.Name }).(pulumi.StringOutput)
}

type FirewallConfigRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (FirewallConfigRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallConfigRulesRule)(nil)).Elem()
}

func (o FirewallConfigRulesRuleArrayOutput) ToFirewallConfigRulesRuleArrayOutput() FirewallConfigRulesRuleArrayOutput {
	return o
}

func (o FirewallConfigRulesRuleArrayOutput) ToFirewallConfigRulesRuleArrayOutputWithContext(ctx context.Context) FirewallConfigRulesRuleArrayOutput {
	return o
}

func (o FirewallConfigRulesRuleArrayOutput) Index(i pulumi.IntInput) FirewallConfigRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallConfigRulesRule {
		return vs[0].([]FirewallConfigRulesRule)[vs[1].(int)]
	}).(FirewallConfigRulesRuleOutput)
}

type FirewallConfigRulesRuleAction struct {
	// Base action
	Action string `pulumi:"action"`
	// Forward persistence of a rule action
	ActionDuration *string `pulumi:"actionDuration"`
	// Behavior or a rate limiting action. Required if action is rate*limit
	RateLimit *FirewallConfigRulesRuleActionRateLimit `pulumi:"rateLimit"`
	// How to redirect a request. Required if action is redirect
	Redirect *FirewallConfigRulesRuleActionRedirect `pulumi:"redirect"`
}

// FirewallConfigRulesRuleActionInput is an input type that accepts FirewallConfigRulesRuleActionArgs and FirewallConfigRulesRuleActionOutput values.
// You can construct a concrete instance of `FirewallConfigRulesRuleActionInput` via:
//
//	FirewallConfigRulesRuleActionArgs{...}
type FirewallConfigRulesRuleActionInput interface {
	pulumi.Input

	ToFirewallConfigRulesRuleActionOutput() FirewallConfigRulesRuleActionOutput
	ToFirewallConfigRulesRuleActionOutputWithContext(context.Context) FirewallConfigRulesRuleActionOutput
}

type FirewallConfigRulesRuleActionArgs struct {
	// Base action
	Action pulumi.StringInput `pulumi:"action"`
	// Forward persistence of a rule action
	ActionDuration pulumi.StringPtrInput `pulumi:"actionDuration"`
	// Behavior or a rate limiting action. Required if action is rate*limit
	RateLimit FirewallConfigRulesRuleActionRateLimitPtrInput `pulumi:"rateLimit"`
	// How to redirect a request. Required if action is redirect
	Redirect FirewallConfigRulesRuleActionRedirectPtrInput `pulumi:"redirect"`
}

func (FirewallConfigRulesRuleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigRulesRuleAction)(nil)).Elem()
}

func (i FirewallConfigRulesRuleActionArgs) ToFirewallConfigRulesRuleActionOutput() FirewallConfigRulesRuleActionOutput {
	return i.ToFirewallConfigRulesRuleActionOutputWithContext(context.Background())
}

func (i FirewallConfigRulesRuleActionArgs) ToFirewallConfigRulesRuleActionOutputWithContext(ctx context.Context) FirewallConfigRulesRuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigRulesRuleActionOutput)
}

type FirewallConfigRulesRuleActionOutput struct{ *pulumi.OutputState }

func (FirewallConfigRulesRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigRulesRuleAction)(nil)).Elem()
}

func (o FirewallConfigRulesRuleActionOutput) ToFirewallConfigRulesRuleActionOutput() FirewallConfigRulesRuleActionOutput {
	return o
}

func (o FirewallConfigRulesRuleActionOutput) ToFirewallConfigRulesRuleActionOutputWithContext(ctx context.Context) FirewallConfigRulesRuleActionOutput {
	return o
}

// Base action
func (o FirewallConfigRulesRuleActionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallConfigRulesRuleAction) string { return v.Action }).(pulumi.StringOutput)
}

// Forward persistence of a rule action
func (o FirewallConfigRulesRuleActionOutput) ActionDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallConfigRulesRuleAction) *string { return v.ActionDuration }).(pulumi.StringPtrOutput)
}

// Behavior or a rate limiting action. Required if action is rate*limit
func (o FirewallConfigRulesRuleActionOutput) RateLimit() FirewallConfigRulesRuleActionRateLimitPtrOutput {
	return o.ApplyT(func(v FirewallConfigRulesRuleAction) *FirewallConfigRulesRuleActionRateLimit { return v.RateLimit }).(FirewallConfigRulesRuleActionRateLimitPtrOutput)
}

// How to redirect a request. Required if action is redirect
func (o FirewallConfigRulesRuleActionOutput) Redirect() FirewallConfigRulesRuleActionRedirectPtrOutput {
	return o.ApplyT(func(v FirewallConfigRulesRuleAction) *FirewallConfigRulesRuleActionRedirect { return v.Redirect }).(FirewallConfigRulesRuleActionRedirectPtrOutput)
}

type FirewallConfigRulesRuleActionRateLimit struct {
	// Action to take when rate limit is exceeded
	Action string `pulumi:"action"`
	// Rate limiting algorithm
	Algo string `pulumi:"algo"`
	// Keys used to bucket an individual client
	Keys []string `pulumi:"keys"`
	// number of requests allowed in the window
	Limit int `pulumi:"limit"`
	// Time window in seconds
	Window int `pulumi:"window"`
}

// FirewallConfigRulesRuleActionRateLimitInput is an input type that accepts FirewallConfigRulesRuleActionRateLimitArgs and FirewallConfigRulesRuleActionRateLimitOutput values.
// You can construct a concrete instance of `FirewallConfigRulesRuleActionRateLimitInput` via:
//
//	FirewallConfigRulesRuleActionRateLimitArgs{...}
type FirewallConfigRulesRuleActionRateLimitInput interface {
	pulumi.Input

	ToFirewallConfigRulesRuleActionRateLimitOutput() FirewallConfigRulesRuleActionRateLimitOutput
	ToFirewallConfigRulesRuleActionRateLimitOutputWithContext(context.Context) FirewallConfigRulesRuleActionRateLimitOutput
}

type FirewallConfigRulesRuleActionRateLimitArgs struct {
	// Action to take when rate limit is exceeded
	Action pulumi.StringInput `pulumi:"action"`
	// Rate limiting algorithm
	Algo pulumi.StringInput `pulumi:"algo"`
	// Keys used to bucket an individual client
	Keys pulumi.StringArrayInput `pulumi:"keys"`
	// number of requests allowed in the window
	Limit pulumi.IntInput `pulumi:"limit"`
	// Time window in seconds
	Window pulumi.IntInput `pulumi:"window"`
}

func (FirewallConfigRulesRuleActionRateLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigRulesRuleActionRateLimit)(nil)).Elem()
}

func (i FirewallConfigRulesRuleActionRateLimitArgs) ToFirewallConfigRulesRuleActionRateLimitOutput() FirewallConfigRulesRuleActionRateLimitOutput {
	return i.ToFirewallConfigRulesRuleActionRateLimitOutputWithContext(context.Background())
}

func (i FirewallConfigRulesRuleActionRateLimitArgs) ToFirewallConfigRulesRuleActionRateLimitOutputWithContext(ctx context.Context) FirewallConfigRulesRuleActionRateLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigRulesRuleActionRateLimitOutput)
}

func (i FirewallConfigRulesRuleActionRateLimitArgs) ToFirewallConfigRulesRuleActionRateLimitPtrOutput() FirewallConfigRulesRuleActionRateLimitPtrOutput {
	return i.ToFirewallConfigRulesRuleActionRateLimitPtrOutputWithContext(context.Background())
}

func (i FirewallConfigRulesRuleActionRateLimitArgs) ToFirewallConfigRulesRuleActionRateLimitPtrOutputWithContext(ctx context.Context) FirewallConfigRulesRuleActionRateLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigRulesRuleActionRateLimitOutput).ToFirewallConfigRulesRuleActionRateLimitPtrOutputWithContext(ctx)
}

// FirewallConfigRulesRuleActionRateLimitPtrInput is an input type that accepts FirewallConfigRulesRuleActionRateLimitArgs, FirewallConfigRulesRuleActionRateLimitPtr and FirewallConfigRulesRuleActionRateLimitPtrOutput values.
// You can construct a concrete instance of `FirewallConfigRulesRuleActionRateLimitPtrInput` via:
//
//	        FirewallConfigRulesRuleActionRateLimitArgs{...}
//
//	or:
//
//	        nil
type FirewallConfigRulesRuleActionRateLimitPtrInput interface {
	pulumi.Input

	ToFirewallConfigRulesRuleActionRateLimitPtrOutput() FirewallConfigRulesRuleActionRateLimitPtrOutput
	ToFirewallConfigRulesRuleActionRateLimitPtrOutputWithContext(context.Context) FirewallConfigRulesRuleActionRateLimitPtrOutput
}

type firewallConfigRulesRuleActionRateLimitPtrType FirewallConfigRulesRuleActionRateLimitArgs

func FirewallConfigRulesRuleActionRateLimitPtr(v *FirewallConfigRulesRuleActionRateLimitArgs) FirewallConfigRulesRuleActionRateLimitPtrInput {
	return (*firewallConfigRulesRuleActionRateLimitPtrType)(v)
}

func (*firewallConfigRulesRuleActionRateLimitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallConfigRulesRuleActionRateLimit)(nil)).Elem()
}

func (i *firewallConfigRulesRuleActionRateLimitPtrType) ToFirewallConfigRulesRuleActionRateLimitPtrOutput() FirewallConfigRulesRuleActionRateLimitPtrOutput {
	return i.ToFirewallConfigRulesRuleActionRateLimitPtrOutputWithContext(context.Background())
}

func (i *firewallConfigRulesRuleActionRateLimitPtrType) ToFirewallConfigRulesRuleActionRateLimitPtrOutputWithContext(ctx context.Context) FirewallConfigRulesRuleActionRateLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigRulesRuleActionRateLimitPtrOutput)
}

type FirewallConfigRulesRuleActionRateLimitOutput struct{ *pulumi.OutputState }

func (FirewallConfigRulesRuleActionRateLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigRulesRuleActionRateLimit)(nil)).Elem()
}

func (o FirewallConfigRulesRuleActionRateLimitOutput) ToFirewallConfigRulesRuleActionRateLimitOutput() FirewallConfigRulesRuleActionRateLimitOutput {
	return o
}

func (o FirewallConfigRulesRuleActionRateLimitOutput) ToFirewallConfigRulesRuleActionRateLimitOutputWithContext(ctx context.Context) FirewallConfigRulesRuleActionRateLimitOutput {
	return o
}

func (o FirewallConfigRulesRuleActionRateLimitOutput) ToFirewallConfigRulesRuleActionRateLimitPtrOutput() FirewallConfigRulesRuleActionRateLimitPtrOutput {
	return o.ToFirewallConfigRulesRuleActionRateLimitPtrOutputWithContext(context.Background())
}

func (o FirewallConfigRulesRuleActionRateLimitOutput) ToFirewallConfigRulesRuleActionRateLimitPtrOutputWithContext(ctx context.Context) FirewallConfigRulesRuleActionRateLimitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallConfigRulesRuleActionRateLimit) *FirewallConfigRulesRuleActionRateLimit {
		return &v
	}).(FirewallConfigRulesRuleActionRateLimitPtrOutput)
}

// Action to take when rate limit is exceeded
func (o FirewallConfigRulesRuleActionRateLimitOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallConfigRulesRuleActionRateLimit) string { return v.Action }).(pulumi.StringOutput)
}

// Rate limiting algorithm
func (o FirewallConfigRulesRuleActionRateLimitOutput) Algo() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallConfigRulesRuleActionRateLimit) string { return v.Algo }).(pulumi.StringOutput)
}

// Keys used to bucket an individual client
func (o FirewallConfigRulesRuleActionRateLimitOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallConfigRulesRuleActionRateLimit) []string { return v.Keys }).(pulumi.StringArrayOutput)
}

// number of requests allowed in the window
func (o FirewallConfigRulesRuleActionRateLimitOutput) Limit() pulumi.IntOutput {
	return o.ApplyT(func(v FirewallConfigRulesRuleActionRateLimit) int { return v.Limit }).(pulumi.IntOutput)
}

// Time window in seconds
func (o FirewallConfigRulesRuleActionRateLimitOutput) Window() pulumi.IntOutput {
	return o.ApplyT(func(v FirewallConfigRulesRuleActionRateLimit) int { return v.Window }).(pulumi.IntOutput)
}

type FirewallConfigRulesRuleActionRateLimitPtrOutput struct{ *pulumi.OutputState }

func (FirewallConfigRulesRuleActionRateLimitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallConfigRulesRuleActionRateLimit)(nil)).Elem()
}

func (o FirewallConfigRulesRuleActionRateLimitPtrOutput) ToFirewallConfigRulesRuleActionRateLimitPtrOutput() FirewallConfigRulesRuleActionRateLimitPtrOutput {
	return o
}

func (o FirewallConfigRulesRuleActionRateLimitPtrOutput) ToFirewallConfigRulesRuleActionRateLimitPtrOutputWithContext(ctx context.Context) FirewallConfigRulesRuleActionRateLimitPtrOutput {
	return o
}

func (o FirewallConfigRulesRuleActionRateLimitPtrOutput) Elem() FirewallConfigRulesRuleActionRateLimitOutput {
	return o.ApplyT(func(v *FirewallConfigRulesRuleActionRateLimit) FirewallConfigRulesRuleActionRateLimit {
		if v != nil {
			return *v
		}
		var ret FirewallConfigRulesRuleActionRateLimit
		return ret
	}).(FirewallConfigRulesRuleActionRateLimitOutput)
}

// Action to take when rate limit is exceeded
func (o FirewallConfigRulesRuleActionRateLimitPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallConfigRulesRuleActionRateLimit) *string {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(pulumi.StringPtrOutput)
}

// Rate limiting algorithm
func (o FirewallConfigRulesRuleActionRateLimitPtrOutput) Algo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallConfigRulesRuleActionRateLimit) *string {
		if v == nil {
			return nil
		}
		return &v.Algo
	}).(pulumi.StringPtrOutput)
}

// Keys used to bucket an individual client
func (o FirewallConfigRulesRuleActionRateLimitPtrOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirewallConfigRulesRuleActionRateLimit) []string {
		if v == nil {
			return nil
		}
		return v.Keys
	}).(pulumi.StringArrayOutput)
}

// number of requests allowed in the window
func (o FirewallConfigRulesRuleActionRateLimitPtrOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallConfigRulesRuleActionRateLimit) *int {
		if v == nil {
			return nil
		}
		return &v.Limit
	}).(pulumi.IntPtrOutput)
}

// Time window in seconds
func (o FirewallConfigRulesRuleActionRateLimitPtrOutput) Window() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallConfigRulesRuleActionRateLimit) *int {
		if v == nil {
			return nil
		}
		return &v.Window
	}).(pulumi.IntPtrOutput)
}

type FirewallConfigRulesRuleActionRedirect struct {
	Location  string `pulumi:"location"`
	Permanent bool   `pulumi:"permanent"`
}

// FirewallConfigRulesRuleActionRedirectInput is an input type that accepts FirewallConfigRulesRuleActionRedirectArgs and FirewallConfigRulesRuleActionRedirectOutput values.
// You can construct a concrete instance of `FirewallConfigRulesRuleActionRedirectInput` via:
//
//	FirewallConfigRulesRuleActionRedirectArgs{...}
type FirewallConfigRulesRuleActionRedirectInput interface {
	pulumi.Input

	ToFirewallConfigRulesRuleActionRedirectOutput() FirewallConfigRulesRuleActionRedirectOutput
	ToFirewallConfigRulesRuleActionRedirectOutputWithContext(context.Context) FirewallConfigRulesRuleActionRedirectOutput
}

type FirewallConfigRulesRuleActionRedirectArgs struct {
	Location  pulumi.StringInput `pulumi:"location"`
	Permanent pulumi.BoolInput   `pulumi:"permanent"`
}

func (FirewallConfigRulesRuleActionRedirectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigRulesRuleActionRedirect)(nil)).Elem()
}

func (i FirewallConfigRulesRuleActionRedirectArgs) ToFirewallConfigRulesRuleActionRedirectOutput() FirewallConfigRulesRuleActionRedirectOutput {
	return i.ToFirewallConfigRulesRuleActionRedirectOutputWithContext(context.Background())
}

func (i FirewallConfigRulesRuleActionRedirectArgs) ToFirewallConfigRulesRuleActionRedirectOutputWithContext(ctx context.Context) FirewallConfigRulesRuleActionRedirectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigRulesRuleActionRedirectOutput)
}

func (i FirewallConfigRulesRuleActionRedirectArgs) ToFirewallConfigRulesRuleActionRedirectPtrOutput() FirewallConfigRulesRuleActionRedirectPtrOutput {
	return i.ToFirewallConfigRulesRuleActionRedirectPtrOutputWithContext(context.Background())
}

func (i FirewallConfigRulesRuleActionRedirectArgs) ToFirewallConfigRulesRuleActionRedirectPtrOutputWithContext(ctx context.Context) FirewallConfigRulesRuleActionRedirectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigRulesRuleActionRedirectOutput).ToFirewallConfigRulesRuleActionRedirectPtrOutputWithContext(ctx)
}

// FirewallConfigRulesRuleActionRedirectPtrInput is an input type that accepts FirewallConfigRulesRuleActionRedirectArgs, FirewallConfigRulesRuleActionRedirectPtr and FirewallConfigRulesRuleActionRedirectPtrOutput values.
// You can construct a concrete instance of `FirewallConfigRulesRuleActionRedirectPtrInput` via:
//
//	        FirewallConfigRulesRuleActionRedirectArgs{...}
//
//	or:
//
//	        nil
type FirewallConfigRulesRuleActionRedirectPtrInput interface {
	pulumi.Input

	ToFirewallConfigRulesRuleActionRedirectPtrOutput() FirewallConfigRulesRuleActionRedirectPtrOutput
	ToFirewallConfigRulesRuleActionRedirectPtrOutputWithContext(context.Context) FirewallConfigRulesRuleActionRedirectPtrOutput
}

type firewallConfigRulesRuleActionRedirectPtrType FirewallConfigRulesRuleActionRedirectArgs

func FirewallConfigRulesRuleActionRedirectPtr(v *FirewallConfigRulesRuleActionRedirectArgs) FirewallConfigRulesRuleActionRedirectPtrInput {
	return (*firewallConfigRulesRuleActionRedirectPtrType)(v)
}

func (*firewallConfigRulesRuleActionRedirectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallConfigRulesRuleActionRedirect)(nil)).Elem()
}

func (i *firewallConfigRulesRuleActionRedirectPtrType) ToFirewallConfigRulesRuleActionRedirectPtrOutput() FirewallConfigRulesRuleActionRedirectPtrOutput {
	return i.ToFirewallConfigRulesRuleActionRedirectPtrOutputWithContext(context.Background())
}

func (i *firewallConfigRulesRuleActionRedirectPtrType) ToFirewallConfigRulesRuleActionRedirectPtrOutputWithContext(ctx context.Context) FirewallConfigRulesRuleActionRedirectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigRulesRuleActionRedirectPtrOutput)
}

type FirewallConfigRulesRuleActionRedirectOutput struct{ *pulumi.OutputState }

func (FirewallConfigRulesRuleActionRedirectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigRulesRuleActionRedirect)(nil)).Elem()
}

func (o FirewallConfigRulesRuleActionRedirectOutput) ToFirewallConfigRulesRuleActionRedirectOutput() FirewallConfigRulesRuleActionRedirectOutput {
	return o
}

func (o FirewallConfigRulesRuleActionRedirectOutput) ToFirewallConfigRulesRuleActionRedirectOutputWithContext(ctx context.Context) FirewallConfigRulesRuleActionRedirectOutput {
	return o
}

func (o FirewallConfigRulesRuleActionRedirectOutput) ToFirewallConfigRulesRuleActionRedirectPtrOutput() FirewallConfigRulesRuleActionRedirectPtrOutput {
	return o.ToFirewallConfigRulesRuleActionRedirectPtrOutputWithContext(context.Background())
}

func (o FirewallConfigRulesRuleActionRedirectOutput) ToFirewallConfigRulesRuleActionRedirectPtrOutputWithContext(ctx context.Context) FirewallConfigRulesRuleActionRedirectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallConfigRulesRuleActionRedirect) *FirewallConfigRulesRuleActionRedirect {
		return &v
	}).(FirewallConfigRulesRuleActionRedirectPtrOutput)
}

func (o FirewallConfigRulesRuleActionRedirectOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallConfigRulesRuleActionRedirect) string { return v.Location }).(pulumi.StringOutput)
}

func (o FirewallConfigRulesRuleActionRedirectOutput) Permanent() pulumi.BoolOutput {
	return o.ApplyT(func(v FirewallConfigRulesRuleActionRedirect) bool { return v.Permanent }).(pulumi.BoolOutput)
}

type FirewallConfigRulesRuleActionRedirectPtrOutput struct{ *pulumi.OutputState }

func (FirewallConfigRulesRuleActionRedirectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallConfigRulesRuleActionRedirect)(nil)).Elem()
}

func (o FirewallConfigRulesRuleActionRedirectPtrOutput) ToFirewallConfigRulesRuleActionRedirectPtrOutput() FirewallConfigRulesRuleActionRedirectPtrOutput {
	return o
}

func (o FirewallConfigRulesRuleActionRedirectPtrOutput) ToFirewallConfigRulesRuleActionRedirectPtrOutputWithContext(ctx context.Context) FirewallConfigRulesRuleActionRedirectPtrOutput {
	return o
}

func (o FirewallConfigRulesRuleActionRedirectPtrOutput) Elem() FirewallConfigRulesRuleActionRedirectOutput {
	return o.ApplyT(func(v *FirewallConfigRulesRuleActionRedirect) FirewallConfigRulesRuleActionRedirect {
		if v != nil {
			return *v
		}
		var ret FirewallConfigRulesRuleActionRedirect
		return ret
	}).(FirewallConfigRulesRuleActionRedirectOutput)
}

func (o FirewallConfigRulesRuleActionRedirectPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallConfigRulesRuleActionRedirect) *string {
		if v == nil {
			return nil
		}
		return &v.Location
	}).(pulumi.StringPtrOutput)
}

func (o FirewallConfigRulesRuleActionRedirectPtrOutput) Permanent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirewallConfigRulesRuleActionRedirect) *bool {
		if v == nil {
			return nil
		}
		return &v.Permanent
	}).(pulumi.BoolPtrOutput)
}

type FirewallConfigRulesRuleConditionGroup struct {
	// Conditions that must all match within a group
	Conditions []FirewallConfigRulesRuleConditionGroupCondition `pulumi:"conditions"`
}

// FirewallConfigRulesRuleConditionGroupInput is an input type that accepts FirewallConfigRulesRuleConditionGroupArgs and FirewallConfigRulesRuleConditionGroupOutput values.
// You can construct a concrete instance of `FirewallConfigRulesRuleConditionGroupInput` via:
//
//	FirewallConfigRulesRuleConditionGroupArgs{...}
type FirewallConfigRulesRuleConditionGroupInput interface {
	pulumi.Input

	ToFirewallConfigRulesRuleConditionGroupOutput() FirewallConfigRulesRuleConditionGroupOutput
	ToFirewallConfigRulesRuleConditionGroupOutputWithContext(context.Context) FirewallConfigRulesRuleConditionGroupOutput
}

type FirewallConfigRulesRuleConditionGroupArgs struct {
	// Conditions that must all match within a group
	Conditions FirewallConfigRulesRuleConditionGroupConditionArrayInput `pulumi:"conditions"`
}

func (FirewallConfigRulesRuleConditionGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigRulesRuleConditionGroup)(nil)).Elem()
}

func (i FirewallConfigRulesRuleConditionGroupArgs) ToFirewallConfigRulesRuleConditionGroupOutput() FirewallConfigRulesRuleConditionGroupOutput {
	return i.ToFirewallConfigRulesRuleConditionGroupOutputWithContext(context.Background())
}

func (i FirewallConfigRulesRuleConditionGroupArgs) ToFirewallConfigRulesRuleConditionGroupOutputWithContext(ctx context.Context) FirewallConfigRulesRuleConditionGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigRulesRuleConditionGroupOutput)
}

// FirewallConfigRulesRuleConditionGroupArrayInput is an input type that accepts FirewallConfigRulesRuleConditionGroupArray and FirewallConfigRulesRuleConditionGroupArrayOutput values.
// You can construct a concrete instance of `FirewallConfigRulesRuleConditionGroupArrayInput` via:
//
//	FirewallConfigRulesRuleConditionGroupArray{ FirewallConfigRulesRuleConditionGroupArgs{...} }
type FirewallConfigRulesRuleConditionGroupArrayInput interface {
	pulumi.Input

	ToFirewallConfigRulesRuleConditionGroupArrayOutput() FirewallConfigRulesRuleConditionGroupArrayOutput
	ToFirewallConfigRulesRuleConditionGroupArrayOutputWithContext(context.Context) FirewallConfigRulesRuleConditionGroupArrayOutput
}

type FirewallConfigRulesRuleConditionGroupArray []FirewallConfigRulesRuleConditionGroupInput

func (FirewallConfigRulesRuleConditionGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallConfigRulesRuleConditionGroup)(nil)).Elem()
}

func (i FirewallConfigRulesRuleConditionGroupArray) ToFirewallConfigRulesRuleConditionGroupArrayOutput() FirewallConfigRulesRuleConditionGroupArrayOutput {
	return i.ToFirewallConfigRulesRuleConditionGroupArrayOutputWithContext(context.Background())
}

func (i FirewallConfigRulesRuleConditionGroupArray) ToFirewallConfigRulesRuleConditionGroupArrayOutputWithContext(ctx context.Context) FirewallConfigRulesRuleConditionGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigRulesRuleConditionGroupArrayOutput)
}

type FirewallConfigRulesRuleConditionGroupOutput struct{ *pulumi.OutputState }

func (FirewallConfigRulesRuleConditionGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigRulesRuleConditionGroup)(nil)).Elem()
}

func (o FirewallConfigRulesRuleConditionGroupOutput) ToFirewallConfigRulesRuleConditionGroupOutput() FirewallConfigRulesRuleConditionGroupOutput {
	return o
}

func (o FirewallConfigRulesRuleConditionGroupOutput) ToFirewallConfigRulesRuleConditionGroupOutputWithContext(ctx context.Context) FirewallConfigRulesRuleConditionGroupOutput {
	return o
}

// Conditions that must all match within a group
func (o FirewallConfigRulesRuleConditionGroupOutput) Conditions() FirewallConfigRulesRuleConditionGroupConditionArrayOutput {
	return o.ApplyT(func(v FirewallConfigRulesRuleConditionGroup) []FirewallConfigRulesRuleConditionGroupCondition {
		return v.Conditions
	}).(FirewallConfigRulesRuleConditionGroupConditionArrayOutput)
}

type FirewallConfigRulesRuleConditionGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallConfigRulesRuleConditionGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallConfigRulesRuleConditionGroup)(nil)).Elem()
}

func (o FirewallConfigRulesRuleConditionGroupArrayOutput) ToFirewallConfigRulesRuleConditionGroupArrayOutput() FirewallConfigRulesRuleConditionGroupArrayOutput {
	return o
}

func (o FirewallConfigRulesRuleConditionGroupArrayOutput) ToFirewallConfigRulesRuleConditionGroupArrayOutputWithContext(ctx context.Context) FirewallConfigRulesRuleConditionGroupArrayOutput {
	return o
}

func (o FirewallConfigRulesRuleConditionGroupArrayOutput) Index(i pulumi.IntInput) FirewallConfigRulesRuleConditionGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallConfigRulesRuleConditionGroup {
		return vs[0].([]FirewallConfigRulesRuleConditionGroup)[vs[1].(int)]
	}).(FirewallConfigRulesRuleConditionGroupOutput)
}

type FirewallConfigRulesRuleConditionGroupCondition struct {
	// Key within type to match against
	Key *string `pulumi:"key"`
	// Negate the condition
	Neg *bool `pulumi:"neg"`
	// How to comparse type to value
	Op string `pulumi:"op"`
	// Request key type to match against
	Type string `pulumi:"type"`
	// Value to match against
	Value *string `pulumi:"value"`
	// Values to match against if op is inc, ninc
	Values []string `pulumi:"values"`
}

// FirewallConfigRulesRuleConditionGroupConditionInput is an input type that accepts FirewallConfigRulesRuleConditionGroupConditionArgs and FirewallConfigRulesRuleConditionGroupConditionOutput values.
// You can construct a concrete instance of `FirewallConfigRulesRuleConditionGroupConditionInput` via:
//
//	FirewallConfigRulesRuleConditionGroupConditionArgs{...}
type FirewallConfigRulesRuleConditionGroupConditionInput interface {
	pulumi.Input

	ToFirewallConfigRulesRuleConditionGroupConditionOutput() FirewallConfigRulesRuleConditionGroupConditionOutput
	ToFirewallConfigRulesRuleConditionGroupConditionOutputWithContext(context.Context) FirewallConfigRulesRuleConditionGroupConditionOutput
}

type FirewallConfigRulesRuleConditionGroupConditionArgs struct {
	// Key within type to match against
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Negate the condition
	Neg pulumi.BoolPtrInput `pulumi:"neg"`
	// How to comparse type to value
	Op pulumi.StringInput `pulumi:"op"`
	// Request key type to match against
	Type pulumi.StringInput `pulumi:"type"`
	// Value to match against
	Value pulumi.StringPtrInput `pulumi:"value"`
	// Values to match against if op is inc, ninc
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (FirewallConfigRulesRuleConditionGroupConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigRulesRuleConditionGroupCondition)(nil)).Elem()
}

func (i FirewallConfigRulesRuleConditionGroupConditionArgs) ToFirewallConfigRulesRuleConditionGroupConditionOutput() FirewallConfigRulesRuleConditionGroupConditionOutput {
	return i.ToFirewallConfigRulesRuleConditionGroupConditionOutputWithContext(context.Background())
}

func (i FirewallConfigRulesRuleConditionGroupConditionArgs) ToFirewallConfigRulesRuleConditionGroupConditionOutputWithContext(ctx context.Context) FirewallConfigRulesRuleConditionGroupConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigRulesRuleConditionGroupConditionOutput)
}

// FirewallConfigRulesRuleConditionGroupConditionArrayInput is an input type that accepts FirewallConfigRulesRuleConditionGroupConditionArray and FirewallConfigRulesRuleConditionGroupConditionArrayOutput values.
// You can construct a concrete instance of `FirewallConfigRulesRuleConditionGroupConditionArrayInput` via:
//
//	FirewallConfigRulesRuleConditionGroupConditionArray{ FirewallConfigRulesRuleConditionGroupConditionArgs{...} }
type FirewallConfigRulesRuleConditionGroupConditionArrayInput interface {
	pulumi.Input

	ToFirewallConfigRulesRuleConditionGroupConditionArrayOutput() FirewallConfigRulesRuleConditionGroupConditionArrayOutput
	ToFirewallConfigRulesRuleConditionGroupConditionArrayOutputWithContext(context.Context) FirewallConfigRulesRuleConditionGroupConditionArrayOutput
}

type FirewallConfigRulesRuleConditionGroupConditionArray []FirewallConfigRulesRuleConditionGroupConditionInput

func (FirewallConfigRulesRuleConditionGroupConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallConfigRulesRuleConditionGroupCondition)(nil)).Elem()
}

func (i FirewallConfigRulesRuleConditionGroupConditionArray) ToFirewallConfigRulesRuleConditionGroupConditionArrayOutput() FirewallConfigRulesRuleConditionGroupConditionArrayOutput {
	return i.ToFirewallConfigRulesRuleConditionGroupConditionArrayOutputWithContext(context.Background())
}

func (i FirewallConfigRulesRuleConditionGroupConditionArray) ToFirewallConfigRulesRuleConditionGroupConditionArrayOutputWithContext(ctx context.Context) FirewallConfigRulesRuleConditionGroupConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallConfigRulesRuleConditionGroupConditionArrayOutput)
}

type FirewallConfigRulesRuleConditionGroupConditionOutput struct{ *pulumi.OutputState }

func (FirewallConfigRulesRuleConditionGroupConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallConfigRulesRuleConditionGroupCondition)(nil)).Elem()
}

func (o FirewallConfigRulesRuleConditionGroupConditionOutput) ToFirewallConfigRulesRuleConditionGroupConditionOutput() FirewallConfigRulesRuleConditionGroupConditionOutput {
	return o
}

func (o FirewallConfigRulesRuleConditionGroupConditionOutput) ToFirewallConfigRulesRuleConditionGroupConditionOutputWithContext(ctx context.Context) FirewallConfigRulesRuleConditionGroupConditionOutput {
	return o
}

// Key within type to match against
func (o FirewallConfigRulesRuleConditionGroupConditionOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallConfigRulesRuleConditionGroupCondition) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Negate the condition
func (o FirewallConfigRulesRuleConditionGroupConditionOutput) Neg() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirewallConfigRulesRuleConditionGroupCondition) *bool { return v.Neg }).(pulumi.BoolPtrOutput)
}

// How to comparse type to value
func (o FirewallConfigRulesRuleConditionGroupConditionOutput) Op() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallConfigRulesRuleConditionGroupCondition) string { return v.Op }).(pulumi.StringOutput)
}

// Request key type to match against
func (o FirewallConfigRulesRuleConditionGroupConditionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallConfigRulesRuleConditionGroupCondition) string { return v.Type }).(pulumi.StringOutput)
}

// Value to match against
func (o FirewallConfigRulesRuleConditionGroupConditionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallConfigRulesRuleConditionGroupCondition) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// Values to match against if op is inc, ninc
func (o FirewallConfigRulesRuleConditionGroupConditionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallConfigRulesRuleConditionGroupCondition) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type FirewallConfigRulesRuleConditionGroupConditionArrayOutput struct{ *pulumi.OutputState }

func (FirewallConfigRulesRuleConditionGroupConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallConfigRulesRuleConditionGroupCondition)(nil)).Elem()
}

func (o FirewallConfigRulesRuleConditionGroupConditionArrayOutput) ToFirewallConfigRulesRuleConditionGroupConditionArrayOutput() FirewallConfigRulesRuleConditionGroupConditionArrayOutput {
	return o
}

func (o FirewallConfigRulesRuleConditionGroupConditionArrayOutput) ToFirewallConfigRulesRuleConditionGroupConditionArrayOutputWithContext(ctx context.Context) FirewallConfigRulesRuleConditionGroupConditionArrayOutput {
	return o
}

func (o FirewallConfigRulesRuleConditionGroupConditionArrayOutput) Index(i pulumi.IntInput) FirewallConfigRulesRuleConditionGroupConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallConfigRulesRuleConditionGroupCondition {
		return vs[0].([]FirewallConfigRulesRuleConditionGroupCondition)[vs[1].(int)]
	}).(FirewallConfigRulesRuleConditionGroupConditionOutput)
}

type MicrofrontendGroupDefaultApp struct {
	// The default route for the project. Used for the screenshot of deployments.
	DefaultRoute *string `pulumi:"defaultRoute"`
	// The ID of the project.
	ProjectId string `pulumi:"projectId"`
}

// MicrofrontendGroupDefaultAppInput is an input type that accepts MicrofrontendGroupDefaultAppArgs and MicrofrontendGroupDefaultAppOutput values.
// You can construct a concrete instance of `MicrofrontendGroupDefaultAppInput` via:
//
//	MicrofrontendGroupDefaultAppArgs{...}
type MicrofrontendGroupDefaultAppInput interface {
	pulumi.Input

	ToMicrofrontendGroupDefaultAppOutput() MicrofrontendGroupDefaultAppOutput
	ToMicrofrontendGroupDefaultAppOutputWithContext(context.Context) MicrofrontendGroupDefaultAppOutput
}

type MicrofrontendGroupDefaultAppArgs struct {
	// The default route for the project. Used for the screenshot of deployments.
	DefaultRoute pulumi.StringPtrInput `pulumi:"defaultRoute"`
	// The ID of the project.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
}

func (MicrofrontendGroupDefaultAppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MicrofrontendGroupDefaultApp)(nil)).Elem()
}

func (i MicrofrontendGroupDefaultAppArgs) ToMicrofrontendGroupDefaultAppOutput() MicrofrontendGroupDefaultAppOutput {
	return i.ToMicrofrontendGroupDefaultAppOutputWithContext(context.Background())
}

func (i MicrofrontendGroupDefaultAppArgs) ToMicrofrontendGroupDefaultAppOutputWithContext(ctx context.Context) MicrofrontendGroupDefaultAppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MicrofrontendGroupDefaultAppOutput)
}

func (i MicrofrontendGroupDefaultAppArgs) ToMicrofrontendGroupDefaultAppPtrOutput() MicrofrontendGroupDefaultAppPtrOutput {
	return i.ToMicrofrontendGroupDefaultAppPtrOutputWithContext(context.Background())
}

func (i MicrofrontendGroupDefaultAppArgs) ToMicrofrontendGroupDefaultAppPtrOutputWithContext(ctx context.Context) MicrofrontendGroupDefaultAppPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MicrofrontendGroupDefaultAppOutput).ToMicrofrontendGroupDefaultAppPtrOutputWithContext(ctx)
}

// MicrofrontendGroupDefaultAppPtrInput is an input type that accepts MicrofrontendGroupDefaultAppArgs, MicrofrontendGroupDefaultAppPtr and MicrofrontendGroupDefaultAppPtrOutput values.
// You can construct a concrete instance of `MicrofrontendGroupDefaultAppPtrInput` via:
//
//	        MicrofrontendGroupDefaultAppArgs{...}
//
//	or:
//
//	        nil
type MicrofrontendGroupDefaultAppPtrInput interface {
	pulumi.Input

	ToMicrofrontendGroupDefaultAppPtrOutput() MicrofrontendGroupDefaultAppPtrOutput
	ToMicrofrontendGroupDefaultAppPtrOutputWithContext(context.Context) MicrofrontendGroupDefaultAppPtrOutput
}

type microfrontendGroupDefaultAppPtrType MicrofrontendGroupDefaultAppArgs

func MicrofrontendGroupDefaultAppPtr(v *MicrofrontendGroupDefaultAppArgs) MicrofrontendGroupDefaultAppPtrInput {
	return (*microfrontendGroupDefaultAppPtrType)(v)
}

func (*microfrontendGroupDefaultAppPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MicrofrontendGroupDefaultApp)(nil)).Elem()
}

func (i *microfrontendGroupDefaultAppPtrType) ToMicrofrontendGroupDefaultAppPtrOutput() MicrofrontendGroupDefaultAppPtrOutput {
	return i.ToMicrofrontendGroupDefaultAppPtrOutputWithContext(context.Background())
}

func (i *microfrontendGroupDefaultAppPtrType) ToMicrofrontendGroupDefaultAppPtrOutputWithContext(ctx context.Context) MicrofrontendGroupDefaultAppPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MicrofrontendGroupDefaultAppPtrOutput)
}

type MicrofrontendGroupDefaultAppOutput struct{ *pulumi.OutputState }

func (MicrofrontendGroupDefaultAppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MicrofrontendGroupDefaultApp)(nil)).Elem()
}

func (o MicrofrontendGroupDefaultAppOutput) ToMicrofrontendGroupDefaultAppOutput() MicrofrontendGroupDefaultAppOutput {
	return o
}

func (o MicrofrontendGroupDefaultAppOutput) ToMicrofrontendGroupDefaultAppOutputWithContext(ctx context.Context) MicrofrontendGroupDefaultAppOutput {
	return o
}

func (o MicrofrontendGroupDefaultAppOutput) ToMicrofrontendGroupDefaultAppPtrOutput() MicrofrontendGroupDefaultAppPtrOutput {
	return o.ToMicrofrontendGroupDefaultAppPtrOutputWithContext(context.Background())
}

func (o MicrofrontendGroupDefaultAppOutput) ToMicrofrontendGroupDefaultAppPtrOutputWithContext(ctx context.Context) MicrofrontendGroupDefaultAppPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MicrofrontendGroupDefaultApp) *MicrofrontendGroupDefaultApp {
		return &v
	}).(MicrofrontendGroupDefaultAppPtrOutput)
}

// The default route for the project. Used for the screenshot of deployments.
func (o MicrofrontendGroupDefaultAppOutput) DefaultRoute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MicrofrontendGroupDefaultApp) *string { return v.DefaultRoute }).(pulumi.StringPtrOutput)
}

// The ID of the project.
func (o MicrofrontendGroupDefaultAppOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v MicrofrontendGroupDefaultApp) string { return v.ProjectId }).(pulumi.StringOutput)
}

type MicrofrontendGroupDefaultAppPtrOutput struct{ *pulumi.OutputState }

func (MicrofrontendGroupDefaultAppPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MicrofrontendGroupDefaultApp)(nil)).Elem()
}

func (o MicrofrontendGroupDefaultAppPtrOutput) ToMicrofrontendGroupDefaultAppPtrOutput() MicrofrontendGroupDefaultAppPtrOutput {
	return o
}

func (o MicrofrontendGroupDefaultAppPtrOutput) ToMicrofrontendGroupDefaultAppPtrOutputWithContext(ctx context.Context) MicrofrontendGroupDefaultAppPtrOutput {
	return o
}

func (o MicrofrontendGroupDefaultAppPtrOutput) Elem() MicrofrontendGroupDefaultAppOutput {
	return o.ApplyT(func(v *MicrofrontendGroupDefaultApp) MicrofrontendGroupDefaultApp {
		if v != nil {
			return *v
		}
		var ret MicrofrontendGroupDefaultApp
		return ret
	}).(MicrofrontendGroupDefaultAppOutput)
}

// The default route for the project. Used for the screenshot of deployments.
func (o MicrofrontendGroupDefaultAppPtrOutput) DefaultRoute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MicrofrontendGroupDefaultApp) *string {
		if v == nil {
			return nil
		}
		return v.DefaultRoute
	}).(pulumi.StringPtrOutput)
}

// The ID of the project.
func (o MicrofrontendGroupDefaultAppPtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MicrofrontendGroupDefaultApp) *string {
		if v == nil {
			return nil
		}
		return &v.ProjectId
	}).(pulumi.StringPtrOutput)
}

type ProjectEnvironment struct {
	// A comment explaining what the environment variable is for.
	Comment *string `pulumi:"comment"`
	// The IDs of Custom Environments that the Environment Variable should be present on. At least one of `target` or `customEnvironmentIds` must be set.
	CustomEnvironmentIds []string `pulumi:"customEnvironmentIds"`
	// The git branch of the Environment Variable.
	GitBranch *string `pulumi:"gitBranch"`
	// The ID of the Environment Variable.
	Id *string `pulumi:"id"`
	// The name of the Environment Variable.
	Key string `pulumi:"key"`
	// Whether the Environment Variable is sensitive or not. (May be affected by a [team-wide environment variable policy](https://vercel.com/docs/projects/environment-variables/sensitive-environment-variables#environment-variables-policy))
	Sensitive *bool `pulumi:"sensitive"`
	// The environments that the Environment Variable should be present on. Valid targets are either `production`, `preview`, or `development`. At least one of `target` or `customEnvironmentIds` must be set.
	Targets []string `pulumi:"targets"`
	// The value of the Environment Variable.
	Value string `pulumi:"value"`
}

// ProjectEnvironmentInput is an input type that accepts ProjectEnvironmentArgs and ProjectEnvironmentOutput values.
// You can construct a concrete instance of `ProjectEnvironmentInput` via:
//
//	ProjectEnvironmentArgs{...}
type ProjectEnvironmentInput interface {
	pulumi.Input

	ToProjectEnvironmentOutput() ProjectEnvironmentOutput
	ToProjectEnvironmentOutputWithContext(context.Context) ProjectEnvironmentOutput
}

type ProjectEnvironmentArgs struct {
	// A comment explaining what the environment variable is for.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// The IDs of Custom Environments that the Environment Variable should be present on. At least one of `target` or `customEnvironmentIds` must be set.
	CustomEnvironmentIds pulumi.StringArrayInput `pulumi:"customEnvironmentIds"`
	// The git branch of the Environment Variable.
	GitBranch pulumi.StringPtrInput `pulumi:"gitBranch"`
	// The ID of the Environment Variable.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the Environment Variable.
	Key pulumi.StringInput `pulumi:"key"`
	// Whether the Environment Variable is sensitive or not. (May be affected by a [team-wide environment variable policy](https://vercel.com/docs/projects/environment-variables/sensitive-environment-variables#environment-variables-policy))
	Sensitive pulumi.BoolPtrInput `pulumi:"sensitive"`
	// The environments that the Environment Variable should be present on. Valid targets are either `production`, `preview`, or `development`. At least one of `target` or `customEnvironmentIds` must be set.
	Targets pulumi.StringArrayInput `pulumi:"targets"`
	// The value of the Environment Variable.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ProjectEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectEnvironment)(nil)).Elem()
}

func (i ProjectEnvironmentArgs) ToProjectEnvironmentOutput() ProjectEnvironmentOutput {
	return i.ToProjectEnvironmentOutputWithContext(context.Background())
}

func (i ProjectEnvironmentArgs) ToProjectEnvironmentOutputWithContext(ctx context.Context) ProjectEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectEnvironmentOutput)
}

// ProjectEnvironmentArrayInput is an input type that accepts ProjectEnvironmentArray and ProjectEnvironmentArrayOutput values.
// You can construct a concrete instance of `ProjectEnvironmentArrayInput` via:
//
//	ProjectEnvironmentArray{ ProjectEnvironmentArgs{...} }
type ProjectEnvironmentArrayInput interface {
	pulumi.Input

	ToProjectEnvironmentArrayOutput() ProjectEnvironmentArrayOutput
	ToProjectEnvironmentArrayOutputWithContext(context.Context) ProjectEnvironmentArrayOutput
}

type ProjectEnvironmentArray []ProjectEnvironmentInput

func (ProjectEnvironmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectEnvironment)(nil)).Elem()
}

func (i ProjectEnvironmentArray) ToProjectEnvironmentArrayOutput() ProjectEnvironmentArrayOutput {
	return i.ToProjectEnvironmentArrayOutputWithContext(context.Background())
}

func (i ProjectEnvironmentArray) ToProjectEnvironmentArrayOutputWithContext(ctx context.Context) ProjectEnvironmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectEnvironmentArrayOutput)
}

type ProjectEnvironmentOutput struct{ *pulumi.OutputState }

func (ProjectEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectEnvironment)(nil)).Elem()
}

func (o ProjectEnvironmentOutput) ToProjectEnvironmentOutput() ProjectEnvironmentOutput {
	return o
}

func (o ProjectEnvironmentOutput) ToProjectEnvironmentOutputWithContext(ctx context.Context) ProjectEnvironmentOutput {
	return o
}

// A comment explaining what the environment variable is for.
func (o ProjectEnvironmentOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectEnvironment) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// The IDs of Custom Environments that the Environment Variable should be present on. At least one of `target` or `customEnvironmentIds` must be set.
func (o ProjectEnvironmentOutput) CustomEnvironmentIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectEnvironment) []string { return v.CustomEnvironmentIds }).(pulumi.StringArrayOutput)
}

// The git branch of the Environment Variable.
func (o ProjectEnvironmentOutput) GitBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectEnvironment) *string { return v.GitBranch }).(pulumi.StringPtrOutput)
}

// The ID of the Environment Variable.
func (o ProjectEnvironmentOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectEnvironment) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the Environment Variable.
func (o ProjectEnvironmentOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectEnvironment) string { return v.Key }).(pulumi.StringOutput)
}

// Whether the Environment Variable is sensitive or not. (May be affected by a [team-wide environment variable policy](https://vercel.com/docs/projects/environment-variables/sensitive-environment-variables#environment-variables-policy))
func (o ProjectEnvironmentOutput) Sensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectEnvironment) *bool { return v.Sensitive }).(pulumi.BoolPtrOutput)
}

// The environments that the Environment Variable should be present on. Valid targets are either `production`, `preview`, or `development`. At least one of `target` or `customEnvironmentIds` must be set.
func (o ProjectEnvironmentOutput) Targets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectEnvironment) []string { return v.Targets }).(pulumi.StringArrayOutput)
}

// The value of the Environment Variable.
func (o ProjectEnvironmentOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectEnvironment) string { return v.Value }).(pulumi.StringOutput)
}

type ProjectEnvironmentArrayOutput struct{ *pulumi.OutputState }

func (ProjectEnvironmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectEnvironment)(nil)).Elem()
}

func (o ProjectEnvironmentArrayOutput) ToProjectEnvironmentArrayOutput() ProjectEnvironmentArrayOutput {
	return o
}

func (o ProjectEnvironmentArrayOutput) ToProjectEnvironmentArrayOutputWithContext(ctx context.Context) ProjectEnvironmentArrayOutput {
	return o
}

func (o ProjectEnvironmentArrayOutput) Index(i pulumi.IntInput) ProjectEnvironmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectEnvironment {
		return vs[0].([]ProjectEnvironment)[vs[1].(int)]
	}).(ProjectEnvironmentOutput)
}

type ProjectEnvironmentVariablesVariable struct {
	// A comment explaining what the environment variable is for.
	Comment *string `pulumi:"comment"`
	// The IDs of Custom Environments that the Environment Variable should be present on. At least one of `target` or `customEnvironmentIds` must be set.
	CustomEnvironmentIds []string `pulumi:"customEnvironmentIds"`
	// The git branch of the Environment Variable.
	GitBranch *string `pulumi:"gitBranch"`
	// The ID of the Environment Variable.
	Id *string `pulumi:"id"`
	// The name of the Environment Variable.
	Key string `pulumi:"key"`
	// Whether the Environment Variable is sensitive or not.
	Sensitive *bool `pulumi:"sensitive"`
	// The environments that the Environment Variable should be present on. Valid targets are either `production`, `preview`, or `development`. At least one of `target` or `customEnvironmentIds` must be set.
	Targets []string `pulumi:"targets"`
	// The value of the Environment Variable.
	Value string `pulumi:"value"`
}

// ProjectEnvironmentVariablesVariableInput is an input type that accepts ProjectEnvironmentVariablesVariableArgs and ProjectEnvironmentVariablesVariableOutput values.
// You can construct a concrete instance of `ProjectEnvironmentVariablesVariableInput` via:
//
//	ProjectEnvironmentVariablesVariableArgs{...}
type ProjectEnvironmentVariablesVariableInput interface {
	pulumi.Input

	ToProjectEnvironmentVariablesVariableOutput() ProjectEnvironmentVariablesVariableOutput
	ToProjectEnvironmentVariablesVariableOutputWithContext(context.Context) ProjectEnvironmentVariablesVariableOutput
}

type ProjectEnvironmentVariablesVariableArgs struct {
	// A comment explaining what the environment variable is for.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// The IDs of Custom Environments that the Environment Variable should be present on. At least one of `target` or `customEnvironmentIds` must be set.
	CustomEnvironmentIds pulumi.StringArrayInput `pulumi:"customEnvironmentIds"`
	// The git branch of the Environment Variable.
	GitBranch pulumi.StringPtrInput `pulumi:"gitBranch"`
	// The ID of the Environment Variable.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the Environment Variable.
	Key pulumi.StringInput `pulumi:"key"`
	// Whether the Environment Variable is sensitive or not.
	Sensitive pulumi.BoolPtrInput `pulumi:"sensitive"`
	// The environments that the Environment Variable should be present on. Valid targets are either `production`, `preview`, or `development`. At least one of `target` or `customEnvironmentIds` must be set.
	Targets pulumi.StringArrayInput `pulumi:"targets"`
	// The value of the Environment Variable.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ProjectEnvironmentVariablesVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectEnvironmentVariablesVariable)(nil)).Elem()
}

func (i ProjectEnvironmentVariablesVariableArgs) ToProjectEnvironmentVariablesVariableOutput() ProjectEnvironmentVariablesVariableOutput {
	return i.ToProjectEnvironmentVariablesVariableOutputWithContext(context.Background())
}

func (i ProjectEnvironmentVariablesVariableArgs) ToProjectEnvironmentVariablesVariableOutputWithContext(ctx context.Context) ProjectEnvironmentVariablesVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectEnvironmentVariablesVariableOutput)
}

// ProjectEnvironmentVariablesVariableArrayInput is an input type that accepts ProjectEnvironmentVariablesVariableArray and ProjectEnvironmentVariablesVariableArrayOutput values.
// You can construct a concrete instance of `ProjectEnvironmentVariablesVariableArrayInput` via:
//
//	ProjectEnvironmentVariablesVariableArray{ ProjectEnvironmentVariablesVariableArgs{...} }
type ProjectEnvironmentVariablesVariableArrayInput interface {
	pulumi.Input

	ToProjectEnvironmentVariablesVariableArrayOutput() ProjectEnvironmentVariablesVariableArrayOutput
	ToProjectEnvironmentVariablesVariableArrayOutputWithContext(context.Context) ProjectEnvironmentVariablesVariableArrayOutput
}

type ProjectEnvironmentVariablesVariableArray []ProjectEnvironmentVariablesVariableInput

func (ProjectEnvironmentVariablesVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectEnvironmentVariablesVariable)(nil)).Elem()
}

func (i ProjectEnvironmentVariablesVariableArray) ToProjectEnvironmentVariablesVariableArrayOutput() ProjectEnvironmentVariablesVariableArrayOutput {
	return i.ToProjectEnvironmentVariablesVariableArrayOutputWithContext(context.Background())
}

func (i ProjectEnvironmentVariablesVariableArray) ToProjectEnvironmentVariablesVariableArrayOutputWithContext(ctx context.Context) ProjectEnvironmentVariablesVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectEnvironmentVariablesVariableArrayOutput)
}

type ProjectEnvironmentVariablesVariableOutput struct{ *pulumi.OutputState }

func (ProjectEnvironmentVariablesVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectEnvironmentVariablesVariable)(nil)).Elem()
}

func (o ProjectEnvironmentVariablesVariableOutput) ToProjectEnvironmentVariablesVariableOutput() ProjectEnvironmentVariablesVariableOutput {
	return o
}

func (o ProjectEnvironmentVariablesVariableOutput) ToProjectEnvironmentVariablesVariableOutputWithContext(ctx context.Context) ProjectEnvironmentVariablesVariableOutput {
	return o
}

// A comment explaining what the environment variable is for.
func (o ProjectEnvironmentVariablesVariableOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectEnvironmentVariablesVariable) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// The IDs of Custom Environments that the Environment Variable should be present on. At least one of `target` or `customEnvironmentIds` must be set.
func (o ProjectEnvironmentVariablesVariableOutput) CustomEnvironmentIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectEnvironmentVariablesVariable) []string { return v.CustomEnvironmentIds }).(pulumi.StringArrayOutput)
}

// The git branch of the Environment Variable.
func (o ProjectEnvironmentVariablesVariableOutput) GitBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectEnvironmentVariablesVariable) *string { return v.GitBranch }).(pulumi.StringPtrOutput)
}

// The ID of the Environment Variable.
func (o ProjectEnvironmentVariablesVariableOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectEnvironmentVariablesVariable) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the Environment Variable.
func (o ProjectEnvironmentVariablesVariableOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectEnvironmentVariablesVariable) string { return v.Key }).(pulumi.StringOutput)
}

// Whether the Environment Variable is sensitive or not.
func (o ProjectEnvironmentVariablesVariableOutput) Sensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectEnvironmentVariablesVariable) *bool { return v.Sensitive }).(pulumi.BoolPtrOutput)
}

// The environments that the Environment Variable should be present on. Valid targets are either `production`, `preview`, or `development`. At least one of `target` or `customEnvironmentIds` must be set.
func (o ProjectEnvironmentVariablesVariableOutput) Targets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectEnvironmentVariablesVariable) []string { return v.Targets }).(pulumi.StringArrayOutput)
}

// The value of the Environment Variable.
func (o ProjectEnvironmentVariablesVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectEnvironmentVariablesVariable) string { return v.Value }).(pulumi.StringOutput)
}

type ProjectEnvironmentVariablesVariableArrayOutput struct{ *pulumi.OutputState }

func (ProjectEnvironmentVariablesVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectEnvironmentVariablesVariable)(nil)).Elem()
}

func (o ProjectEnvironmentVariablesVariableArrayOutput) ToProjectEnvironmentVariablesVariableArrayOutput() ProjectEnvironmentVariablesVariableArrayOutput {
	return o
}

func (o ProjectEnvironmentVariablesVariableArrayOutput) ToProjectEnvironmentVariablesVariableArrayOutputWithContext(ctx context.Context) ProjectEnvironmentVariablesVariableArrayOutput {
	return o
}

func (o ProjectEnvironmentVariablesVariableArrayOutput) Index(i pulumi.IntInput) ProjectEnvironmentVariablesVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectEnvironmentVariablesVariable {
		return vs[0].([]ProjectEnvironmentVariablesVariable)[vs[1].(int)]
	}).(ProjectEnvironmentVariablesVariableOutput)
}

type ProjectGitComments struct {
	// Whether Commit comments are enabled
	OnCommit bool `pulumi:"onCommit"`
	// Whether Pull Request comments are enabled
	OnPullRequest bool `pulumi:"onPullRequest"`
}

// ProjectGitCommentsInput is an input type that accepts ProjectGitCommentsArgs and ProjectGitCommentsOutput values.
// You can construct a concrete instance of `ProjectGitCommentsInput` via:
//
//	ProjectGitCommentsArgs{...}
type ProjectGitCommentsInput interface {
	pulumi.Input

	ToProjectGitCommentsOutput() ProjectGitCommentsOutput
	ToProjectGitCommentsOutputWithContext(context.Context) ProjectGitCommentsOutput
}

type ProjectGitCommentsArgs struct {
	// Whether Commit comments are enabled
	OnCommit pulumi.BoolInput `pulumi:"onCommit"`
	// Whether Pull Request comments are enabled
	OnPullRequest pulumi.BoolInput `pulumi:"onPullRequest"`
}

func (ProjectGitCommentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectGitComments)(nil)).Elem()
}

func (i ProjectGitCommentsArgs) ToProjectGitCommentsOutput() ProjectGitCommentsOutput {
	return i.ToProjectGitCommentsOutputWithContext(context.Background())
}

func (i ProjectGitCommentsArgs) ToProjectGitCommentsOutputWithContext(ctx context.Context) ProjectGitCommentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectGitCommentsOutput)
}

func (i ProjectGitCommentsArgs) ToProjectGitCommentsPtrOutput() ProjectGitCommentsPtrOutput {
	return i.ToProjectGitCommentsPtrOutputWithContext(context.Background())
}

func (i ProjectGitCommentsArgs) ToProjectGitCommentsPtrOutputWithContext(ctx context.Context) ProjectGitCommentsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectGitCommentsOutput).ToProjectGitCommentsPtrOutputWithContext(ctx)
}

// ProjectGitCommentsPtrInput is an input type that accepts ProjectGitCommentsArgs, ProjectGitCommentsPtr and ProjectGitCommentsPtrOutput values.
// You can construct a concrete instance of `ProjectGitCommentsPtrInput` via:
//
//	        ProjectGitCommentsArgs{...}
//
//	or:
//
//	        nil
type ProjectGitCommentsPtrInput interface {
	pulumi.Input

	ToProjectGitCommentsPtrOutput() ProjectGitCommentsPtrOutput
	ToProjectGitCommentsPtrOutputWithContext(context.Context) ProjectGitCommentsPtrOutput
}

type projectGitCommentsPtrType ProjectGitCommentsArgs

func ProjectGitCommentsPtr(v *ProjectGitCommentsArgs) ProjectGitCommentsPtrInput {
	return (*projectGitCommentsPtrType)(v)
}

func (*projectGitCommentsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectGitComments)(nil)).Elem()
}

func (i *projectGitCommentsPtrType) ToProjectGitCommentsPtrOutput() ProjectGitCommentsPtrOutput {
	return i.ToProjectGitCommentsPtrOutputWithContext(context.Background())
}

func (i *projectGitCommentsPtrType) ToProjectGitCommentsPtrOutputWithContext(ctx context.Context) ProjectGitCommentsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectGitCommentsPtrOutput)
}

type ProjectGitCommentsOutput struct{ *pulumi.OutputState }

func (ProjectGitCommentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectGitComments)(nil)).Elem()
}

func (o ProjectGitCommentsOutput) ToProjectGitCommentsOutput() ProjectGitCommentsOutput {
	return o
}

func (o ProjectGitCommentsOutput) ToProjectGitCommentsOutputWithContext(ctx context.Context) ProjectGitCommentsOutput {
	return o
}

func (o ProjectGitCommentsOutput) ToProjectGitCommentsPtrOutput() ProjectGitCommentsPtrOutput {
	return o.ToProjectGitCommentsPtrOutputWithContext(context.Background())
}

func (o ProjectGitCommentsOutput) ToProjectGitCommentsPtrOutputWithContext(ctx context.Context) ProjectGitCommentsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectGitComments) *ProjectGitComments {
		return &v
	}).(ProjectGitCommentsPtrOutput)
}

// Whether Commit comments are enabled
func (o ProjectGitCommentsOutput) OnCommit() pulumi.BoolOutput {
	return o.ApplyT(func(v ProjectGitComments) bool { return v.OnCommit }).(pulumi.BoolOutput)
}

// Whether Pull Request comments are enabled
func (o ProjectGitCommentsOutput) OnPullRequest() pulumi.BoolOutput {
	return o.ApplyT(func(v ProjectGitComments) bool { return v.OnPullRequest }).(pulumi.BoolOutput)
}

type ProjectGitCommentsPtrOutput struct{ *pulumi.OutputState }

func (ProjectGitCommentsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectGitComments)(nil)).Elem()
}

func (o ProjectGitCommentsPtrOutput) ToProjectGitCommentsPtrOutput() ProjectGitCommentsPtrOutput {
	return o
}

func (o ProjectGitCommentsPtrOutput) ToProjectGitCommentsPtrOutputWithContext(ctx context.Context) ProjectGitCommentsPtrOutput {
	return o
}

func (o ProjectGitCommentsPtrOutput) Elem() ProjectGitCommentsOutput {
	return o.ApplyT(func(v *ProjectGitComments) ProjectGitComments {
		if v != nil {
			return *v
		}
		var ret ProjectGitComments
		return ret
	}).(ProjectGitCommentsOutput)
}

// Whether Commit comments are enabled
func (o ProjectGitCommentsPtrOutput) OnCommit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectGitComments) *bool {
		if v == nil {
			return nil
		}
		return &v.OnCommit
	}).(pulumi.BoolPtrOutput)
}

// Whether Pull Request comments are enabled
func (o ProjectGitCommentsPtrOutput) OnPullRequest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectGitComments) *bool {
		if v == nil {
			return nil
		}
		return &v.OnPullRequest
	}).(pulumi.BoolPtrOutput)
}

type ProjectGitRepository struct {
	// Deploy hooks are unique URLs that allow you to trigger a deployment of a given branch. See https://vercel.com/docs/deployments/deploy-hooks for full information.
	DeployHooks []ProjectGitRepositoryDeployHook `pulumi:"deployHooks"`
	// By default, every commit pushed to the main branch will trigger a Production Deployment instead of the usual Preview Deployment. You can switch to a different branch here.
	ProductionBranch *string `pulumi:"productionBranch"`
	// The name of the git repository. For example: `vercel/next.js`.
	Repo string `pulumi:"repo"`
	// The git provider of the repository. Must be either `github`, `gitlab`, or `bitbucket`.
	Type string `pulumi:"type"`
}

// ProjectGitRepositoryInput is an input type that accepts ProjectGitRepositoryArgs and ProjectGitRepositoryOutput values.
// You can construct a concrete instance of `ProjectGitRepositoryInput` via:
//
//	ProjectGitRepositoryArgs{...}
type ProjectGitRepositoryInput interface {
	pulumi.Input

	ToProjectGitRepositoryOutput() ProjectGitRepositoryOutput
	ToProjectGitRepositoryOutputWithContext(context.Context) ProjectGitRepositoryOutput
}

type ProjectGitRepositoryArgs struct {
	// Deploy hooks are unique URLs that allow you to trigger a deployment of a given branch. See https://vercel.com/docs/deployments/deploy-hooks for full information.
	DeployHooks ProjectGitRepositoryDeployHookArrayInput `pulumi:"deployHooks"`
	// By default, every commit pushed to the main branch will trigger a Production Deployment instead of the usual Preview Deployment. You can switch to a different branch here.
	ProductionBranch pulumi.StringPtrInput `pulumi:"productionBranch"`
	// The name of the git repository. For example: `vercel/next.js`.
	Repo pulumi.StringInput `pulumi:"repo"`
	// The git provider of the repository. Must be either `github`, `gitlab`, or `bitbucket`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ProjectGitRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectGitRepository)(nil)).Elem()
}

func (i ProjectGitRepositoryArgs) ToProjectGitRepositoryOutput() ProjectGitRepositoryOutput {
	return i.ToProjectGitRepositoryOutputWithContext(context.Background())
}

func (i ProjectGitRepositoryArgs) ToProjectGitRepositoryOutputWithContext(ctx context.Context) ProjectGitRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectGitRepositoryOutput)
}

func (i ProjectGitRepositoryArgs) ToProjectGitRepositoryPtrOutput() ProjectGitRepositoryPtrOutput {
	return i.ToProjectGitRepositoryPtrOutputWithContext(context.Background())
}

func (i ProjectGitRepositoryArgs) ToProjectGitRepositoryPtrOutputWithContext(ctx context.Context) ProjectGitRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectGitRepositoryOutput).ToProjectGitRepositoryPtrOutputWithContext(ctx)
}

// ProjectGitRepositoryPtrInput is an input type that accepts ProjectGitRepositoryArgs, ProjectGitRepositoryPtr and ProjectGitRepositoryPtrOutput values.
// You can construct a concrete instance of `ProjectGitRepositoryPtrInput` via:
//
//	        ProjectGitRepositoryArgs{...}
//
//	or:
//
//	        nil
type ProjectGitRepositoryPtrInput interface {
	pulumi.Input

	ToProjectGitRepositoryPtrOutput() ProjectGitRepositoryPtrOutput
	ToProjectGitRepositoryPtrOutputWithContext(context.Context) ProjectGitRepositoryPtrOutput
}

type projectGitRepositoryPtrType ProjectGitRepositoryArgs

func ProjectGitRepositoryPtr(v *ProjectGitRepositoryArgs) ProjectGitRepositoryPtrInput {
	return (*projectGitRepositoryPtrType)(v)
}

func (*projectGitRepositoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectGitRepository)(nil)).Elem()
}

func (i *projectGitRepositoryPtrType) ToProjectGitRepositoryPtrOutput() ProjectGitRepositoryPtrOutput {
	return i.ToProjectGitRepositoryPtrOutputWithContext(context.Background())
}

func (i *projectGitRepositoryPtrType) ToProjectGitRepositoryPtrOutputWithContext(ctx context.Context) ProjectGitRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectGitRepositoryPtrOutput)
}

type ProjectGitRepositoryOutput struct{ *pulumi.OutputState }

func (ProjectGitRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectGitRepository)(nil)).Elem()
}

func (o ProjectGitRepositoryOutput) ToProjectGitRepositoryOutput() ProjectGitRepositoryOutput {
	return o
}

func (o ProjectGitRepositoryOutput) ToProjectGitRepositoryOutputWithContext(ctx context.Context) ProjectGitRepositoryOutput {
	return o
}

func (o ProjectGitRepositoryOutput) ToProjectGitRepositoryPtrOutput() ProjectGitRepositoryPtrOutput {
	return o.ToProjectGitRepositoryPtrOutputWithContext(context.Background())
}

func (o ProjectGitRepositoryOutput) ToProjectGitRepositoryPtrOutputWithContext(ctx context.Context) ProjectGitRepositoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectGitRepository) *ProjectGitRepository {
		return &v
	}).(ProjectGitRepositoryPtrOutput)
}

// Deploy hooks are unique URLs that allow you to trigger a deployment of a given branch. See https://vercel.com/docs/deployments/deploy-hooks for full information.
func (o ProjectGitRepositoryOutput) DeployHooks() ProjectGitRepositoryDeployHookArrayOutput {
	return o.ApplyT(func(v ProjectGitRepository) []ProjectGitRepositoryDeployHook { return v.DeployHooks }).(ProjectGitRepositoryDeployHookArrayOutput)
}

// By default, every commit pushed to the main branch will trigger a Production Deployment instead of the usual Preview Deployment. You can switch to a different branch here.
func (o ProjectGitRepositoryOutput) ProductionBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectGitRepository) *string { return v.ProductionBranch }).(pulumi.StringPtrOutput)
}

// The name of the git repository. For example: `vercel/next.js`.
func (o ProjectGitRepositoryOutput) Repo() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectGitRepository) string { return v.Repo }).(pulumi.StringOutput)
}

// The git provider of the repository. Must be either `github`, `gitlab`, or `bitbucket`.
func (o ProjectGitRepositoryOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectGitRepository) string { return v.Type }).(pulumi.StringOutput)
}

type ProjectGitRepositoryPtrOutput struct{ *pulumi.OutputState }

func (ProjectGitRepositoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectGitRepository)(nil)).Elem()
}

func (o ProjectGitRepositoryPtrOutput) ToProjectGitRepositoryPtrOutput() ProjectGitRepositoryPtrOutput {
	return o
}

func (o ProjectGitRepositoryPtrOutput) ToProjectGitRepositoryPtrOutputWithContext(ctx context.Context) ProjectGitRepositoryPtrOutput {
	return o
}

func (o ProjectGitRepositoryPtrOutput) Elem() ProjectGitRepositoryOutput {
	return o.ApplyT(func(v *ProjectGitRepository) ProjectGitRepository {
		if v != nil {
			return *v
		}
		var ret ProjectGitRepository
		return ret
	}).(ProjectGitRepositoryOutput)
}

// Deploy hooks are unique URLs that allow you to trigger a deployment of a given branch. See https://vercel.com/docs/deployments/deploy-hooks for full information.
func (o ProjectGitRepositoryPtrOutput) DeployHooks() ProjectGitRepositoryDeployHookArrayOutput {
	return o.ApplyT(func(v *ProjectGitRepository) []ProjectGitRepositoryDeployHook {
		if v == nil {
			return nil
		}
		return v.DeployHooks
	}).(ProjectGitRepositoryDeployHookArrayOutput)
}

// By default, every commit pushed to the main branch will trigger a Production Deployment instead of the usual Preview Deployment. You can switch to a different branch here.
func (o ProjectGitRepositoryPtrOutput) ProductionBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectGitRepository) *string {
		if v == nil {
			return nil
		}
		return v.ProductionBranch
	}).(pulumi.StringPtrOutput)
}

// The name of the git repository. For example: `vercel/next.js`.
func (o ProjectGitRepositoryPtrOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectGitRepository) *string {
		if v == nil {
			return nil
		}
		return &v.Repo
	}).(pulumi.StringPtrOutput)
}

// The git provider of the repository. Must be either `github`, `gitlab`, or `bitbucket`.
func (o ProjectGitRepositoryPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectGitRepository) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ProjectGitRepositoryDeployHook struct {
	// The ID of the deploy hook.
	Id *string `pulumi:"id"`
	// The name of the deploy hook.
	Name string `pulumi:"name"`
	// The branch or commit hash that should be deployed.
	Ref string `pulumi:"ref"`
	// A URL that, when a POST request is made to, will trigger a new deployment.
	Url *string `pulumi:"url"`
}

// ProjectGitRepositoryDeployHookInput is an input type that accepts ProjectGitRepositoryDeployHookArgs and ProjectGitRepositoryDeployHookOutput values.
// You can construct a concrete instance of `ProjectGitRepositoryDeployHookInput` via:
//
//	ProjectGitRepositoryDeployHookArgs{...}
type ProjectGitRepositoryDeployHookInput interface {
	pulumi.Input

	ToProjectGitRepositoryDeployHookOutput() ProjectGitRepositoryDeployHookOutput
	ToProjectGitRepositoryDeployHookOutputWithContext(context.Context) ProjectGitRepositoryDeployHookOutput
}

type ProjectGitRepositoryDeployHookArgs struct {
	// The ID of the deploy hook.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the deploy hook.
	Name pulumi.StringInput `pulumi:"name"`
	// The branch or commit hash that should be deployed.
	Ref pulumi.StringInput `pulumi:"ref"`
	// A URL that, when a POST request is made to, will trigger a new deployment.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (ProjectGitRepositoryDeployHookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectGitRepositoryDeployHook)(nil)).Elem()
}

func (i ProjectGitRepositoryDeployHookArgs) ToProjectGitRepositoryDeployHookOutput() ProjectGitRepositoryDeployHookOutput {
	return i.ToProjectGitRepositoryDeployHookOutputWithContext(context.Background())
}

func (i ProjectGitRepositoryDeployHookArgs) ToProjectGitRepositoryDeployHookOutputWithContext(ctx context.Context) ProjectGitRepositoryDeployHookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectGitRepositoryDeployHookOutput)
}

// ProjectGitRepositoryDeployHookArrayInput is an input type that accepts ProjectGitRepositoryDeployHookArray and ProjectGitRepositoryDeployHookArrayOutput values.
// You can construct a concrete instance of `ProjectGitRepositoryDeployHookArrayInput` via:
//
//	ProjectGitRepositoryDeployHookArray{ ProjectGitRepositoryDeployHookArgs{...} }
type ProjectGitRepositoryDeployHookArrayInput interface {
	pulumi.Input

	ToProjectGitRepositoryDeployHookArrayOutput() ProjectGitRepositoryDeployHookArrayOutput
	ToProjectGitRepositoryDeployHookArrayOutputWithContext(context.Context) ProjectGitRepositoryDeployHookArrayOutput
}

type ProjectGitRepositoryDeployHookArray []ProjectGitRepositoryDeployHookInput

func (ProjectGitRepositoryDeployHookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectGitRepositoryDeployHook)(nil)).Elem()
}

func (i ProjectGitRepositoryDeployHookArray) ToProjectGitRepositoryDeployHookArrayOutput() ProjectGitRepositoryDeployHookArrayOutput {
	return i.ToProjectGitRepositoryDeployHookArrayOutputWithContext(context.Background())
}

func (i ProjectGitRepositoryDeployHookArray) ToProjectGitRepositoryDeployHookArrayOutputWithContext(ctx context.Context) ProjectGitRepositoryDeployHookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectGitRepositoryDeployHookArrayOutput)
}

type ProjectGitRepositoryDeployHookOutput struct{ *pulumi.OutputState }

func (ProjectGitRepositoryDeployHookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectGitRepositoryDeployHook)(nil)).Elem()
}

func (o ProjectGitRepositoryDeployHookOutput) ToProjectGitRepositoryDeployHookOutput() ProjectGitRepositoryDeployHookOutput {
	return o
}

func (o ProjectGitRepositoryDeployHookOutput) ToProjectGitRepositoryDeployHookOutputWithContext(ctx context.Context) ProjectGitRepositoryDeployHookOutput {
	return o
}

// The ID of the deploy hook.
func (o ProjectGitRepositoryDeployHookOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectGitRepositoryDeployHook) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the deploy hook.
func (o ProjectGitRepositoryDeployHookOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectGitRepositoryDeployHook) string { return v.Name }).(pulumi.StringOutput)
}

// The branch or commit hash that should be deployed.
func (o ProjectGitRepositoryDeployHookOutput) Ref() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectGitRepositoryDeployHook) string { return v.Ref }).(pulumi.StringOutput)
}

// A URL that, when a POST request is made to, will trigger a new deployment.
func (o ProjectGitRepositoryDeployHookOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectGitRepositoryDeployHook) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ProjectGitRepositoryDeployHookArrayOutput struct{ *pulumi.OutputState }

func (ProjectGitRepositoryDeployHookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectGitRepositoryDeployHook)(nil)).Elem()
}

func (o ProjectGitRepositoryDeployHookArrayOutput) ToProjectGitRepositoryDeployHookArrayOutput() ProjectGitRepositoryDeployHookArrayOutput {
	return o
}

func (o ProjectGitRepositoryDeployHookArrayOutput) ToProjectGitRepositoryDeployHookArrayOutputWithContext(ctx context.Context) ProjectGitRepositoryDeployHookArrayOutput {
	return o
}

func (o ProjectGitRepositoryDeployHookArrayOutput) Index(i pulumi.IntInput) ProjectGitRepositoryDeployHookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectGitRepositoryDeployHook {
		return vs[0].([]ProjectGitRepositoryDeployHook)[vs[1].(int)]
	}).(ProjectGitRepositoryDeployHookOutput)
}

type ProjectMembersMember struct {
	// The email of the user to add to the project. Exactly one of `userId`, `email`, or `username` must be specified.
	Email *string `pulumi:"email"`
	// The role that the user should have in the project. One of 'MEMBER', 'PROJECT*DEVELOPER', or 'PROJECT*VIEWER'.
	Role string `pulumi:"role"`
	// The ID of the user to add to the project. Exactly one of `userId`, `email`, or `username` must be specified.
	UserId *string `pulumi:"userId"`
	// The username of the user to add to the project. Exactly one of `userId`, `email`, or `username` must be specified.
	Username *string `pulumi:"username"`
}

// ProjectMembersMemberInput is an input type that accepts ProjectMembersMemberArgs and ProjectMembersMemberOutput values.
// You can construct a concrete instance of `ProjectMembersMemberInput` via:
//
//	ProjectMembersMemberArgs{...}
type ProjectMembersMemberInput interface {
	pulumi.Input

	ToProjectMembersMemberOutput() ProjectMembersMemberOutput
	ToProjectMembersMemberOutputWithContext(context.Context) ProjectMembersMemberOutput
}

type ProjectMembersMemberArgs struct {
	// The email of the user to add to the project. Exactly one of `userId`, `email`, or `username` must be specified.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// The role that the user should have in the project. One of 'MEMBER', 'PROJECT*DEVELOPER', or 'PROJECT*VIEWER'.
	Role pulumi.StringInput `pulumi:"role"`
	// The ID of the user to add to the project. Exactly one of `userId`, `email`, or `username` must be specified.
	UserId pulumi.StringPtrInput `pulumi:"userId"`
	// The username of the user to add to the project. Exactly one of `userId`, `email`, or `username` must be specified.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ProjectMembersMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectMembersMember)(nil)).Elem()
}

func (i ProjectMembersMemberArgs) ToProjectMembersMemberOutput() ProjectMembersMemberOutput {
	return i.ToProjectMembersMemberOutputWithContext(context.Background())
}

func (i ProjectMembersMemberArgs) ToProjectMembersMemberOutputWithContext(ctx context.Context) ProjectMembersMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectMembersMemberOutput)
}

// ProjectMembersMemberArrayInput is an input type that accepts ProjectMembersMemberArray and ProjectMembersMemberArrayOutput values.
// You can construct a concrete instance of `ProjectMembersMemberArrayInput` via:
//
//	ProjectMembersMemberArray{ ProjectMembersMemberArgs{...} }
type ProjectMembersMemberArrayInput interface {
	pulumi.Input

	ToProjectMembersMemberArrayOutput() ProjectMembersMemberArrayOutput
	ToProjectMembersMemberArrayOutputWithContext(context.Context) ProjectMembersMemberArrayOutput
}

type ProjectMembersMemberArray []ProjectMembersMemberInput

func (ProjectMembersMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectMembersMember)(nil)).Elem()
}

func (i ProjectMembersMemberArray) ToProjectMembersMemberArrayOutput() ProjectMembersMemberArrayOutput {
	return i.ToProjectMembersMemberArrayOutputWithContext(context.Background())
}

func (i ProjectMembersMemberArray) ToProjectMembersMemberArrayOutputWithContext(ctx context.Context) ProjectMembersMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectMembersMemberArrayOutput)
}

type ProjectMembersMemberOutput struct{ *pulumi.OutputState }

func (ProjectMembersMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectMembersMember)(nil)).Elem()
}

func (o ProjectMembersMemberOutput) ToProjectMembersMemberOutput() ProjectMembersMemberOutput {
	return o
}

func (o ProjectMembersMemberOutput) ToProjectMembersMemberOutputWithContext(ctx context.Context) ProjectMembersMemberOutput {
	return o
}

// The email of the user to add to the project. Exactly one of `userId`, `email`, or `username` must be specified.
func (o ProjectMembersMemberOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectMembersMember) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// The role that the user should have in the project. One of 'MEMBER', 'PROJECT*DEVELOPER', or 'PROJECT*VIEWER'.
func (o ProjectMembersMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectMembersMember) string { return v.Role }).(pulumi.StringOutput)
}

// The ID of the user to add to the project. Exactly one of `userId`, `email`, or `username` must be specified.
func (o ProjectMembersMemberOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectMembersMember) *string { return v.UserId }).(pulumi.StringPtrOutput)
}

// The username of the user to add to the project. Exactly one of `userId`, `email`, or `username` must be specified.
func (o ProjectMembersMemberOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectMembersMember) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ProjectMembersMemberArrayOutput struct{ *pulumi.OutputState }

func (ProjectMembersMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectMembersMember)(nil)).Elem()
}

func (o ProjectMembersMemberArrayOutput) ToProjectMembersMemberArrayOutput() ProjectMembersMemberArrayOutput {
	return o
}

func (o ProjectMembersMemberArrayOutput) ToProjectMembersMemberArrayOutputWithContext(ctx context.Context) ProjectMembersMemberArrayOutput {
	return o
}

func (o ProjectMembersMemberArrayOutput) Index(i pulumi.IntInput) ProjectMembersMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectMembersMember {
		return vs[0].([]ProjectMembersMember)[vs[1].(int)]
	}).(ProjectMembersMemberOutput)
}

type ProjectOidcTokenConfig struct {
	// When true, Vercel issued OpenID Connect (OIDC) tokens will be available on the compute environments. See https://vercel.com/docs/security/secure-backend-access/oidc for more information.
	Enabled bool `pulumi:"enabled"`
	// Configures the URL of the `iss` claim. `team` = `https://oidc.vercel.com/[teamSlug]` `global` = `https://oidc.vercel.com`
	IssuerMode *string `pulumi:"issuerMode"`
}

// ProjectOidcTokenConfigInput is an input type that accepts ProjectOidcTokenConfigArgs and ProjectOidcTokenConfigOutput values.
// You can construct a concrete instance of `ProjectOidcTokenConfigInput` via:
//
//	ProjectOidcTokenConfigArgs{...}
type ProjectOidcTokenConfigInput interface {
	pulumi.Input

	ToProjectOidcTokenConfigOutput() ProjectOidcTokenConfigOutput
	ToProjectOidcTokenConfigOutputWithContext(context.Context) ProjectOidcTokenConfigOutput
}

type ProjectOidcTokenConfigArgs struct {
	// When true, Vercel issued OpenID Connect (OIDC) tokens will be available on the compute environments. See https://vercel.com/docs/security/secure-backend-access/oidc for more information.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Configures the URL of the `iss` claim. `team` = `https://oidc.vercel.com/[teamSlug]` `global` = `https://oidc.vercel.com`
	IssuerMode pulumi.StringPtrInput `pulumi:"issuerMode"`
}

func (ProjectOidcTokenConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectOidcTokenConfig)(nil)).Elem()
}

func (i ProjectOidcTokenConfigArgs) ToProjectOidcTokenConfigOutput() ProjectOidcTokenConfigOutput {
	return i.ToProjectOidcTokenConfigOutputWithContext(context.Background())
}

func (i ProjectOidcTokenConfigArgs) ToProjectOidcTokenConfigOutputWithContext(ctx context.Context) ProjectOidcTokenConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectOidcTokenConfigOutput)
}

func (i ProjectOidcTokenConfigArgs) ToProjectOidcTokenConfigPtrOutput() ProjectOidcTokenConfigPtrOutput {
	return i.ToProjectOidcTokenConfigPtrOutputWithContext(context.Background())
}

func (i ProjectOidcTokenConfigArgs) ToProjectOidcTokenConfigPtrOutputWithContext(ctx context.Context) ProjectOidcTokenConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectOidcTokenConfigOutput).ToProjectOidcTokenConfigPtrOutputWithContext(ctx)
}

// ProjectOidcTokenConfigPtrInput is an input type that accepts ProjectOidcTokenConfigArgs, ProjectOidcTokenConfigPtr and ProjectOidcTokenConfigPtrOutput values.
// You can construct a concrete instance of `ProjectOidcTokenConfigPtrInput` via:
//
//	        ProjectOidcTokenConfigArgs{...}
//
//	or:
//
//	        nil
type ProjectOidcTokenConfigPtrInput interface {
	pulumi.Input

	ToProjectOidcTokenConfigPtrOutput() ProjectOidcTokenConfigPtrOutput
	ToProjectOidcTokenConfigPtrOutputWithContext(context.Context) ProjectOidcTokenConfigPtrOutput
}

type projectOidcTokenConfigPtrType ProjectOidcTokenConfigArgs

func ProjectOidcTokenConfigPtr(v *ProjectOidcTokenConfigArgs) ProjectOidcTokenConfigPtrInput {
	return (*projectOidcTokenConfigPtrType)(v)
}

func (*projectOidcTokenConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectOidcTokenConfig)(nil)).Elem()
}

func (i *projectOidcTokenConfigPtrType) ToProjectOidcTokenConfigPtrOutput() ProjectOidcTokenConfigPtrOutput {
	return i.ToProjectOidcTokenConfigPtrOutputWithContext(context.Background())
}

func (i *projectOidcTokenConfigPtrType) ToProjectOidcTokenConfigPtrOutputWithContext(ctx context.Context) ProjectOidcTokenConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectOidcTokenConfigPtrOutput)
}

type ProjectOidcTokenConfigOutput struct{ *pulumi.OutputState }

func (ProjectOidcTokenConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectOidcTokenConfig)(nil)).Elem()
}

func (o ProjectOidcTokenConfigOutput) ToProjectOidcTokenConfigOutput() ProjectOidcTokenConfigOutput {
	return o
}

func (o ProjectOidcTokenConfigOutput) ToProjectOidcTokenConfigOutputWithContext(ctx context.Context) ProjectOidcTokenConfigOutput {
	return o
}

func (o ProjectOidcTokenConfigOutput) ToProjectOidcTokenConfigPtrOutput() ProjectOidcTokenConfigPtrOutput {
	return o.ToProjectOidcTokenConfigPtrOutputWithContext(context.Background())
}

func (o ProjectOidcTokenConfigOutput) ToProjectOidcTokenConfigPtrOutputWithContext(ctx context.Context) ProjectOidcTokenConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectOidcTokenConfig) *ProjectOidcTokenConfig {
		return &v
	}).(ProjectOidcTokenConfigPtrOutput)
}

// When true, Vercel issued OpenID Connect (OIDC) tokens will be available on the compute environments. See https://vercel.com/docs/security/secure-backend-access/oidc for more information.
func (o ProjectOidcTokenConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ProjectOidcTokenConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Configures the URL of the `iss` claim. `team` = `https://oidc.vercel.com/[teamSlug]` `global` = `https://oidc.vercel.com`
func (o ProjectOidcTokenConfigOutput) IssuerMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectOidcTokenConfig) *string { return v.IssuerMode }).(pulumi.StringPtrOutput)
}

type ProjectOidcTokenConfigPtrOutput struct{ *pulumi.OutputState }

func (ProjectOidcTokenConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectOidcTokenConfig)(nil)).Elem()
}

func (o ProjectOidcTokenConfigPtrOutput) ToProjectOidcTokenConfigPtrOutput() ProjectOidcTokenConfigPtrOutput {
	return o
}

func (o ProjectOidcTokenConfigPtrOutput) ToProjectOidcTokenConfigPtrOutputWithContext(ctx context.Context) ProjectOidcTokenConfigPtrOutput {
	return o
}

func (o ProjectOidcTokenConfigPtrOutput) Elem() ProjectOidcTokenConfigOutput {
	return o.ApplyT(func(v *ProjectOidcTokenConfig) ProjectOidcTokenConfig {
		if v != nil {
			return *v
		}
		var ret ProjectOidcTokenConfig
		return ret
	}).(ProjectOidcTokenConfigOutput)
}

// When true, Vercel issued OpenID Connect (OIDC) tokens will be available on the compute environments. See https://vercel.com/docs/security/secure-backend-access/oidc for more information.
func (o ProjectOidcTokenConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectOidcTokenConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Configures the URL of the `iss` claim. `team` = `https://oidc.vercel.com/[teamSlug]` `global` = `https://oidc.vercel.com`
func (o ProjectOidcTokenConfigPtrOutput) IssuerMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectOidcTokenConfig) *string {
		if v == nil {
			return nil
		}
		return v.IssuerMode
	}).(pulumi.StringPtrOutput)
}

type ProjectOptionsAllowlist struct {
	// The allowed paths for the OPTIONS Allowlist. Incoming requests will bypass Deployment Protection if they have the method `OPTIONS` and **start with** one of the path values.
	Paths []ProjectOptionsAllowlistPath `pulumi:"paths"`
}

// ProjectOptionsAllowlistInput is an input type that accepts ProjectOptionsAllowlistArgs and ProjectOptionsAllowlistOutput values.
// You can construct a concrete instance of `ProjectOptionsAllowlistInput` via:
//
//	ProjectOptionsAllowlistArgs{...}
type ProjectOptionsAllowlistInput interface {
	pulumi.Input

	ToProjectOptionsAllowlistOutput() ProjectOptionsAllowlistOutput
	ToProjectOptionsAllowlistOutputWithContext(context.Context) ProjectOptionsAllowlistOutput
}

type ProjectOptionsAllowlistArgs struct {
	// The allowed paths for the OPTIONS Allowlist. Incoming requests will bypass Deployment Protection if they have the method `OPTIONS` and **start with** one of the path values.
	Paths ProjectOptionsAllowlistPathArrayInput `pulumi:"paths"`
}

func (ProjectOptionsAllowlistArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectOptionsAllowlist)(nil)).Elem()
}

func (i ProjectOptionsAllowlistArgs) ToProjectOptionsAllowlistOutput() ProjectOptionsAllowlistOutput {
	return i.ToProjectOptionsAllowlistOutputWithContext(context.Background())
}

func (i ProjectOptionsAllowlistArgs) ToProjectOptionsAllowlistOutputWithContext(ctx context.Context) ProjectOptionsAllowlistOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectOptionsAllowlistOutput)
}

func (i ProjectOptionsAllowlistArgs) ToProjectOptionsAllowlistPtrOutput() ProjectOptionsAllowlistPtrOutput {
	return i.ToProjectOptionsAllowlistPtrOutputWithContext(context.Background())
}

func (i ProjectOptionsAllowlistArgs) ToProjectOptionsAllowlistPtrOutputWithContext(ctx context.Context) ProjectOptionsAllowlistPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectOptionsAllowlistOutput).ToProjectOptionsAllowlistPtrOutputWithContext(ctx)
}

// ProjectOptionsAllowlistPtrInput is an input type that accepts ProjectOptionsAllowlistArgs, ProjectOptionsAllowlistPtr and ProjectOptionsAllowlistPtrOutput values.
// You can construct a concrete instance of `ProjectOptionsAllowlistPtrInput` via:
//
//	        ProjectOptionsAllowlistArgs{...}
//
//	or:
//
//	        nil
type ProjectOptionsAllowlistPtrInput interface {
	pulumi.Input

	ToProjectOptionsAllowlistPtrOutput() ProjectOptionsAllowlistPtrOutput
	ToProjectOptionsAllowlistPtrOutputWithContext(context.Context) ProjectOptionsAllowlistPtrOutput
}

type projectOptionsAllowlistPtrType ProjectOptionsAllowlistArgs

func ProjectOptionsAllowlistPtr(v *ProjectOptionsAllowlistArgs) ProjectOptionsAllowlistPtrInput {
	return (*projectOptionsAllowlistPtrType)(v)
}

func (*projectOptionsAllowlistPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectOptionsAllowlist)(nil)).Elem()
}

func (i *projectOptionsAllowlistPtrType) ToProjectOptionsAllowlistPtrOutput() ProjectOptionsAllowlistPtrOutput {
	return i.ToProjectOptionsAllowlistPtrOutputWithContext(context.Background())
}

func (i *projectOptionsAllowlistPtrType) ToProjectOptionsAllowlistPtrOutputWithContext(ctx context.Context) ProjectOptionsAllowlistPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectOptionsAllowlistPtrOutput)
}

type ProjectOptionsAllowlistOutput struct{ *pulumi.OutputState }

func (ProjectOptionsAllowlistOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectOptionsAllowlist)(nil)).Elem()
}

func (o ProjectOptionsAllowlistOutput) ToProjectOptionsAllowlistOutput() ProjectOptionsAllowlistOutput {
	return o
}

func (o ProjectOptionsAllowlistOutput) ToProjectOptionsAllowlistOutputWithContext(ctx context.Context) ProjectOptionsAllowlistOutput {
	return o
}

func (o ProjectOptionsAllowlistOutput) ToProjectOptionsAllowlistPtrOutput() ProjectOptionsAllowlistPtrOutput {
	return o.ToProjectOptionsAllowlistPtrOutputWithContext(context.Background())
}

func (o ProjectOptionsAllowlistOutput) ToProjectOptionsAllowlistPtrOutputWithContext(ctx context.Context) ProjectOptionsAllowlistPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectOptionsAllowlist) *ProjectOptionsAllowlist {
		return &v
	}).(ProjectOptionsAllowlistPtrOutput)
}

// The allowed paths for the OPTIONS Allowlist. Incoming requests will bypass Deployment Protection if they have the method `OPTIONS` and **start with** one of the path values.
func (o ProjectOptionsAllowlistOutput) Paths() ProjectOptionsAllowlistPathArrayOutput {
	return o.ApplyT(func(v ProjectOptionsAllowlist) []ProjectOptionsAllowlistPath { return v.Paths }).(ProjectOptionsAllowlistPathArrayOutput)
}

type ProjectOptionsAllowlistPtrOutput struct{ *pulumi.OutputState }

func (ProjectOptionsAllowlistPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectOptionsAllowlist)(nil)).Elem()
}

func (o ProjectOptionsAllowlistPtrOutput) ToProjectOptionsAllowlistPtrOutput() ProjectOptionsAllowlistPtrOutput {
	return o
}

func (o ProjectOptionsAllowlistPtrOutput) ToProjectOptionsAllowlistPtrOutputWithContext(ctx context.Context) ProjectOptionsAllowlistPtrOutput {
	return o
}

func (o ProjectOptionsAllowlistPtrOutput) Elem() ProjectOptionsAllowlistOutput {
	return o.ApplyT(func(v *ProjectOptionsAllowlist) ProjectOptionsAllowlist {
		if v != nil {
			return *v
		}
		var ret ProjectOptionsAllowlist
		return ret
	}).(ProjectOptionsAllowlistOutput)
}

// The allowed paths for the OPTIONS Allowlist. Incoming requests will bypass Deployment Protection if they have the method `OPTIONS` and **start with** one of the path values.
func (o ProjectOptionsAllowlistPtrOutput) Paths() ProjectOptionsAllowlistPathArrayOutput {
	return o.ApplyT(func(v *ProjectOptionsAllowlist) []ProjectOptionsAllowlistPath {
		if v == nil {
			return nil
		}
		return v.Paths
	}).(ProjectOptionsAllowlistPathArrayOutput)
}

type ProjectOptionsAllowlistPath struct {
	// The path prefix to compare with the incoming request path.
	Value string `pulumi:"value"`
}

// ProjectOptionsAllowlistPathInput is an input type that accepts ProjectOptionsAllowlistPathArgs and ProjectOptionsAllowlistPathOutput values.
// You can construct a concrete instance of `ProjectOptionsAllowlistPathInput` via:
//
//	ProjectOptionsAllowlistPathArgs{...}
type ProjectOptionsAllowlistPathInput interface {
	pulumi.Input

	ToProjectOptionsAllowlistPathOutput() ProjectOptionsAllowlistPathOutput
	ToProjectOptionsAllowlistPathOutputWithContext(context.Context) ProjectOptionsAllowlistPathOutput
}

type ProjectOptionsAllowlistPathArgs struct {
	// The path prefix to compare with the incoming request path.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ProjectOptionsAllowlistPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectOptionsAllowlistPath)(nil)).Elem()
}

func (i ProjectOptionsAllowlistPathArgs) ToProjectOptionsAllowlistPathOutput() ProjectOptionsAllowlistPathOutput {
	return i.ToProjectOptionsAllowlistPathOutputWithContext(context.Background())
}

func (i ProjectOptionsAllowlistPathArgs) ToProjectOptionsAllowlistPathOutputWithContext(ctx context.Context) ProjectOptionsAllowlistPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectOptionsAllowlistPathOutput)
}

// ProjectOptionsAllowlistPathArrayInput is an input type that accepts ProjectOptionsAllowlistPathArray and ProjectOptionsAllowlistPathArrayOutput values.
// You can construct a concrete instance of `ProjectOptionsAllowlistPathArrayInput` via:
//
//	ProjectOptionsAllowlistPathArray{ ProjectOptionsAllowlistPathArgs{...} }
type ProjectOptionsAllowlistPathArrayInput interface {
	pulumi.Input

	ToProjectOptionsAllowlistPathArrayOutput() ProjectOptionsAllowlistPathArrayOutput
	ToProjectOptionsAllowlistPathArrayOutputWithContext(context.Context) ProjectOptionsAllowlistPathArrayOutput
}

type ProjectOptionsAllowlistPathArray []ProjectOptionsAllowlistPathInput

func (ProjectOptionsAllowlistPathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectOptionsAllowlistPath)(nil)).Elem()
}

func (i ProjectOptionsAllowlistPathArray) ToProjectOptionsAllowlistPathArrayOutput() ProjectOptionsAllowlistPathArrayOutput {
	return i.ToProjectOptionsAllowlistPathArrayOutputWithContext(context.Background())
}

func (i ProjectOptionsAllowlistPathArray) ToProjectOptionsAllowlistPathArrayOutputWithContext(ctx context.Context) ProjectOptionsAllowlistPathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectOptionsAllowlistPathArrayOutput)
}

type ProjectOptionsAllowlistPathOutput struct{ *pulumi.OutputState }

func (ProjectOptionsAllowlistPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectOptionsAllowlistPath)(nil)).Elem()
}

func (o ProjectOptionsAllowlistPathOutput) ToProjectOptionsAllowlistPathOutput() ProjectOptionsAllowlistPathOutput {
	return o
}

func (o ProjectOptionsAllowlistPathOutput) ToProjectOptionsAllowlistPathOutputWithContext(ctx context.Context) ProjectOptionsAllowlistPathOutput {
	return o
}

// The path prefix to compare with the incoming request path.
func (o ProjectOptionsAllowlistPathOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectOptionsAllowlistPath) string { return v.Value }).(pulumi.StringOutput)
}

type ProjectOptionsAllowlistPathArrayOutput struct{ *pulumi.OutputState }

func (ProjectOptionsAllowlistPathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectOptionsAllowlistPath)(nil)).Elem()
}

func (o ProjectOptionsAllowlistPathArrayOutput) ToProjectOptionsAllowlistPathArrayOutput() ProjectOptionsAllowlistPathArrayOutput {
	return o
}

func (o ProjectOptionsAllowlistPathArrayOutput) ToProjectOptionsAllowlistPathArrayOutputWithContext(ctx context.Context) ProjectOptionsAllowlistPathArrayOutput {
	return o
}

func (o ProjectOptionsAllowlistPathArrayOutput) Index(i pulumi.IntInput) ProjectOptionsAllowlistPathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectOptionsAllowlistPath {
		return vs[0].([]ProjectOptionsAllowlistPath)[vs[1].(int)]
	}).(ProjectOptionsAllowlistPathOutput)
}

type ProjectPasswordProtection struct {
	// The deployment environment to protect. Must be one of `standardProtection`, `allDeployments`, or `onlyPreviewDeployments`.
	DeploymentType string `pulumi:"deploymentType"`
	// The password that visitors must enter to gain access to your Preview Deployments. Drift detection is not possible for this field.
	Password string `pulumi:"password"`
}

// ProjectPasswordProtectionInput is an input type that accepts ProjectPasswordProtectionArgs and ProjectPasswordProtectionOutput values.
// You can construct a concrete instance of `ProjectPasswordProtectionInput` via:
//
//	ProjectPasswordProtectionArgs{...}
type ProjectPasswordProtectionInput interface {
	pulumi.Input

	ToProjectPasswordProtectionOutput() ProjectPasswordProtectionOutput
	ToProjectPasswordProtectionOutputWithContext(context.Context) ProjectPasswordProtectionOutput
}

type ProjectPasswordProtectionArgs struct {
	// The deployment environment to protect. Must be one of `standardProtection`, `allDeployments`, or `onlyPreviewDeployments`.
	DeploymentType pulumi.StringInput `pulumi:"deploymentType"`
	// The password that visitors must enter to gain access to your Preview Deployments. Drift detection is not possible for this field.
	Password pulumi.StringInput `pulumi:"password"`
}

func (ProjectPasswordProtectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectPasswordProtection)(nil)).Elem()
}

func (i ProjectPasswordProtectionArgs) ToProjectPasswordProtectionOutput() ProjectPasswordProtectionOutput {
	return i.ToProjectPasswordProtectionOutputWithContext(context.Background())
}

func (i ProjectPasswordProtectionArgs) ToProjectPasswordProtectionOutputWithContext(ctx context.Context) ProjectPasswordProtectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectPasswordProtectionOutput)
}

func (i ProjectPasswordProtectionArgs) ToProjectPasswordProtectionPtrOutput() ProjectPasswordProtectionPtrOutput {
	return i.ToProjectPasswordProtectionPtrOutputWithContext(context.Background())
}

func (i ProjectPasswordProtectionArgs) ToProjectPasswordProtectionPtrOutputWithContext(ctx context.Context) ProjectPasswordProtectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectPasswordProtectionOutput).ToProjectPasswordProtectionPtrOutputWithContext(ctx)
}

// ProjectPasswordProtectionPtrInput is an input type that accepts ProjectPasswordProtectionArgs, ProjectPasswordProtectionPtr and ProjectPasswordProtectionPtrOutput values.
// You can construct a concrete instance of `ProjectPasswordProtectionPtrInput` via:
//
//	        ProjectPasswordProtectionArgs{...}
//
//	or:
//
//	        nil
type ProjectPasswordProtectionPtrInput interface {
	pulumi.Input

	ToProjectPasswordProtectionPtrOutput() ProjectPasswordProtectionPtrOutput
	ToProjectPasswordProtectionPtrOutputWithContext(context.Context) ProjectPasswordProtectionPtrOutput
}

type projectPasswordProtectionPtrType ProjectPasswordProtectionArgs

func ProjectPasswordProtectionPtr(v *ProjectPasswordProtectionArgs) ProjectPasswordProtectionPtrInput {
	return (*projectPasswordProtectionPtrType)(v)
}

func (*projectPasswordProtectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectPasswordProtection)(nil)).Elem()
}

func (i *projectPasswordProtectionPtrType) ToProjectPasswordProtectionPtrOutput() ProjectPasswordProtectionPtrOutput {
	return i.ToProjectPasswordProtectionPtrOutputWithContext(context.Background())
}

func (i *projectPasswordProtectionPtrType) ToProjectPasswordProtectionPtrOutputWithContext(ctx context.Context) ProjectPasswordProtectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectPasswordProtectionPtrOutput)
}

type ProjectPasswordProtectionOutput struct{ *pulumi.OutputState }

func (ProjectPasswordProtectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectPasswordProtection)(nil)).Elem()
}

func (o ProjectPasswordProtectionOutput) ToProjectPasswordProtectionOutput() ProjectPasswordProtectionOutput {
	return o
}

func (o ProjectPasswordProtectionOutput) ToProjectPasswordProtectionOutputWithContext(ctx context.Context) ProjectPasswordProtectionOutput {
	return o
}

func (o ProjectPasswordProtectionOutput) ToProjectPasswordProtectionPtrOutput() ProjectPasswordProtectionPtrOutput {
	return o.ToProjectPasswordProtectionPtrOutputWithContext(context.Background())
}

func (o ProjectPasswordProtectionOutput) ToProjectPasswordProtectionPtrOutputWithContext(ctx context.Context) ProjectPasswordProtectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectPasswordProtection) *ProjectPasswordProtection {
		return &v
	}).(ProjectPasswordProtectionPtrOutput)
}

// The deployment environment to protect. Must be one of `standardProtection`, `allDeployments`, or `onlyPreviewDeployments`.
func (o ProjectPasswordProtectionOutput) DeploymentType() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectPasswordProtection) string { return v.DeploymentType }).(pulumi.StringOutput)
}

// The password that visitors must enter to gain access to your Preview Deployments. Drift detection is not possible for this field.
func (o ProjectPasswordProtectionOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectPasswordProtection) string { return v.Password }).(pulumi.StringOutput)
}

type ProjectPasswordProtectionPtrOutput struct{ *pulumi.OutputState }

func (ProjectPasswordProtectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectPasswordProtection)(nil)).Elem()
}

func (o ProjectPasswordProtectionPtrOutput) ToProjectPasswordProtectionPtrOutput() ProjectPasswordProtectionPtrOutput {
	return o
}

func (o ProjectPasswordProtectionPtrOutput) ToProjectPasswordProtectionPtrOutputWithContext(ctx context.Context) ProjectPasswordProtectionPtrOutput {
	return o
}

func (o ProjectPasswordProtectionPtrOutput) Elem() ProjectPasswordProtectionOutput {
	return o.ApplyT(func(v *ProjectPasswordProtection) ProjectPasswordProtection {
		if v != nil {
			return *v
		}
		var ret ProjectPasswordProtection
		return ret
	}).(ProjectPasswordProtectionOutput)
}

// The deployment environment to protect. Must be one of `standardProtection`, `allDeployments`, or `onlyPreviewDeployments`.
func (o ProjectPasswordProtectionPtrOutput) DeploymentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectPasswordProtection) *string {
		if v == nil {
			return nil
		}
		return &v.DeploymentType
	}).(pulumi.StringPtrOutput)
}

// The password that visitors must enter to gain access to your Preview Deployments. Drift detection is not possible for this field.
func (o ProjectPasswordProtectionPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectPasswordProtection) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

type ProjectResourceConfig struct {
	// Enable fluid compute for your Vercel Functions to automatically manage concurrency and optimize performance. Vercel will handle the defaults to ensure the best experience for your workload.
	Fluid *bool `pulumi:"fluid"`
	// The amount of CPU available to your Serverless Functions. Should be one of 'standard_legacy' (0.6vCPU), 'standard' (1vCPU) or 'performance' (1.7vCPUs).
	FunctionDefaultCpuType *string `pulumi:"functionDefaultCpuType"`
	// The default timeout for Serverless Functions.
	FunctionDefaultTimeout *int `pulumi:"functionDefaultTimeout"`
}

// ProjectResourceConfigInput is an input type that accepts ProjectResourceConfigArgs and ProjectResourceConfigOutput values.
// You can construct a concrete instance of `ProjectResourceConfigInput` via:
//
//	ProjectResourceConfigArgs{...}
type ProjectResourceConfigInput interface {
	pulumi.Input

	ToProjectResourceConfigOutput() ProjectResourceConfigOutput
	ToProjectResourceConfigOutputWithContext(context.Context) ProjectResourceConfigOutput
}

type ProjectResourceConfigArgs struct {
	// Enable fluid compute for your Vercel Functions to automatically manage concurrency and optimize performance. Vercel will handle the defaults to ensure the best experience for your workload.
	Fluid pulumi.BoolPtrInput `pulumi:"fluid"`
	// The amount of CPU available to your Serverless Functions. Should be one of 'standard_legacy' (0.6vCPU), 'standard' (1vCPU) or 'performance' (1.7vCPUs).
	FunctionDefaultCpuType pulumi.StringPtrInput `pulumi:"functionDefaultCpuType"`
	// The default timeout for Serverless Functions.
	FunctionDefaultTimeout pulumi.IntPtrInput `pulumi:"functionDefaultTimeout"`
}

func (ProjectResourceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectResourceConfig)(nil)).Elem()
}

func (i ProjectResourceConfigArgs) ToProjectResourceConfigOutput() ProjectResourceConfigOutput {
	return i.ToProjectResourceConfigOutputWithContext(context.Background())
}

func (i ProjectResourceConfigArgs) ToProjectResourceConfigOutputWithContext(ctx context.Context) ProjectResourceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectResourceConfigOutput)
}

func (i ProjectResourceConfigArgs) ToProjectResourceConfigPtrOutput() ProjectResourceConfigPtrOutput {
	return i.ToProjectResourceConfigPtrOutputWithContext(context.Background())
}

func (i ProjectResourceConfigArgs) ToProjectResourceConfigPtrOutputWithContext(ctx context.Context) ProjectResourceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectResourceConfigOutput).ToProjectResourceConfigPtrOutputWithContext(ctx)
}

// ProjectResourceConfigPtrInput is an input type that accepts ProjectResourceConfigArgs, ProjectResourceConfigPtr and ProjectResourceConfigPtrOutput values.
// You can construct a concrete instance of `ProjectResourceConfigPtrInput` via:
//
//	        ProjectResourceConfigArgs{...}
//
//	or:
//
//	        nil
type ProjectResourceConfigPtrInput interface {
	pulumi.Input

	ToProjectResourceConfigPtrOutput() ProjectResourceConfigPtrOutput
	ToProjectResourceConfigPtrOutputWithContext(context.Context) ProjectResourceConfigPtrOutput
}

type projectResourceConfigPtrType ProjectResourceConfigArgs

func ProjectResourceConfigPtr(v *ProjectResourceConfigArgs) ProjectResourceConfigPtrInput {
	return (*projectResourceConfigPtrType)(v)
}

func (*projectResourceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectResourceConfig)(nil)).Elem()
}

func (i *projectResourceConfigPtrType) ToProjectResourceConfigPtrOutput() ProjectResourceConfigPtrOutput {
	return i.ToProjectResourceConfigPtrOutputWithContext(context.Background())
}

func (i *projectResourceConfigPtrType) ToProjectResourceConfigPtrOutputWithContext(ctx context.Context) ProjectResourceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectResourceConfigPtrOutput)
}

type ProjectResourceConfigOutput struct{ *pulumi.OutputState }

func (ProjectResourceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectResourceConfig)(nil)).Elem()
}

func (o ProjectResourceConfigOutput) ToProjectResourceConfigOutput() ProjectResourceConfigOutput {
	return o
}

func (o ProjectResourceConfigOutput) ToProjectResourceConfigOutputWithContext(ctx context.Context) ProjectResourceConfigOutput {
	return o
}

func (o ProjectResourceConfigOutput) ToProjectResourceConfigPtrOutput() ProjectResourceConfigPtrOutput {
	return o.ToProjectResourceConfigPtrOutputWithContext(context.Background())
}

func (o ProjectResourceConfigOutput) ToProjectResourceConfigPtrOutputWithContext(ctx context.Context) ProjectResourceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectResourceConfig) *ProjectResourceConfig {
		return &v
	}).(ProjectResourceConfigPtrOutput)
}

// Enable fluid compute for your Vercel Functions to automatically manage concurrency and optimize performance. Vercel will handle the defaults to ensure the best experience for your workload.
func (o ProjectResourceConfigOutput) Fluid() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectResourceConfig) *bool { return v.Fluid }).(pulumi.BoolPtrOutput)
}

// The amount of CPU available to your Serverless Functions. Should be one of 'standard_legacy' (0.6vCPU), 'standard' (1vCPU) or 'performance' (1.7vCPUs).
func (o ProjectResourceConfigOutput) FunctionDefaultCpuType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectResourceConfig) *string { return v.FunctionDefaultCpuType }).(pulumi.StringPtrOutput)
}

// The default timeout for Serverless Functions.
func (o ProjectResourceConfigOutput) FunctionDefaultTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProjectResourceConfig) *int { return v.FunctionDefaultTimeout }).(pulumi.IntPtrOutput)
}

type ProjectResourceConfigPtrOutput struct{ *pulumi.OutputState }

func (ProjectResourceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectResourceConfig)(nil)).Elem()
}

func (o ProjectResourceConfigPtrOutput) ToProjectResourceConfigPtrOutput() ProjectResourceConfigPtrOutput {
	return o
}

func (o ProjectResourceConfigPtrOutput) ToProjectResourceConfigPtrOutputWithContext(ctx context.Context) ProjectResourceConfigPtrOutput {
	return o
}

func (o ProjectResourceConfigPtrOutput) Elem() ProjectResourceConfigOutput {
	return o.ApplyT(func(v *ProjectResourceConfig) ProjectResourceConfig {
		if v != nil {
			return *v
		}
		var ret ProjectResourceConfig
		return ret
	}).(ProjectResourceConfigOutput)
}

// Enable fluid compute for your Vercel Functions to automatically manage concurrency and optimize performance. Vercel will handle the defaults to ensure the best experience for your workload.
func (o ProjectResourceConfigPtrOutput) Fluid() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectResourceConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Fluid
	}).(pulumi.BoolPtrOutput)
}

// The amount of CPU available to your Serverless Functions. Should be one of 'standard_legacy' (0.6vCPU), 'standard' (1vCPU) or 'performance' (1.7vCPUs).
func (o ProjectResourceConfigPtrOutput) FunctionDefaultCpuType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectResourceConfig) *string {
		if v == nil {
			return nil
		}
		return v.FunctionDefaultCpuType
	}).(pulumi.StringPtrOutput)
}

// The default timeout for Serverless Functions.
func (o ProjectResourceConfigPtrOutput) FunctionDefaultTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProjectResourceConfig) *int {
		if v == nil {
			return nil
		}
		return v.FunctionDefaultTimeout
	}).(pulumi.IntPtrOutput)
}

type ProjectTrustedIps struct {
	// The allowed IP addressses and CIDR ranges with optional descriptions.
	Addresses []ProjectTrustedIpsAddress `pulumi:"addresses"`
	// The deployment environment to protect. Must be one of `standardProtection`, `allDeployments`, `onlyProductionDeployments`, or `onlyPreviewDeployments`.
	DeploymentType string `pulumi:"deploymentType"`
	// Whether or not Trusted IPs is optional to access a deployment. Must be either `trustedIpRequired` or `trustedIpOptional`. `trustedIpOptional` is only available with Standalone Trusted IPs.
	ProtectionMode *string `pulumi:"protectionMode"`
}

// ProjectTrustedIpsInput is an input type that accepts ProjectTrustedIpsArgs and ProjectTrustedIpsOutput values.
// You can construct a concrete instance of `ProjectTrustedIpsInput` via:
//
//	ProjectTrustedIpsArgs{...}
type ProjectTrustedIpsInput interface {
	pulumi.Input

	ToProjectTrustedIpsOutput() ProjectTrustedIpsOutput
	ToProjectTrustedIpsOutputWithContext(context.Context) ProjectTrustedIpsOutput
}

type ProjectTrustedIpsArgs struct {
	// The allowed IP addressses and CIDR ranges with optional descriptions.
	Addresses ProjectTrustedIpsAddressArrayInput `pulumi:"addresses"`
	// The deployment environment to protect. Must be one of `standardProtection`, `allDeployments`, `onlyProductionDeployments`, or `onlyPreviewDeployments`.
	DeploymentType pulumi.StringInput `pulumi:"deploymentType"`
	// Whether or not Trusted IPs is optional to access a deployment. Must be either `trustedIpRequired` or `trustedIpOptional`. `trustedIpOptional` is only available with Standalone Trusted IPs.
	ProtectionMode pulumi.StringPtrInput `pulumi:"protectionMode"`
}

func (ProjectTrustedIpsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectTrustedIps)(nil)).Elem()
}

func (i ProjectTrustedIpsArgs) ToProjectTrustedIpsOutput() ProjectTrustedIpsOutput {
	return i.ToProjectTrustedIpsOutputWithContext(context.Background())
}

func (i ProjectTrustedIpsArgs) ToProjectTrustedIpsOutputWithContext(ctx context.Context) ProjectTrustedIpsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectTrustedIpsOutput)
}

func (i ProjectTrustedIpsArgs) ToProjectTrustedIpsPtrOutput() ProjectTrustedIpsPtrOutput {
	return i.ToProjectTrustedIpsPtrOutputWithContext(context.Background())
}

func (i ProjectTrustedIpsArgs) ToProjectTrustedIpsPtrOutputWithContext(ctx context.Context) ProjectTrustedIpsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectTrustedIpsOutput).ToProjectTrustedIpsPtrOutputWithContext(ctx)
}

// ProjectTrustedIpsPtrInput is an input type that accepts ProjectTrustedIpsArgs, ProjectTrustedIpsPtr and ProjectTrustedIpsPtrOutput values.
// You can construct a concrete instance of `ProjectTrustedIpsPtrInput` via:
//
//	        ProjectTrustedIpsArgs{...}
//
//	or:
//
//	        nil
type ProjectTrustedIpsPtrInput interface {
	pulumi.Input

	ToProjectTrustedIpsPtrOutput() ProjectTrustedIpsPtrOutput
	ToProjectTrustedIpsPtrOutputWithContext(context.Context) ProjectTrustedIpsPtrOutput
}

type projectTrustedIpsPtrType ProjectTrustedIpsArgs

func ProjectTrustedIpsPtr(v *ProjectTrustedIpsArgs) ProjectTrustedIpsPtrInput {
	return (*projectTrustedIpsPtrType)(v)
}

func (*projectTrustedIpsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectTrustedIps)(nil)).Elem()
}

func (i *projectTrustedIpsPtrType) ToProjectTrustedIpsPtrOutput() ProjectTrustedIpsPtrOutput {
	return i.ToProjectTrustedIpsPtrOutputWithContext(context.Background())
}

func (i *projectTrustedIpsPtrType) ToProjectTrustedIpsPtrOutputWithContext(ctx context.Context) ProjectTrustedIpsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectTrustedIpsPtrOutput)
}

type ProjectTrustedIpsOutput struct{ *pulumi.OutputState }

func (ProjectTrustedIpsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectTrustedIps)(nil)).Elem()
}

func (o ProjectTrustedIpsOutput) ToProjectTrustedIpsOutput() ProjectTrustedIpsOutput {
	return o
}

func (o ProjectTrustedIpsOutput) ToProjectTrustedIpsOutputWithContext(ctx context.Context) ProjectTrustedIpsOutput {
	return o
}

func (o ProjectTrustedIpsOutput) ToProjectTrustedIpsPtrOutput() ProjectTrustedIpsPtrOutput {
	return o.ToProjectTrustedIpsPtrOutputWithContext(context.Background())
}

func (o ProjectTrustedIpsOutput) ToProjectTrustedIpsPtrOutputWithContext(ctx context.Context) ProjectTrustedIpsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectTrustedIps) *ProjectTrustedIps {
		return &v
	}).(ProjectTrustedIpsPtrOutput)
}

// The allowed IP addressses and CIDR ranges with optional descriptions.
func (o ProjectTrustedIpsOutput) Addresses() ProjectTrustedIpsAddressArrayOutput {
	return o.ApplyT(func(v ProjectTrustedIps) []ProjectTrustedIpsAddress { return v.Addresses }).(ProjectTrustedIpsAddressArrayOutput)
}

// The deployment environment to protect. Must be one of `standardProtection`, `allDeployments`, `onlyProductionDeployments`, or `onlyPreviewDeployments`.
func (o ProjectTrustedIpsOutput) DeploymentType() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectTrustedIps) string { return v.DeploymentType }).(pulumi.StringOutput)
}

// Whether or not Trusted IPs is optional to access a deployment. Must be either `trustedIpRequired` or `trustedIpOptional`. `trustedIpOptional` is only available with Standalone Trusted IPs.
func (o ProjectTrustedIpsOutput) ProtectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectTrustedIps) *string { return v.ProtectionMode }).(pulumi.StringPtrOutput)
}

type ProjectTrustedIpsPtrOutput struct{ *pulumi.OutputState }

func (ProjectTrustedIpsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectTrustedIps)(nil)).Elem()
}

func (o ProjectTrustedIpsPtrOutput) ToProjectTrustedIpsPtrOutput() ProjectTrustedIpsPtrOutput {
	return o
}

func (o ProjectTrustedIpsPtrOutput) ToProjectTrustedIpsPtrOutputWithContext(ctx context.Context) ProjectTrustedIpsPtrOutput {
	return o
}

func (o ProjectTrustedIpsPtrOutput) Elem() ProjectTrustedIpsOutput {
	return o.ApplyT(func(v *ProjectTrustedIps) ProjectTrustedIps {
		if v != nil {
			return *v
		}
		var ret ProjectTrustedIps
		return ret
	}).(ProjectTrustedIpsOutput)
}

// The allowed IP addressses and CIDR ranges with optional descriptions.
func (o ProjectTrustedIpsPtrOutput) Addresses() ProjectTrustedIpsAddressArrayOutput {
	return o.ApplyT(func(v *ProjectTrustedIps) []ProjectTrustedIpsAddress {
		if v == nil {
			return nil
		}
		return v.Addresses
	}).(ProjectTrustedIpsAddressArrayOutput)
}

// The deployment environment to protect. Must be one of `standardProtection`, `allDeployments`, `onlyProductionDeployments`, or `onlyPreviewDeployments`.
func (o ProjectTrustedIpsPtrOutput) DeploymentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectTrustedIps) *string {
		if v == nil {
			return nil
		}
		return &v.DeploymentType
	}).(pulumi.StringPtrOutput)
}

// Whether or not Trusted IPs is optional to access a deployment. Must be either `trustedIpRequired` or `trustedIpOptional`. `trustedIpOptional` is only available with Standalone Trusted IPs.
func (o ProjectTrustedIpsPtrOutput) ProtectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectTrustedIps) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionMode
	}).(pulumi.StringPtrOutput)
}

type ProjectTrustedIpsAddress struct {
	// A description for the value
	Note *string `pulumi:"note"`
	// The address or CIDR range that can access deployments.
	Value string `pulumi:"value"`
}

// ProjectTrustedIpsAddressInput is an input type that accepts ProjectTrustedIpsAddressArgs and ProjectTrustedIpsAddressOutput values.
// You can construct a concrete instance of `ProjectTrustedIpsAddressInput` via:
//
//	ProjectTrustedIpsAddressArgs{...}
type ProjectTrustedIpsAddressInput interface {
	pulumi.Input

	ToProjectTrustedIpsAddressOutput() ProjectTrustedIpsAddressOutput
	ToProjectTrustedIpsAddressOutputWithContext(context.Context) ProjectTrustedIpsAddressOutput
}

type ProjectTrustedIpsAddressArgs struct {
	// A description for the value
	Note pulumi.StringPtrInput `pulumi:"note"`
	// The address or CIDR range that can access deployments.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ProjectTrustedIpsAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectTrustedIpsAddress)(nil)).Elem()
}

func (i ProjectTrustedIpsAddressArgs) ToProjectTrustedIpsAddressOutput() ProjectTrustedIpsAddressOutput {
	return i.ToProjectTrustedIpsAddressOutputWithContext(context.Background())
}

func (i ProjectTrustedIpsAddressArgs) ToProjectTrustedIpsAddressOutputWithContext(ctx context.Context) ProjectTrustedIpsAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectTrustedIpsAddressOutput)
}

// ProjectTrustedIpsAddressArrayInput is an input type that accepts ProjectTrustedIpsAddressArray and ProjectTrustedIpsAddressArrayOutput values.
// You can construct a concrete instance of `ProjectTrustedIpsAddressArrayInput` via:
//
//	ProjectTrustedIpsAddressArray{ ProjectTrustedIpsAddressArgs{...} }
type ProjectTrustedIpsAddressArrayInput interface {
	pulumi.Input

	ToProjectTrustedIpsAddressArrayOutput() ProjectTrustedIpsAddressArrayOutput
	ToProjectTrustedIpsAddressArrayOutputWithContext(context.Context) ProjectTrustedIpsAddressArrayOutput
}

type ProjectTrustedIpsAddressArray []ProjectTrustedIpsAddressInput

func (ProjectTrustedIpsAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectTrustedIpsAddress)(nil)).Elem()
}

func (i ProjectTrustedIpsAddressArray) ToProjectTrustedIpsAddressArrayOutput() ProjectTrustedIpsAddressArrayOutput {
	return i.ToProjectTrustedIpsAddressArrayOutputWithContext(context.Background())
}

func (i ProjectTrustedIpsAddressArray) ToProjectTrustedIpsAddressArrayOutputWithContext(ctx context.Context) ProjectTrustedIpsAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectTrustedIpsAddressArrayOutput)
}

type ProjectTrustedIpsAddressOutput struct{ *pulumi.OutputState }

func (ProjectTrustedIpsAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectTrustedIpsAddress)(nil)).Elem()
}

func (o ProjectTrustedIpsAddressOutput) ToProjectTrustedIpsAddressOutput() ProjectTrustedIpsAddressOutput {
	return o
}

func (o ProjectTrustedIpsAddressOutput) ToProjectTrustedIpsAddressOutputWithContext(ctx context.Context) ProjectTrustedIpsAddressOutput {
	return o
}

// A description for the value
func (o ProjectTrustedIpsAddressOutput) Note() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectTrustedIpsAddress) *string { return v.Note }).(pulumi.StringPtrOutput)
}

// The address or CIDR range that can access deployments.
func (o ProjectTrustedIpsAddressOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectTrustedIpsAddress) string { return v.Value }).(pulumi.StringOutput)
}

type ProjectTrustedIpsAddressArrayOutput struct{ *pulumi.OutputState }

func (ProjectTrustedIpsAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectTrustedIpsAddress)(nil)).Elem()
}

func (o ProjectTrustedIpsAddressArrayOutput) ToProjectTrustedIpsAddressArrayOutput() ProjectTrustedIpsAddressArrayOutput {
	return o
}

func (o ProjectTrustedIpsAddressArrayOutput) ToProjectTrustedIpsAddressArrayOutputWithContext(ctx context.Context) ProjectTrustedIpsAddressArrayOutput {
	return o
}

func (o ProjectTrustedIpsAddressArrayOutput) Index(i pulumi.IntInput) ProjectTrustedIpsAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectTrustedIpsAddress {
		return vs[0].([]ProjectTrustedIpsAddress)[vs[1].(int)]
	}).(ProjectTrustedIpsAddressOutput)
}

type ProjectVercelAuthentication struct {
	// The deployment environment to protect. Must be one of `standardProtection`, `allDeployments`, `onlyPreviewDeployments`, or `none`.
	DeploymentType string `pulumi:"deploymentType"`
}

// ProjectVercelAuthenticationInput is an input type that accepts ProjectVercelAuthenticationArgs and ProjectVercelAuthenticationOutput values.
// You can construct a concrete instance of `ProjectVercelAuthenticationInput` via:
//
//	ProjectVercelAuthenticationArgs{...}
type ProjectVercelAuthenticationInput interface {
	pulumi.Input

	ToProjectVercelAuthenticationOutput() ProjectVercelAuthenticationOutput
	ToProjectVercelAuthenticationOutputWithContext(context.Context) ProjectVercelAuthenticationOutput
}

type ProjectVercelAuthenticationArgs struct {
	// The deployment environment to protect. Must be one of `standardProtection`, `allDeployments`, `onlyPreviewDeployments`, or `none`.
	DeploymentType pulumi.StringInput `pulumi:"deploymentType"`
}

func (ProjectVercelAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectVercelAuthentication)(nil)).Elem()
}

func (i ProjectVercelAuthenticationArgs) ToProjectVercelAuthenticationOutput() ProjectVercelAuthenticationOutput {
	return i.ToProjectVercelAuthenticationOutputWithContext(context.Background())
}

func (i ProjectVercelAuthenticationArgs) ToProjectVercelAuthenticationOutputWithContext(ctx context.Context) ProjectVercelAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectVercelAuthenticationOutput)
}

func (i ProjectVercelAuthenticationArgs) ToProjectVercelAuthenticationPtrOutput() ProjectVercelAuthenticationPtrOutput {
	return i.ToProjectVercelAuthenticationPtrOutputWithContext(context.Background())
}

func (i ProjectVercelAuthenticationArgs) ToProjectVercelAuthenticationPtrOutputWithContext(ctx context.Context) ProjectVercelAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectVercelAuthenticationOutput).ToProjectVercelAuthenticationPtrOutputWithContext(ctx)
}

// ProjectVercelAuthenticationPtrInput is an input type that accepts ProjectVercelAuthenticationArgs, ProjectVercelAuthenticationPtr and ProjectVercelAuthenticationPtrOutput values.
// You can construct a concrete instance of `ProjectVercelAuthenticationPtrInput` via:
//
//	        ProjectVercelAuthenticationArgs{...}
//
//	or:
//
//	        nil
type ProjectVercelAuthenticationPtrInput interface {
	pulumi.Input

	ToProjectVercelAuthenticationPtrOutput() ProjectVercelAuthenticationPtrOutput
	ToProjectVercelAuthenticationPtrOutputWithContext(context.Context) ProjectVercelAuthenticationPtrOutput
}

type projectVercelAuthenticationPtrType ProjectVercelAuthenticationArgs

func ProjectVercelAuthenticationPtr(v *ProjectVercelAuthenticationArgs) ProjectVercelAuthenticationPtrInput {
	return (*projectVercelAuthenticationPtrType)(v)
}

func (*projectVercelAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectVercelAuthentication)(nil)).Elem()
}

func (i *projectVercelAuthenticationPtrType) ToProjectVercelAuthenticationPtrOutput() ProjectVercelAuthenticationPtrOutput {
	return i.ToProjectVercelAuthenticationPtrOutputWithContext(context.Background())
}

func (i *projectVercelAuthenticationPtrType) ToProjectVercelAuthenticationPtrOutputWithContext(ctx context.Context) ProjectVercelAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectVercelAuthenticationPtrOutput)
}

type ProjectVercelAuthenticationOutput struct{ *pulumi.OutputState }

func (ProjectVercelAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectVercelAuthentication)(nil)).Elem()
}

func (o ProjectVercelAuthenticationOutput) ToProjectVercelAuthenticationOutput() ProjectVercelAuthenticationOutput {
	return o
}

func (o ProjectVercelAuthenticationOutput) ToProjectVercelAuthenticationOutputWithContext(ctx context.Context) ProjectVercelAuthenticationOutput {
	return o
}

func (o ProjectVercelAuthenticationOutput) ToProjectVercelAuthenticationPtrOutput() ProjectVercelAuthenticationPtrOutput {
	return o.ToProjectVercelAuthenticationPtrOutputWithContext(context.Background())
}

func (o ProjectVercelAuthenticationOutput) ToProjectVercelAuthenticationPtrOutputWithContext(ctx context.Context) ProjectVercelAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectVercelAuthentication) *ProjectVercelAuthentication {
		return &v
	}).(ProjectVercelAuthenticationPtrOutput)
}

// The deployment environment to protect. Must be one of `standardProtection`, `allDeployments`, `onlyPreviewDeployments`, or `none`.
func (o ProjectVercelAuthenticationOutput) DeploymentType() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectVercelAuthentication) string { return v.DeploymentType }).(pulumi.StringOutput)
}

type ProjectVercelAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (ProjectVercelAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectVercelAuthentication)(nil)).Elem()
}

func (o ProjectVercelAuthenticationPtrOutput) ToProjectVercelAuthenticationPtrOutput() ProjectVercelAuthenticationPtrOutput {
	return o
}

func (o ProjectVercelAuthenticationPtrOutput) ToProjectVercelAuthenticationPtrOutputWithContext(ctx context.Context) ProjectVercelAuthenticationPtrOutput {
	return o
}

func (o ProjectVercelAuthenticationPtrOutput) Elem() ProjectVercelAuthenticationOutput {
	return o.ApplyT(func(v *ProjectVercelAuthentication) ProjectVercelAuthentication {
		if v != nil {
			return *v
		}
		var ret ProjectVercelAuthentication
		return ret
	}).(ProjectVercelAuthenticationOutput)
}

// The deployment environment to protect. Must be one of `standardProtection`, `allDeployments`, `onlyPreviewDeployments`, or `none`.
func (o ProjectVercelAuthenticationPtrOutput) DeploymentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectVercelAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.DeploymentType
	}).(pulumi.StringPtrOutput)
}

type TeamConfigRemoteCaching struct {
	// Indicates if Remote Caching is enabled.
	Enabled *bool `pulumi:"enabled"`
}

// TeamConfigRemoteCachingInput is an input type that accepts TeamConfigRemoteCachingArgs and TeamConfigRemoteCachingOutput values.
// You can construct a concrete instance of `TeamConfigRemoteCachingInput` via:
//
//	TeamConfigRemoteCachingArgs{...}
type TeamConfigRemoteCachingInput interface {
	pulumi.Input

	ToTeamConfigRemoteCachingOutput() TeamConfigRemoteCachingOutput
	ToTeamConfigRemoteCachingOutputWithContext(context.Context) TeamConfigRemoteCachingOutput
}

type TeamConfigRemoteCachingArgs struct {
	// Indicates if Remote Caching is enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (TeamConfigRemoteCachingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TeamConfigRemoteCaching)(nil)).Elem()
}

func (i TeamConfigRemoteCachingArgs) ToTeamConfigRemoteCachingOutput() TeamConfigRemoteCachingOutput {
	return i.ToTeamConfigRemoteCachingOutputWithContext(context.Background())
}

func (i TeamConfigRemoteCachingArgs) ToTeamConfigRemoteCachingOutputWithContext(ctx context.Context) TeamConfigRemoteCachingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamConfigRemoteCachingOutput)
}

func (i TeamConfigRemoteCachingArgs) ToTeamConfigRemoteCachingPtrOutput() TeamConfigRemoteCachingPtrOutput {
	return i.ToTeamConfigRemoteCachingPtrOutputWithContext(context.Background())
}

func (i TeamConfigRemoteCachingArgs) ToTeamConfigRemoteCachingPtrOutputWithContext(ctx context.Context) TeamConfigRemoteCachingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamConfigRemoteCachingOutput).ToTeamConfigRemoteCachingPtrOutputWithContext(ctx)
}

// TeamConfigRemoteCachingPtrInput is an input type that accepts TeamConfigRemoteCachingArgs, TeamConfigRemoteCachingPtr and TeamConfigRemoteCachingPtrOutput values.
// You can construct a concrete instance of `TeamConfigRemoteCachingPtrInput` via:
//
//	        TeamConfigRemoteCachingArgs{...}
//
//	or:
//
//	        nil
type TeamConfigRemoteCachingPtrInput interface {
	pulumi.Input

	ToTeamConfigRemoteCachingPtrOutput() TeamConfigRemoteCachingPtrOutput
	ToTeamConfigRemoteCachingPtrOutputWithContext(context.Context) TeamConfigRemoteCachingPtrOutput
}

type teamConfigRemoteCachingPtrType TeamConfigRemoteCachingArgs

func TeamConfigRemoteCachingPtr(v *TeamConfigRemoteCachingArgs) TeamConfigRemoteCachingPtrInput {
	return (*teamConfigRemoteCachingPtrType)(v)
}

func (*teamConfigRemoteCachingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TeamConfigRemoteCaching)(nil)).Elem()
}

func (i *teamConfigRemoteCachingPtrType) ToTeamConfigRemoteCachingPtrOutput() TeamConfigRemoteCachingPtrOutput {
	return i.ToTeamConfigRemoteCachingPtrOutputWithContext(context.Background())
}

func (i *teamConfigRemoteCachingPtrType) ToTeamConfigRemoteCachingPtrOutputWithContext(ctx context.Context) TeamConfigRemoteCachingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamConfigRemoteCachingPtrOutput)
}

type TeamConfigRemoteCachingOutput struct{ *pulumi.OutputState }

func (TeamConfigRemoteCachingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TeamConfigRemoteCaching)(nil)).Elem()
}

func (o TeamConfigRemoteCachingOutput) ToTeamConfigRemoteCachingOutput() TeamConfigRemoteCachingOutput {
	return o
}

func (o TeamConfigRemoteCachingOutput) ToTeamConfigRemoteCachingOutputWithContext(ctx context.Context) TeamConfigRemoteCachingOutput {
	return o
}

func (o TeamConfigRemoteCachingOutput) ToTeamConfigRemoteCachingPtrOutput() TeamConfigRemoteCachingPtrOutput {
	return o.ToTeamConfigRemoteCachingPtrOutputWithContext(context.Background())
}

func (o TeamConfigRemoteCachingOutput) ToTeamConfigRemoteCachingPtrOutputWithContext(ctx context.Context) TeamConfigRemoteCachingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TeamConfigRemoteCaching) *TeamConfigRemoteCaching {
		return &v
	}).(TeamConfigRemoteCachingPtrOutput)
}

// Indicates if Remote Caching is enabled.
func (o TeamConfigRemoteCachingOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TeamConfigRemoteCaching) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type TeamConfigRemoteCachingPtrOutput struct{ *pulumi.OutputState }

func (TeamConfigRemoteCachingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TeamConfigRemoteCaching)(nil)).Elem()
}

func (o TeamConfigRemoteCachingPtrOutput) ToTeamConfigRemoteCachingPtrOutput() TeamConfigRemoteCachingPtrOutput {
	return o
}

func (o TeamConfigRemoteCachingPtrOutput) ToTeamConfigRemoteCachingPtrOutputWithContext(ctx context.Context) TeamConfigRemoteCachingPtrOutput {
	return o
}

func (o TeamConfigRemoteCachingPtrOutput) Elem() TeamConfigRemoteCachingOutput {
	return o.ApplyT(func(v *TeamConfigRemoteCaching) TeamConfigRemoteCaching {
		if v != nil {
			return *v
		}
		var ret TeamConfigRemoteCaching
		return ret
	}).(TeamConfigRemoteCachingOutput)
}

// Indicates if Remote Caching is enabled.
func (o TeamConfigRemoteCachingPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TeamConfigRemoteCaching) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type TeamConfigSaml struct {
	// Indicates if SAML is enforced for the team.
	Enforced bool `pulumi:"enforced"`
	// Directory groups to role or access group mappings. For each directory group, specify either a role or access group id.
	Roles map[string]TeamConfigSamlRoles `pulumi:"roles"`
}

// TeamConfigSamlInput is an input type that accepts TeamConfigSamlArgs and TeamConfigSamlOutput values.
// You can construct a concrete instance of `TeamConfigSamlInput` via:
//
//	TeamConfigSamlArgs{...}
type TeamConfigSamlInput interface {
	pulumi.Input

	ToTeamConfigSamlOutput() TeamConfigSamlOutput
	ToTeamConfigSamlOutputWithContext(context.Context) TeamConfigSamlOutput
}

type TeamConfigSamlArgs struct {
	// Indicates if SAML is enforced for the team.
	Enforced pulumi.BoolInput `pulumi:"enforced"`
	// Directory groups to role or access group mappings. For each directory group, specify either a role or access group id.
	Roles TeamConfigSamlRolesMapInput `pulumi:"roles"`
}

func (TeamConfigSamlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TeamConfigSaml)(nil)).Elem()
}

func (i TeamConfigSamlArgs) ToTeamConfigSamlOutput() TeamConfigSamlOutput {
	return i.ToTeamConfigSamlOutputWithContext(context.Background())
}

func (i TeamConfigSamlArgs) ToTeamConfigSamlOutputWithContext(ctx context.Context) TeamConfigSamlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamConfigSamlOutput)
}

func (i TeamConfigSamlArgs) ToTeamConfigSamlPtrOutput() TeamConfigSamlPtrOutput {
	return i.ToTeamConfigSamlPtrOutputWithContext(context.Background())
}

func (i TeamConfigSamlArgs) ToTeamConfigSamlPtrOutputWithContext(ctx context.Context) TeamConfigSamlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamConfigSamlOutput).ToTeamConfigSamlPtrOutputWithContext(ctx)
}

// TeamConfigSamlPtrInput is an input type that accepts TeamConfigSamlArgs, TeamConfigSamlPtr and TeamConfigSamlPtrOutput values.
// You can construct a concrete instance of `TeamConfigSamlPtrInput` via:
//
//	        TeamConfigSamlArgs{...}
//
//	or:
//
//	        nil
type TeamConfigSamlPtrInput interface {
	pulumi.Input

	ToTeamConfigSamlPtrOutput() TeamConfigSamlPtrOutput
	ToTeamConfigSamlPtrOutputWithContext(context.Context) TeamConfigSamlPtrOutput
}

type teamConfigSamlPtrType TeamConfigSamlArgs

func TeamConfigSamlPtr(v *TeamConfigSamlArgs) TeamConfigSamlPtrInput {
	return (*teamConfigSamlPtrType)(v)
}

func (*teamConfigSamlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TeamConfigSaml)(nil)).Elem()
}

func (i *teamConfigSamlPtrType) ToTeamConfigSamlPtrOutput() TeamConfigSamlPtrOutput {
	return i.ToTeamConfigSamlPtrOutputWithContext(context.Background())
}

func (i *teamConfigSamlPtrType) ToTeamConfigSamlPtrOutputWithContext(ctx context.Context) TeamConfigSamlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamConfigSamlPtrOutput)
}

type TeamConfigSamlOutput struct{ *pulumi.OutputState }

func (TeamConfigSamlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TeamConfigSaml)(nil)).Elem()
}

func (o TeamConfigSamlOutput) ToTeamConfigSamlOutput() TeamConfigSamlOutput {
	return o
}

func (o TeamConfigSamlOutput) ToTeamConfigSamlOutputWithContext(ctx context.Context) TeamConfigSamlOutput {
	return o
}

func (o TeamConfigSamlOutput) ToTeamConfigSamlPtrOutput() TeamConfigSamlPtrOutput {
	return o.ToTeamConfigSamlPtrOutputWithContext(context.Background())
}

func (o TeamConfigSamlOutput) ToTeamConfigSamlPtrOutputWithContext(ctx context.Context) TeamConfigSamlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TeamConfigSaml) *TeamConfigSaml {
		return &v
	}).(TeamConfigSamlPtrOutput)
}

// Indicates if SAML is enforced for the team.
func (o TeamConfigSamlOutput) Enforced() pulumi.BoolOutput {
	return o.ApplyT(func(v TeamConfigSaml) bool { return v.Enforced }).(pulumi.BoolOutput)
}

// Directory groups to role or access group mappings. For each directory group, specify either a role or access group id.
func (o TeamConfigSamlOutput) Roles() TeamConfigSamlRolesMapOutput {
	return o.ApplyT(func(v TeamConfigSaml) map[string]TeamConfigSamlRoles { return v.Roles }).(TeamConfigSamlRolesMapOutput)
}

type TeamConfigSamlPtrOutput struct{ *pulumi.OutputState }

func (TeamConfigSamlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TeamConfigSaml)(nil)).Elem()
}

func (o TeamConfigSamlPtrOutput) ToTeamConfigSamlPtrOutput() TeamConfigSamlPtrOutput {
	return o
}

func (o TeamConfigSamlPtrOutput) ToTeamConfigSamlPtrOutputWithContext(ctx context.Context) TeamConfigSamlPtrOutput {
	return o
}

func (o TeamConfigSamlPtrOutput) Elem() TeamConfigSamlOutput {
	return o.ApplyT(func(v *TeamConfigSaml) TeamConfigSaml {
		if v != nil {
			return *v
		}
		var ret TeamConfigSaml
		return ret
	}).(TeamConfigSamlOutput)
}

// Indicates if SAML is enforced for the team.
func (o TeamConfigSamlPtrOutput) Enforced() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TeamConfigSaml) *bool {
		if v == nil {
			return nil
		}
		return &v.Enforced
	}).(pulumi.BoolPtrOutput)
}

// Directory groups to role or access group mappings. For each directory group, specify either a role or access group id.
func (o TeamConfigSamlPtrOutput) Roles() TeamConfigSamlRolesMapOutput {
	return o.ApplyT(func(v *TeamConfigSaml) map[string]TeamConfigSamlRoles {
		if v == nil {
			return nil
		}
		return v.Roles
	}).(TeamConfigSamlRolesMapOutput)
}

type TeamConfigSamlRoles struct {
	// The access group id to assign to the user.
	AccessGroupId *string `pulumi:"accessGroupId"`
	// The team level role to assign to the user. One of 'MEMBER', 'OWNER', 'VIEWER', 'DEVELOPER', 'BILLING' or 'CONTRIBUTOR'.
	Role *string `pulumi:"role"`
}

// TeamConfigSamlRolesInput is an input type that accepts TeamConfigSamlRolesArgs and TeamConfigSamlRolesOutput values.
// You can construct a concrete instance of `TeamConfigSamlRolesInput` via:
//
//	TeamConfigSamlRolesArgs{...}
type TeamConfigSamlRolesInput interface {
	pulumi.Input

	ToTeamConfigSamlRolesOutput() TeamConfigSamlRolesOutput
	ToTeamConfigSamlRolesOutputWithContext(context.Context) TeamConfigSamlRolesOutput
}

type TeamConfigSamlRolesArgs struct {
	// The access group id to assign to the user.
	AccessGroupId pulumi.StringPtrInput `pulumi:"accessGroupId"`
	// The team level role to assign to the user. One of 'MEMBER', 'OWNER', 'VIEWER', 'DEVELOPER', 'BILLING' or 'CONTRIBUTOR'.
	Role pulumi.StringPtrInput `pulumi:"role"`
}

func (TeamConfigSamlRolesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TeamConfigSamlRoles)(nil)).Elem()
}

func (i TeamConfigSamlRolesArgs) ToTeamConfigSamlRolesOutput() TeamConfigSamlRolesOutput {
	return i.ToTeamConfigSamlRolesOutputWithContext(context.Background())
}

func (i TeamConfigSamlRolesArgs) ToTeamConfigSamlRolesOutputWithContext(ctx context.Context) TeamConfigSamlRolesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamConfigSamlRolesOutput)
}

// TeamConfigSamlRolesMapInput is an input type that accepts TeamConfigSamlRolesMap and TeamConfigSamlRolesMapOutput values.
// You can construct a concrete instance of `TeamConfigSamlRolesMapInput` via:
//
//	TeamConfigSamlRolesMap{ "key": TeamConfigSamlRolesArgs{...} }
type TeamConfigSamlRolesMapInput interface {
	pulumi.Input

	ToTeamConfigSamlRolesMapOutput() TeamConfigSamlRolesMapOutput
	ToTeamConfigSamlRolesMapOutputWithContext(context.Context) TeamConfigSamlRolesMapOutput
}

type TeamConfigSamlRolesMap map[string]TeamConfigSamlRolesInput

func (TeamConfigSamlRolesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]TeamConfigSamlRoles)(nil)).Elem()
}

func (i TeamConfigSamlRolesMap) ToTeamConfigSamlRolesMapOutput() TeamConfigSamlRolesMapOutput {
	return i.ToTeamConfigSamlRolesMapOutputWithContext(context.Background())
}

func (i TeamConfigSamlRolesMap) ToTeamConfigSamlRolesMapOutputWithContext(ctx context.Context) TeamConfigSamlRolesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamConfigSamlRolesMapOutput)
}

type TeamConfigSamlRolesOutput struct{ *pulumi.OutputState }

func (TeamConfigSamlRolesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TeamConfigSamlRoles)(nil)).Elem()
}

func (o TeamConfigSamlRolesOutput) ToTeamConfigSamlRolesOutput() TeamConfigSamlRolesOutput {
	return o
}

func (o TeamConfigSamlRolesOutput) ToTeamConfigSamlRolesOutputWithContext(ctx context.Context) TeamConfigSamlRolesOutput {
	return o
}

// The access group id to assign to the user.
func (o TeamConfigSamlRolesOutput) AccessGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TeamConfigSamlRoles) *string { return v.AccessGroupId }).(pulumi.StringPtrOutput)
}

// The team level role to assign to the user. One of 'MEMBER', 'OWNER', 'VIEWER', 'DEVELOPER', 'BILLING' or 'CONTRIBUTOR'.
func (o TeamConfigSamlRolesOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TeamConfigSamlRoles) *string { return v.Role }).(pulumi.StringPtrOutput)
}

type TeamConfigSamlRolesMapOutput struct{ *pulumi.OutputState }

func (TeamConfigSamlRolesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]TeamConfigSamlRoles)(nil)).Elem()
}

func (o TeamConfigSamlRolesMapOutput) ToTeamConfigSamlRolesMapOutput() TeamConfigSamlRolesMapOutput {
	return o
}

func (o TeamConfigSamlRolesMapOutput) ToTeamConfigSamlRolesMapOutputWithContext(ctx context.Context) TeamConfigSamlRolesMapOutput {
	return o
}

func (o TeamConfigSamlRolesMapOutput) MapIndex(k pulumi.StringInput) TeamConfigSamlRolesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) TeamConfigSamlRoles {
		return vs[0].(map[string]TeamConfigSamlRoles)[vs[1].(string)]
	}).(TeamConfigSamlRolesOutput)
}

type TeamMemberProject struct {
	// The ID of the project that the user should be granted access to.
	ProjectId string `pulumi:"projectId"`
	// The role that the user should have in the project.
	Role string `pulumi:"role"`
}

// TeamMemberProjectInput is an input type that accepts TeamMemberProjectArgs and TeamMemberProjectOutput values.
// You can construct a concrete instance of `TeamMemberProjectInput` via:
//
//	TeamMemberProjectArgs{...}
type TeamMemberProjectInput interface {
	pulumi.Input

	ToTeamMemberProjectOutput() TeamMemberProjectOutput
	ToTeamMemberProjectOutputWithContext(context.Context) TeamMemberProjectOutput
}

type TeamMemberProjectArgs struct {
	// The ID of the project that the user should be granted access to.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// The role that the user should have in the project.
	Role pulumi.StringInput `pulumi:"role"`
}

func (TeamMemberProjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TeamMemberProject)(nil)).Elem()
}

func (i TeamMemberProjectArgs) ToTeamMemberProjectOutput() TeamMemberProjectOutput {
	return i.ToTeamMemberProjectOutputWithContext(context.Background())
}

func (i TeamMemberProjectArgs) ToTeamMemberProjectOutputWithContext(ctx context.Context) TeamMemberProjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamMemberProjectOutput)
}

// TeamMemberProjectArrayInput is an input type that accepts TeamMemberProjectArray and TeamMemberProjectArrayOutput values.
// You can construct a concrete instance of `TeamMemberProjectArrayInput` via:
//
//	TeamMemberProjectArray{ TeamMemberProjectArgs{...} }
type TeamMemberProjectArrayInput interface {
	pulumi.Input

	ToTeamMemberProjectArrayOutput() TeamMemberProjectArrayOutput
	ToTeamMemberProjectArrayOutputWithContext(context.Context) TeamMemberProjectArrayOutput
}

type TeamMemberProjectArray []TeamMemberProjectInput

func (TeamMemberProjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TeamMemberProject)(nil)).Elem()
}

func (i TeamMemberProjectArray) ToTeamMemberProjectArrayOutput() TeamMemberProjectArrayOutput {
	return i.ToTeamMemberProjectArrayOutputWithContext(context.Background())
}

func (i TeamMemberProjectArray) ToTeamMemberProjectArrayOutputWithContext(ctx context.Context) TeamMemberProjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamMemberProjectArrayOutput)
}

type TeamMemberProjectOutput struct{ *pulumi.OutputState }

func (TeamMemberProjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TeamMemberProject)(nil)).Elem()
}

func (o TeamMemberProjectOutput) ToTeamMemberProjectOutput() TeamMemberProjectOutput {
	return o
}

func (o TeamMemberProjectOutput) ToTeamMemberProjectOutputWithContext(ctx context.Context) TeamMemberProjectOutput {
	return o
}

// The ID of the project that the user should be granted access to.
func (o TeamMemberProjectOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v TeamMemberProject) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The role that the user should have in the project.
func (o TeamMemberProjectOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v TeamMemberProject) string { return v.Role }).(pulumi.StringOutput)
}

type TeamMemberProjectArrayOutput struct{ *pulumi.OutputState }

func (TeamMemberProjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TeamMemberProject)(nil)).Elem()
}

func (o TeamMemberProjectArrayOutput) ToTeamMemberProjectArrayOutput() TeamMemberProjectArrayOutput {
	return o
}

func (o TeamMemberProjectArrayOutput) ToTeamMemberProjectArrayOutputWithContext(ctx context.Context) TeamMemberProjectArrayOutput {
	return o
}

func (o TeamMemberProjectArrayOutput) Index(i pulumi.IntInput) TeamMemberProjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TeamMemberProject {
		return vs[0].([]TeamMemberProject)[vs[1].(int)]
	}).(TeamMemberProjectOutput)
}

type GetCustomEnvironmentBranchTracking struct {
	// The pattern of the branch name to track.
	Pattern string `pulumi:"pattern"`
	// How a branch name should be matched against the pattern. Must be one of 'startsWith', 'endsWith' or 'equals'.
	Type string `pulumi:"type"`
}

// GetCustomEnvironmentBranchTrackingInput is an input type that accepts GetCustomEnvironmentBranchTrackingArgs and GetCustomEnvironmentBranchTrackingOutput values.
// You can construct a concrete instance of `GetCustomEnvironmentBranchTrackingInput` via:
//
//	GetCustomEnvironmentBranchTrackingArgs{...}
type GetCustomEnvironmentBranchTrackingInput interface {
	pulumi.Input

	ToGetCustomEnvironmentBranchTrackingOutput() GetCustomEnvironmentBranchTrackingOutput
	ToGetCustomEnvironmentBranchTrackingOutputWithContext(context.Context) GetCustomEnvironmentBranchTrackingOutput
}

type GetCustomEnvironmentBranchTrackingArgs struct {
	// The pattern of the branch name to track.
	Pattern pulumi.StringInput `pulumi:"pattern"`
	// How a branch name should be matched against the pattern. Must be one of 'startsWith', 'endsWith' or 'equals'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetCustomEnvironmentBranchTrackingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomEnvironmentBranchTracking)(nil)).Elem()
}

func (i GetCustomEnvironmentBranchTrackingArgs) ToGetCustomEnvironmentBranchTrackingOutput() GetCustomEnvironmentBranchTrackingOutput {
	return i.ToGetCustomEnvironmentBranchTrackingOutputWithContext(context.Background())
}

func (i GetCustomEnvironmentBranchTrackingArgs) ToGetCustomEnvironmentBranchTrackingOutputWithContext(ctx context.Context) GetCustomEnvironmentBranchTrackingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomEnvironmentBranchTrackingOutput)
}

type GetCustomEnvironmentBranchTrackingOutput struct{ *pulumi.OutputState }

func (GetCustomEnvironmentBranchTrackingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomEnvironmentBranchTracking)(nil)).Elem()
}

func (o GetCustomEnvironmentBranchTrackingOutput) ToGetCustomEnvironmentBranchTrackingOutput() GetCustomEnvironmentBranchTrackingOutput {
	return o
}

func (o GetCustomEnvironmentBranchTrackingOutput) ToGetCustomEnvironmentBranchTrackingOutputWithContext(ctx context.Context) GetCustomEnvironmentBranchTrackingOutput {
	return o
}

// The pattern of the branch name to track.
func (o GetCustomEnvironmentBranchTrackingOutput) Pattern() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomEnvironmentBranchTracking) string { return v.Pattern }).(pulumi.StringOutput)
}

// How a branch name should be matched against the pattern. Must be one of 'startsWith', 'endsWith' or 'equals'.
func (o GetCustomEnvironmentBranchTrackingOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomEnvironmentBranchTracking) string { return v.Type }).(pulumi.StringOutput)
}

type GetMicrofrontendGroupDefaultApp struct {
	// The default route for the project. Used for the screenshot of deployments.
	DefaultRoute string `pulumi:"defaultRoute"`
	// The ID of the project.
	ProjectId string `pulumi:"projectId"`
}

// GetMicrofrontendGroupDefaultAppInput is an input type that accepts GetMicrofrontendGroupDefaultAppArgs and GetMicrofrontendGroupDefaultAppOutput values.
// You can construct a concrete instance of `GetMicrofrontendGroupDefaultAppInput` via:
//
//	GetMicrofrontendGroupDefaultAppArgs{...}
type GetMicrofrontendGroupDefaultAppInput interface {
	pulumi.Input

	ToGetMicrofrontendGroupDefaultAppOutput() GetMicrofrontendGroupDefaultAppOutput
	ToGetMicrofrontendGroupDefaultAppOutputWithContext(context.Context) GetMicrofrontendGroupDefaultAppOutput
}

type GetMicrofrontendGroupDefaultAppArgs struct {
	// The default route for the project. Used for the screenshot of deployments.
	DefaultRoute pulumi.StringInput `pulumi:"defaultRoute"`
	// The ID of the project.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
}

func (GetMicrofrontendGroupDefaultAppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMicrofrontendGroupDefaultApp)(nil)).Elem()
}

func (i GetMicrofrontendGroupDefaultAppArgs) ToGetMicrofrontendGroupDefaultAppOutput() GetMicrofrontendGroupDefaultAppOutput {
	return i.ToGetMicrofrontendGroupDefaultAppOutputWithContext(context.Background())
}

func (i GetMicrofrontendGroupDefaultAppArgs) ToGetMicrofrontendGroupDefaultAppOutputWithContext(ctx context.Context) GetMicrofrontendGroupDefaultAppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMicrofrontendGroupDefaultAppOutput)
}

type GetMicrofrontendGroupDefaultAppOutput struct{ *pulumi.OutputState }

func (GetMicrofrontendGroupDefaultAppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMicrofrontendGroupDefaultApp)(nil)).Elem()
}

func (o GetMicrofrontendGroupDefaultAppOutput) ToGetMicrofrontendGroupDefaultAppOutput() GetMicrofrontendGroupDefaultAppOutput {
	return o
}

func (o GetMicrofrontendGroupDefaultAppOutput) ToGetMicrofrontendGroupDefaultAppOutputWithContext(ctx context.Context) GetMicrofrontendGroupDefaultAppOutput {
	return o
}

// The default route for the project. Used for the screenshot of deployments.
func (o GetMicrofrontendGroupDefaultAppOutput) DefaultRoute() pulumi.StringOutput {
	return o.ApplyT(func(v GetMicrofrontendGroupDefaultApp) string { return v.DefaultRoute }).(pulumi.StringOutput)
}

// The ID of the project.
func (o GetMicrofrontendGroupDefaultAppOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMicrofrontendGroupDefaultApp) string { return v.ProjectId }).(pulumi.StringOutput)
}

type GetProjectEnvironment struct {
	// A comment explaining what the environment variable is for.
	Comment string `pulumi:"comment"`
	// The IDs of Custom Environments that the Environment Variable should be present on.
	CustomEnvironmentIds []string `pulumi:"customEnvironmentIds"`
	// The git branch of the environment variable.
	GitBranch string `pulumi:"gitBranch"`
	// The ID of the environment variable
	Id string `pulumi:"id"`
	// The name of the environment variable.
	Key string `pulumi:"key"`
	// Whether the Environment Variable is sensitive or not. Note that the value will be `null` for sensitive environment variables.
	Sensitive bool `pulumi:"sensitive"`
	// The environments that the environment variable should be present on. Valid targets are either `production`, `preview`, or `development`.
	Targets []string `pulumi:"targets"`
	// The value of the environment variable.
	Value string `pulumi:"value"`
}

// GetProjectEnvironmentInput is an input type that accepts GetProjectEnvironmentArgs and GetProjectEnvironmentOutput values.
// You can construct a concrete instance of `GetProjectEnvironmentInput` via:
//
//	GetProjectEnvironmentArgs{...}
type GetProjectEnvironmentInput interface {
	pulumi.Input

	ToGetProjectEnvironmentOutput() GetProjectEnvironmentOutput
	ToGetProjectEnvironmentOutputWithContext(context.Context) GetProjectEnvironmentOutput
}

type GetProjectEnvironmentArgs struct {
	// A comment explaining what the environment variable is for.
	Comment pulumi.StringInput `pulumi:"comment"`
	// The IDs of Custom Environments that the Environment Variable should be present on.
	CustomEnvironmentIds pulumi.StringArrayInput `pulumi:"customEnvironmentIds"`
	// The git branch of the environment variable.
	GitBranch pulumi.StringInput `pulumi:"gitBranch"`
	// The ID of the environment variable
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the environment variable.
	Key pulumi.StringInput `pulumi:"key"`
	// Whether the Environment Variable is sensitive or not. Note that the value will be `null` for sensitive environment variables.
	Sensitive pulumi.BoolInput `pulumi:"sensitive"`
	// The environments that the environment variable should be present on. Valid targets are either `production`, `preview`, or `development`.
	Targets pulumi.StringArrayInput `pulumi:"targets"`
	// The value of the environment variable.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetProjectEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectEnvironment)(nil)).Elem()
}

func (i GetProjectEnvironmentArgs) ToGetProjectEnvironmentOutput() GetProjectEnvironmentOutput {
	return i.ToGetProjectEnvironmentOutputWithContext(context.Background())
}

func (i GetProjectEnvironmentArgs) ToGetProjectEnvironmentOutputWithContext(ctx context.Context) GetProjectEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectEnvironmentOutput)
}

// GetProjectEnvironmentArrayInput is an input type that accepts GetProjectEnvironmentArray and GetProjectEnvironmentArrayOutput values.
// You can construct a concrete instance of `GetProjectEnvironmentArrayInput` via:
//
//	GetProjectEnvironmentArray{ GetProjectEnvironmentArgs{...} }
type GetProjectEnvironmentArrayInput interface {
	pulumi.Input

	ToGetProjectEnvironmentArrayOutput() GetProjectEnvironmentArrayOutput
	ToGetProjectEnvironmentArrayOutputWithContext(context.Context) GetProjectEnvironmentArrayOutput
}

type GetProjectEnvironmentArray []GetProjectEnvironmentInput

func (GetProjectEnvironmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectEnvironment)(nil)).Elem()
}

func (i GetProjectEnvironmentArray) ToGetProjectEnvironmentArrayOutput() GetProjectEnvironmentArrayOutput {
	return i.ToGetProjectEnvironmentArrayOutputWithContext(context.Background())
}

func (i GetProjectEnvironmentArray) ToGetProjectEnvironmentArrayOutputWithContext(ctx context.Context) GetProjectEnvironmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectEnvironmentArrayOutput)
}

type GetProjectEnvironmentOutput struct{ *pulumi.OutputState }

func (GetProjectEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectEnvironment)(nil)).Elem()
}

func (o GetProjectEnvironmentOutput) ToGetProjectEnvironmentOutput() GetProjectEnvironmentOutput {
	return o
}

func (o GetProjectEnvironmentOutput) ToGetProjectEnvironmentOutputWithContext(ctx context.Context) GetProjectEnvironmentOutput {
	return o
}

// A comment explaining what the environment variable is for.
func (o GetProjectEnvironmentOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectEnvironment) string { return v.Comment }).(pulumi.StringOutput)
}

// The IDs of Custom Environments that the Environment Variable should be present on.
func (o GetProjectEnvironmentOutput) CustomEnvironmentIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProjectEnvironment) []string { return v.CustomEnvironmentIds }).(pulumi.StringArrayOutput)
}

// The git branch of the environment variable.
func (o GetProjectEnvironmentOutput) GitBranch() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectEnvironment) string { return v.GitBranch }).(pulumi.StringOutput)
}

// The ID of the environment variable
func (o GetProjectEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the environment variable.
func (o GetProjectEnvironmentOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectEnvironment) string { return v.Key }).(pulumi.StringOutput)
}

// Whether the Environment Variable is sensitive or not. Note that the value will be `null` for sensitive environment variables.
func (o GetProjectEnvironmentOutput) Sensitive() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectEnvironment) bool { return v.Sensitive }).(pulumi.BoolOutput)
}

// The environments that the environment variable should be present on. Valid targets are either `production`, `preview`, or `development`.
func (o GetProjectEnvironmentOutput) Targets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProjectEnvironment) []string { return v.Targets }).(pulumi.StringArrayOutput)
}

// The value of the environment variable.
func (o GetProjectEnvironmentOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectEnvironment) string { return v.Value }).(pulumi.StringOutput)
}

type GetProjectEnvironmentArrayOutput struct{ *pulumi.OutputState }

func (GetProjectEnvironmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectEnvironment)(nil)).Elem()
}

func (o GetProjectEnvironmentArrayOutput) ToGetProjectEnvironmentArrayOutput() GetProjectEnvironmentArrayOutput {
	return o
}

func (o GetProjectEnvironmentArrayOutput) ToGetProjectEnvironmentArrayOutputWithContext(ctx context.Context) GetProjectEnvironmentArrayOutput {
	return o
}

func (o GetProjectEnvironmentArrayOutput) Index(i pulumi.IntInput) GetProjectEnvironmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectEnvironment {
		return vs[0].([]GetProjectEnvironment)[vs[1].(int)]
	}).(GetProjectEnvironmentOutput)
}

type GetProjectGitComments struct {
	// Whether Commit comments are enabled
	OnCommit bool `pulumi:"onCommit"`
	// Whether Pull Request comments are enabled
	OnPullRequest bool `pulumi:"onPullRequest"`
}

// GetProjectGitCommentsInput is an input type that accepts GetProjectGitCommentsArgs and GetProjectGitCommentsOutput values.
// You can construct a concrete instance of `GetProjectGitCommentsInput` via:
//
//	GetProjectGitCommentsArgs{...}
type GetProjectGitCommentsInput interface {
	pulumi.Input

	ToGetProjectGitCommentsOutput() GetProjectGitCommentsOutput
	ToGetProjectGitCommentsOutputWithContext(context.Context) GetProjectGitCommentsOutput
}

type GetProjectGitCommentsArgs struct {
	// Whether Commit comments are enabled
	OnCommit pulumi.BoolInput `pulumi:"onCommit"`
	// Whether Pull Request comments are enabled
	OnPullRequest pulumi.BoolInput `pulumi:"onPullRequest"`
}

func (GetProjectGitCommentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectGitComments)(nil)).Elem()
}

func (i GetProjectGitCommentsArgs) ToGetProjectGitCommentsOutput() GetProjectGitCommentsOutput {
	return i.ToGetProjectGitCommentsOutputWithContext(context.Background())
}

func (i GetProjectGitCommentsArgs) ToGetProjectGitCommentsOutputWithContext(ctx context.Context) GetProjectGitCommentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectGitCommentsOutput)
}

type GetProjectGitCommentsOutput struct{ *pulumi.OutputState }

func (GetProjectGitCommentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectGitComments)(nil)).Elem()
}

func (o GetProjectGitCommentsOutput) ToGetProjectGitCommentsOutput() GetProjectGitCommentsOutput {
	return o
}

func (o GetProjectGitCommentsOutput) ToGetProjectGitCommentsOutputWithContext(ctx context.Context) GetProjectGitCommentsOutput {
	return o
}

// Whether Commit comments are enabled
func (o GetProjectGitCommentsOutput) OnCommit() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectGitComments) bool { return v.OnCommit }).(pulumi.BoolOutput)
}

// Whether Pull Request comments are enabled
func (o GetProjectGitCommentsOutput) OnPullRequest() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectGitComments) bool { return v.OnPullRequest }).(pulumi.BoolOutput)
}

type GetProjectGitRepository struct {
	// Deploy hooks are unique URLs that allow you to trigger a deployment of a given branch. See https://vercel.com/docs/deployments/deploy-hooks for full information.
	DeployHooks []GetProjectGitRepositoryDeployHook `pulumi:"deployHooks"`
	// By default, every commit pushed to the main branch will trigger a Production Deployment instead of the usual Preview Deployment. You can switch to a different branch here.
	ProductionBranch string `pulumi:"productionBranch"`
	// The name of the git repository. For example: `vercel/next.js`.
	Repo string `pulumi:"repo"`
	// The git provider of the repository. Must be either `github`, `gitlab`, or `bitbucket`.
	Type string `pulumi:"type"`
}

// GetProjectGitRepositoryInput is an input type that accepts GetProjectGitRepositoryArgs and GetProjectGitRepositoryOutput values.
// You can construct a concrete instance of `GetProjectGitRepositoryInput` via:
//
//	GetProjectGitRepositoryArgs{...}
type GetProjectGitRepositoryInput interface {
	pulumi.Input

	ToGetProjectGitRepositoryOutput() GetProjectGitRepositoryOutput
	ToGetProjectGitRepositoryOutputWithContext(context.Context) GetProjectGitRepositoryOutput
}

type GetProjectGitRepositoryArgs struct {
	// Deploy hooks are unique URLs that allow you to trigger a deployment of a given branch. See https://vercel.com/docs/deployments/deploy-hooks for full information.
	DeployHooks GetProjectGitRepositoryDeployHookArrayInput `pulumi:"deployHooks"`
	// By default, every commit pushed to the main branch will trigger a Production Deployment instead of the usual Preview Deployment. You can switch to a different branch here.
	ProductionBranch pulumi.StringInput `pulumi:"productionBranch"`
	// The name of the git repository. For example: `vercel/next.js`.
	Repo pulumi.StringInput `pulumi:"repo"`
	// The git provider of the repository. Must be either `github`, `gitlab`, or `bitbucket`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetProjectGitRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectGitRepository)(nil)).Elem()
}

func (i GetProjectGitRepositoryArgs) ToGetProjectGitRepositoryOutput() GetProjectGitRepositoryOutput {
	return i.ToGetProjectGitRepositoryOutputWithContext(context.Background())
}

func (i GetProjectGitRepositoryArgs) ToGetProjectGitRepositoryOutputWithContext(ctx context.Context) GetProjectGitRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectGitRepositoryOutput)
}

type GetProjectGitRepositoryOutput struct{ *pulumi.OutputState }

func (GetProjectGitRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectGitRepository)(nil)).Elem()
}

func (o GetProjectGitRepositoryOutput) ToGetProjectGitRepositoryOutput() GetProjectGitRepositoryOutput {
	return o
}

func (o GetProjectGitRepositoryOutput) ToGetProjectGitRepositoryOutputWithContext(ctx context.Context) GetProjectGitRepositoryOutput {
	return o
}

// Deploy hooks are unique URLs that allow you to trigger a deployment of a given branch. See https://vercel.com/docs/deployments/deploy-hooks for full information.
func (o GetProjectGitRepositoryOutput) DeployHooks() GetProjectGitRepositoryDeployHookArrayOutput {
	return o.ApplyT(func(v GetProjectGitRepository) []GetProjectGitRepositoryDeployHook { return v.DeployHooks }).(GetProjectGitRepositoryDeployHookArrayOutput)
}

// By default, every commit pushed to the main branch will trigger a Production Deployment instead of the usual Preview Deployment. You can switch to a different branch here.
func (o GetProjectGitRepositoryOutput) ProductionBranch() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectGitRepository) string { return v.ProductionBranch }).(pulumi.StringOutput)
}

// The name of the git repository. For example: `vercel/next.js`.
func (o GetProjectGitRepositoryOutput) Repo() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectGitRepository) string { return v.Repo }).(pulumi.StringOutput)
}

// The git provider of the repository. Must be either `github`, `gitlab`, or `bitbucket`.
func (o GetProjectGitRepositoryOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectGitRepository) string { return v.Type }).(pulumi.StringOutput)
}

type GetProjectGitRepositoryDeployHook struct {
	// The ID of the deploy hook.
	Id string `pulumi:"id"`
	// The name of the deploy hook.
	Name string `pulumi:"name"`
	// The branch or commit hash that should be deployed.
	Ref string `pulumi:"ref"`
	// A URL that, when a POST request is made to, will trigger a new deployment.
	Url string `pulumi:"url"`
}

// GetProjectGitRepositoryDeployHookInput is an input type that accepts GetProjectGitRepositoryDeployHookArgs and GetProjectGitRepositoryDeployHookOutput values.
// You can construct a concrete instance of `GetProjectGitRepositoryDeployHookInput` via:
//
//	GetProjectGitRepositoryDeployHookArgs{...}
type GetProjectGitRepositoryDeployHookInput interface {
	pulumi.Input

	ToGetProjectGitRepositoryDeployHookOutput() GetProjectGitRepositoryDeployHookOutput
	ToGetProjectGitRepositoryDeployHookOutputWithContext(context.Context) GetProjectGitRepositoryDeployHookOutput
}

type GetProjectGitRepositoryDeployHookArgs struct {
	// The ID of the deploy hook.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the deploy hook.
	Name pulumi.StringInput `pulumi:"name"`
	// The branch or commit hash that should be deployed.
	Ref pulumi.StringInput `pulumi:"ref"`
	// A URL that, when a POST request is made to, will trigger a new deployment.
	Url pulumi.StringInput `pulumi:"url"`
}

func (GetProjectGitRepositoryDeployHookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectGitRepositoryDeployHook)(nil)).Elem()
}

func (i GetProjectGitRepositoryDeployHookArgs) ToGetProjectGitRepositoryDeployHookOutput() GetProjectGitRepositoryDeployHookOutput {
	return i.ToGetProjectGitRepositoryDeployHookOutputWithContext(context.Background())
}

func (i GetProjectGitRepositoryDeployHookArgs) ToGetProjectGitRepositoryDeployHookOutputWithContext(ctx context.Context) GetProjectGitRepositoryDeployHookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectGitRepositoryDeployHookOutput)
}

// GetProjectGitRepositoryDeployHookArrayInput is an input type that accepts GetProjectGitRepositoryDeployHookArray and GetProjectGitRepositoryDeployHookArrayOutput values.
// You can construct a concrete instance of `GetProjectGitRepositoryDeployHookArrayInput` via:
//
//	GetProjectGitRepositoryDeployHookArray{ GetProjectGitRepositoryDeployHookArgs{...} }
type GetProjectGitRepositoryDeployHookArrayInput interface {
	pulumi.Input

	ToGetProjectGitRepositoryDeployHookArrayOutput() GetProjectGitRepositoryDeployHookArrayOutput
	ToGetProjectGitRepositoryDeployHookArrayOutputWithContext(context.Context) GetProjectGitRepositoryDeployHookArrayOutput
}

type GetProjectGitRepositoryDeployHookArray []GetProjectGitRepositoryDeployHookInput

func (GetProjectGitRepositoryDeployHookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectGitRepositoryDeployHook)(nil)).Elem()
}

func (i GetProjectGitRepositoryDeployHookArray) ToGetProjectGitRepositoryDeployHookArrayOutput() GetProjectGitRepositoryDeployHookArrayOutput {
	return i.ToGetProjectGitRepositoryDeployHookArrayOutputWithContext(context.Background())
}

func (i GetProjectGitRepositoryDeployHookArray) ToGetProjectGitRepositoryDeployHookArrayOutputWithContext(ctx context.Context) GetProjectGitRepositoryDeployHookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectGitRepositoryDeployHookArrayOutput)
}

type GetProjectGitRepositoryDeployHookOutput struct{ *pulumi.OutputState }

func (GetProjectGitRepositoryDeployHookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectGitRepositoryDeployHook)(nil)).Elem()
}

func (o GetProjectGitRepositoryDeployHookOutput) ToGetProjectGitRepositoryDeployHookOutput() GetProjectGitRepositoryDeployHookOutput {
	return o
}

func (o GetProjectGitRepositoryDeployHookOutput) ToGetProjectGitRepositoryDeployHookOutputWithContext(ctx context.Context) GetProjectGitRepositoryDeployHookOutput {
	return o
}

// The ID of the deploy hook.
func (o GetProjectGitRepositoryDeployHookOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectGitRepositoryDeployHook) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the deploy hook.
func (o GetProjectGitRepositoryDeployHookOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectGitRepositoryDeployHook) string { return v.Name }).(pulumi.StringOutput)
}

// The branch or commit hash that should be deployed.
func (o GetProjectGitRepositoryDeployHookOutput) Ref() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectGitRepositoryDeployHook) string { return v.Ref }).(pulumi.StringOutput)
}

// A URL that, when a POST request is made to, will trigger a new deployment.
func (o GetProjectGitRepositoryDeployHookOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectGitRepositoryDeployHook) string { return v.Url }).(pulumi.StringOutput)
}

type GetProjectGitRepositoryDeployHookArrayOutput struct{ *pulumi.OutputState }

func (GetProjectGitRepositoryDeployHookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectGitRepositoryDeployHook)(nil)).Elem()
}

func (o GetProjectGitRepositoryDeployHookArrayOutput) ToGetProjectGitRepositoryDeployHookArrayOutput() GetProjectGitRepositoryDeployHookArrayOutput {
	return o
}

func (o GetProjectGitRepositoryDeployHookArrayOutput) ToGetProjectGitRepositoryDeployHookArrayOutputWithContext(ctx context.Context) GetProjectGitRepositoryDeployHookArrayOutput {
	return o
}

func (o GetProjectGitRepositoryDeployHookArrayOutput) Index(i pulumi.IntInput) GetProjectGitRepositoryDeployHookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectGitRepositoryDeployHook {
		return vs[0].([]GetProjectGitRepositoryDeployHook)[vs[1].(int)]
	}).(GetProjectGitRepositoryDeployHookOutput)
}

type GetProjectMembersMember struct {
	// The email of the user.
	Email string `pulumi:"email"`
	// The role of the user in the project. One of 'MEMBER', 'PROJECT*DEVELOPER', or 'PROJECT*VIEWER'.
	Role string `pulumi:"role"`
	// The ID of the user.
	UserId string `pulumi:"userId"`
	// The username of the user.
	Username string `pulumi:"username"`
}

// GetProjectMembersMemberInput is an input type that accepts GetProjectMembersMemberArgs and GetProjectMembersMemberOutput values.
// You can construct a concrete instance of `GetProjectMembersMemberInput` via:
//
//	GetProjectMembersMemberArgs{...}
type GetProjectMembersMemberInput interface {
	pulumi.Input

	ToGetProjectMembersMemberOutput() GetProjectMembersMemberOutput
	ToGetProjectMembersMemberOutputWithContext(context.Context) GetProjectMembersMemberOutput
}

type GetProjectMembersMemberArgs struct {
	// The email of the user.
	Email pulumi.StringInput `pulumi:"email"`
	// The role of the user in the project. One of 'MEMBER', 'PROJECT*DEVELOPER', or 'PROJECT*VIEWER'.
	Role pulumi.StringInput `pulumi:"role"`
	// The ID of the user.
	UserId pulumi.StringInput `pulumi:"userId"`
	// The username of the user.
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetProjectMembersMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectMembersMember)(nil)).Elem()
}

func (i GetProjectMembersMemberArgs) ToGetProjectMembersMemberOutput() GetProjectMembersMemberOutput {
	return i.ToGetProjectMembersMemberOutputWithContext(context.Background())
}

func (i GetProjectMembersMemberArgs) ToGetProjectMembersMemberOutputWithContext(ctx context.Context) GetProjectMembersMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectMembersMemberOutput)
}

// GetProjectMembersMemberArrayInput is an input type that accepts GetProjectMembersMemberArray and GetProjectMembersMemberArrayOutput values.
// You can construct a concrete instance of `GetProjectMembersMemberArrayInput` via:
//
//	GetProjectMembersMemberArray{ GetProjectMembersMemberArgs{...} }
type GetProjectMembersMemberArrayInput interface {
	pulumi.Input

	ToGetProjectMembersMemberArrayOutput() GetProjectMembersMemberArrayOutput
	ToGetProjectMembersMemberArrayOutputWithContext(context.Context) GetProjectMembersMemberArrayOutput
}

type GetProjectMembersMemberArray []GetProjectMembersMemberInput

func (GetProjectMembersMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectMembersMember)(nil)).Elem()
}

func (i GetProjectMembersMemberArray) ToGetProjectMembersMemberArrayOutput() GetProjectMembersMemberArrayOutput {
	return i.ToGetProjectMembersMemberArrayOutputWithContext(context.Background())
}

func (i GetProjectMembersMemberArray) ToGetProjectMembersMemberArrayOutputWithContext(ctx context.Context) GetProjectMembersMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectMembersMemberArrayOutput)
}

type GetProjectMembersMemberOutput struct{ *pulumi.OutputState }

func (GetProjectMembersMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectMembersMember)(nil)).Elem()
}

func (o GetProjectMembersMemberOutput) ToGetProjectMembersMemberOutput() GetProjectMembersMemberOutput {
	return o
}

func (o GetProjectMembersMemberOutput) ToGetProjectMembersMemberOutputWithContext(ctx context.Context) GetProjectMembersMemberOutput {
	return o
}

// The email of the user.
func (o GetProjectMembersMemberOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectMembersMember) string { return v.Email }).(pulumi.StringOutput)
}

// The role of the user in the project. One of 'MEMBER', 'PROJECT*DEVELOPER', or 'PROJECT*VIEWER'.
func (o GetProjectMembersMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectMembersMember) string { return v.Role }).(pulumi.StringOutput)
}

// The ID of the user.
func (o GetProjectMembersMemberOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectMembersMember) string { return v.UserId }).(pulumi.StringOutput)
}

// The username of the user.
func (o GetProjectMembersMemberOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectMembersMember) string { return v.Username }).(pulumi.StringOutput)
}

type GetProjectMembersMemberArrayOutput struct{ *pulumi.OutputState }

func (GetProjectMembersMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectMembersMember)(nil)).Elem()
}

func (o GetProjectMembersMemberArrayOutput) ToGetProjectMembersMemberArrayOutput() GetProjectMembersMemberArrayOutput {
	return o
}

func (o GetProjectMembersMemberArrayOutput) ToGetProjectMembersMemberArrayOutputWithContext(ctx context.Context) GetProjectMembersMemberArrayOutput {
	return o
}

func (o GetProjectMembersMemberArrayOutput) Index(i pulumi.IntInput) GetProjectMembersMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectMembersMember {
		return vs[0].([]GetProjectMembersMember)[vs[1].(int)]
	}).(GetProjectMembersMemberOutput)
}

type GetProjectOidcTokenConfig struct {
	// When true, Vercel issued OpenID Connect (OIDC) tokens will be available on the compute environments. See https://vercel.com/docs/security/secure-backend-access/oidc for more information.
	Enabled bool `pulumi:"enabled"`
	// Configures the URL of the `iss` claim. `team` = `https://oidc.vercel.com/[teamSlug]` `global` = `https://oidc.vercel.com`
	IssuerMode string `pulumi:"issuerMode"`
}

// GetProjectOidcTokenConfigInput is an input type that accepts GetProjectOidcTokenConfigArgs and GetProjectOidcTokenConfigOutput values.
// You can construct a concrete instance of `GetProjectOidcTokenConfigInput` via:
//
//	GetProjectOidcTokenConfigArgs{...}
type GetProjectOidcTokenConfigInput interface {
	pulumi.Input

	ToGetProjectOidcTokenConfigOutput() GetProjectOidcTokenConfigOutput
	ToGetProjectOidcTokenConfigOutputWithContext(context.Context) GetProjectOidcTokenConfigOutput
}

type GetProjectOidcTokenConfigArgs struct {
	// When true, Vercel issued OpenID Connect (OIDC) tokens will be available on the compute environments. See https://vercel.com/docs/security/secure-backend-access/oidc for more information.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Configures the URL of the `iss` claim. `team` = `https://oidc.vercel.com/[teamSlug]` `global` = `https://oidc.vercel.com`
	IssuerMode pulumi.StringInput `pulumi:"issuerMode"`
}

func (GetProjectOidcTokenConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectOidcTokenConfig)(nil)).Elem()
}

func (i GetProjectOidcTokenConfigArgs) ToGetProjectOidcTokenConfigOutput() GetProjectOidcTokenConfigOutput {
	return i.ToGetProjectOidcTokenConfigOutputWithContext(context.Background())
}

func (i GetProjectOidcTokenConfigArgs) ToGetProjectOidcTokenConfigOutputWithContext(ctx context.Context) GetProjectOidcTokenConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectOidcTokenConfigOutput)
}

type GetProjectOidcTokenConfigOutput struct{ *pulumi.OutputState }

func (GetProjectOidcTokenConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectOidcTokenConfig)(nil)).Elem()
}

func (o GetProjectOidcTokenConfigOutput) ToGetProjectOidcTokenConfigOutput() GetProjectOidcTokenConfigOutput {
	return o
}

func (o GetProjectOidcTokenConfigOutput) ToGetProjectOidcTokenConfigOutputWithContext(ctx context.Context) GetProjectOidcTokenConfigOutput {
	return o
}

// When true, Vercel issued OpenID Connect (OIDC) tokens will be available on the compute environments. See https://vercel.com/docs/security/secure-backend-access/oidc for more information.
func (o GetProjectOidcTokenConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectOidcTokenConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Configures the URL of the `iss` claim. `team` = `https://oidc.vercel.com/[teamSlug]` `global` = `https://oidc.vercel.com`
func (o GetProjectOidcTokenConfigOutput) IssuerMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectOidcTokenConfig) string { return v.IssuerMode }).(pulumi.StringOutput)
}

type GetProjectOptionsAllowlist struct {
	// The allowed paths for the OPTIONS Allowlist. Incoming requests will bypass Deployment Protection if they have the method `OPTIONS` and **start with** one of the path values.
	Paths []GetProjectOptionsAllowlistPath `pulumi:"paths"`
}

// GetProjectOptionsAllowlistInput is an input type that accepts GetProjectOptionsAllowlistArgs and GetProjectOptionsAllowlistOutput values.
// You can construct a concrete instance of `GetProjectOptionsAllowlistInput` via:
//
//	GetProjectOptionsAllowlistArgs{...}
type GetProjectOptionsAllowlistInput interface {
	pulumi.Input

	ToGetProjectOptionsAllowlistOutput() GetProjectOptionsAllowlistOutput
	ToGetProjectOptionsAllowlistOutputWithContext(context.Context) GetProjectOptionsAllowlistOutput
}

type GetProjectOptionsAllowlistArgs struct {
	// The allowed paths for the OPTIONS Allowlist. Incoming requests will bypass Deployment Protection if they have the method `OPTIONS` and **start with** one of the path values.
	Paths GetProjectOptionsAllowlistPathArrayInput `pulumi:"paths"`
}

func (GetProjectOptionsAllowlistArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectOptionsAllowlist)(nil)).Elem()
}

func (i GetProjectOptionsAllowlistArgs) ToGetProjectOptionsAllowlistOutput() GetProjectOptionsAllowlistOutput {
	return i.ToGetProjectOptionsAllowlistOutputWithContext(context.Background())
}

func (i GetProjectOptionsAllowlistArgs) ToGetProjectOptionsAllowlistOutputWithContext(ctx context.Context) GetProjectOptionsAllowlistOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectOptionsAllowlistOutput)
}

type GetProjectOptionsAllowlistOutput struct{ *pulumi.OutputState }

func (GetProjectOptionsAllowlistOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectOptionsAllowlist)(nil)).Elem()
}

func (o GetProjectOptionsAllowlistOutput) ToGetProjectOptionsAllowlistOutput() GetProjectOptionsAllowlistOutput {
	return o
}

func (o GetProjectOptionsAllowlistOutput) ToGetProjectOptionsAllowlistOutputWithContext(ctx context.Context) GetProjectOptionsAllowlistOutput {
	return o
}

// The allowed paths for the OPTIONS Allowlist. Incoming requests will bypass Deployment Protection if they have the method `OPTIONS` and **start with** one of the path values.
func (o GetProjectOptionsAllowlistOutput) Paths() GetProjectOptionsAllowlistPathArrayOutput {
	return o.ApplyT(func(v GetProjectOptionsAllowlist) []GetProjectOptionsAllowlistPath { return v.Paths }).(GetProjectOptionsAllowlistPathArrayOutput)
}

type GetProjectOptionsAllowlistPath struct {
	Value string `pulumi:"value"`
}

// GetProjectOptionsAllowlistPathInput is an input type that accepts GetProjectOptionsAllowlistPathArgs and GetProjectOptionsAllowlistPathOutput values.
// You can construct a concrete instance of `GetProjectOptionsAllowlistPathInput` via:
//
//	GetProjectOptionsAllowlistPathArgs{...}
type GetProjectOptionsAllowlistPathInput interface {
	pulumi.Input

	ToGetProjectOptionsAllowlistPathOutput() GetProjectOptionsAllowlistPathOutput
	ToGetProjectOptionsAllowlistPathOutputWithContext(context.Context) GetProjectOptionsAllowlistPathOutput
}

type GetProjectOptionsAllowlistPathArgs struct {
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetProjectOptionsAllowlistPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectOptionsAllowlistPath)(nil)).Elem()
}

func (i GetProjectOptionsAllowlistPathArgs) ToGetProjectOptionsAllowlistPathOutput() GetProjectOptionsAllowlistPathOutput {
	return i.ToGetProjectOptionsAllowlistPathOutputWithContext(context.Background())
}

func (i GetProjectOptionsAllowlistPathArgs) ToGetProjectOptionsAllowlistPathOutputWithContext(ctx context.Context) GetProjectOptionsAllowlistPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectOptionsAllowlistPathOutput)
}

// GetProjectOptionsAllowlistPathArrayInput is an input type that accepts GetProjectOptionsAllowlistPathArray and GetProjectOptionsAllowlistPathArrayOutput values.
// You can construct a concrete instance of `GetProjectOptionsAllowlistPathArrayInput` via:
//
//	GetProjectOptionsAllowlistPathArray{ GetProjectOptionsAllowlistPathArgs{...} }
type GetProjectOptionsAllowlistPathArrayInput interface {
	pulumi.Input

	ToGetProjectOptionsAllowlistPathArrayOutput() GetProjectOptionsAllowlistPathArrayOutput
	ToGetProjectOptionsAllowlistPathArrayOutputWithContext(context.Context) GetProjectOptionsAllowlistPathArrayOutput
}

type GetProjectOptionsAllowlistPathArray []GetProjectOptionsAllowlistPathInput

func (GetProjectOptionsAllowlistPathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectOptionsAllowlistPath)(nil)).Elem()
}

func (i GetProjectOptionsAllowlistPathArray) ToGetProjectOptionsAllowlistPathArrayOutput() GetProjectOptionsAllowlistPathArrayOutput {
	return i.ToGetProjectOptionsAllowlistPathArrayOutputWithContext(context.Background())
}

func (i GetProjectOptionsAllowlistPathArray) ToGetProjectOptionsAllowlistPathArrayOutputWithContext(ctx context.Context) GetProjectOptionsAllowlistPathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectOptionsAllowlistPathArrayOutput)
}

type GetProjectOptionsAllowlistPathOutput struct{ *pulumi.OutputState }

func (GetProjectOptionsAllowlistPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectOptionsAllowlistPath)(nil)).Elem()
}

func (o GetProjectOptionsAllowlistPathOutput) ToGetProjectOptionsAllowlistPathOutput() GetProjectOptionsAllowlistPathOutput {
	return o
}

func (o GetProjectOptionsAllowlistPathOutput) ToGetProjectOptionsAllowlistPathOutputWithContext(ctx context.Context) GetProjectOptionsAllowlistPathOutput {
	return o
}

func (o GetProjectOptionsAllowlistPathOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectOptionsAllowlistPath) string { return v.Value }).(pulumi.StringOutput)
}

type GetProjectOptionsAllowlistPathArrayOutput struct{ *pulumi.OutputState }

func (GetProjectOptionsAllowlistPathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectOptionsAllowlistPath)(nil)).Elem()
}

func (o GetProjectOptionsAllowlistPathArrayOutput) ToGetProjectOptionsAllowlistPathArrayOutput() GetProjectOptionsAllowlistPathArrayOutput {
	return o
}

func (o GetProjectOptionsAllowlistPathArrayOutput) ToGetProjectOptionsAllowlistPathArrayOutputWithContext(ctx context.Context) GetProjectOptionsAllowlistPathArrayOutput {
	return o
}

func (o GetProjectOptionsAllowlistPathArrayOutput) Index(i pulumi.IntInput) GetProjectOptionsAllowlistPathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectOptionsAllowlistPath {
		return vs[0].([]GetProjectOptionsAllowlistPath)[vs[1].(int)]
	}).(GetProjectOptionsAllowlistPathOutput)
}

type GetProjectPasswordProtection struct {
	// The deployment environment that will be protected.
	DeploymentType string `pulumi:"deploymentType"`
}

// GetProjectPasswordProtectionInput is an input type that accepts GetProjectPasswordProtectionArgs and GetProjectPasswordProtectionOutput values.
// You can construct a concrete instance of `GetProjectPasswordProtectionInput` via:
//
//	GetProjectPasswordProtectionArgs{...}
type GetProjectPasswordProtectionInput interface {
	pulumi.Input

	ToGetProjectPasswordProtectionOutput() GetProjectPasswordProtectionOutput
	ToGetProjectPasswordProtectionOutputWithContext(context.Context) GetProjectPasswordProtectionOutput
}

type GetProjectPasswordProtectionArgs struct {
	// The deployment environment that will be protected.
	DeploymentType pulumi.StringInput `pulumi:"deploymentType"`
}

func (GetProjectPasswordProtectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectPasswordProtection)(nil)).Elem()
}

func (i GetProjectPasswordProtectionArgs) ToGetProjectPasswordProtectionOutput() GetProjectPasswordProtectionOutput {
	return i.ToGetProjectPasswordProtectionOutputWithContext(context.Background())
}

func (i GetProjectPasswordProtectionArgs) ToGetProjectPasswordProtectionOutputWithContext(ctx context.Context) GetProjectPasswordProtectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectPasswordProtectionOutput)
}

type GetProjectPasswordProtectionOutput struct{ *pulumi.OutputState }

func (GetProjectPasswordProtectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectPasswordProtection)(nil)).Elem()
}

func (o GetProjectPasswordProtectionOutput) ToGetProjectPasswordProtectionOutput() GetProjectPasswordProtectionOutput {
	return o
}

func (o GetProjectPasswordProtectionOutput) ToGetProjectPasswordProtectionOutputWithContext(ctx context.Context) GetProjectPasswordProtectionOutput {
	return o
}

// The deployment environment that will be protected.
func (o GetProjectPasswordProtectionOutput) DeploymentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectPasswordProtection) string { return v.DeploymentType }).(pulumi.StringOutput)
}

type GetProjectResourceConfig struct {
	// Enable fluid compute for your Vercel Functions to automatically manage concurrency and optimize performance. Vercel will handle the defaults to ensure the best experience for your workload.
	Fluid bool `pulumi:"fluid"`
	// The amount of CPU available to your Serverless Functions. Should be one of 'standard_legacy' (0.6vCPU), 'standard' (1vCPU) or 'performance' (1.7vCPUs).
	FunctionDefaultCpuType string `pulumi:"functionDefaultCpuType"`
	// The default timeout for Serverless Functions.
	FunctionDefaultTimeout int `pulumi:"functionDefaultTimeout"`
}

// GetProjectResourceConfigInput is an input type that accepts GetProjectResourceConfigArgs and GetProjectResourceConfigOutput values.
// You can construct a concrete instance of `GetProjectResourceConfigInput` via:
//
//	GetProjectResourceConfigArgs{...}
type GetProjectResourceConfigInput interface {
	pulumi.Input

	ToGetProjectResourceConfigOutput() GetProjectResourceConfigOutput
	ToGetProjectResourceConfigOutputWithContext(context.Context) GetProjectResourceConfigOutput
}

type GetProjectResourceConfigArgs struct {
	// Enable fluid compute for your Vercel Functions to automatically manage concurrency and optimize performance. Vercel will handle the defaults to ensure the best experience for your workload.
	Fluid pulumi.BoolInput `pulumi:"fluid"`
	// The amount of CPU available to your Serverless Functions. Should be one of 'standard_legacy' (0.6vCPU), 'standard' (1vCPU) or 'performance' (1.7vCPUs).
	FunctionDefaultCpuType pulumi.StringInput `pulumi:"functionDefaultCpuType"`
	// The default timeout for Serverless Functions.
	FunctionDefaultTimeout pulumi.IntInput `pulumi:"functionDefaultTimeout"`
}

func (GetProjectResourceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectResourceConfig)(nil)).Elem()
}

func (i GetProjectResourceConfigArgs) ToGetProjectResourceConfigOutput() GetProjectResourceConfigOutput {
	return i.ToGetProjectResourceConfigOutputWithContext(context.Background())
}

func (i GetProjectResourceConfigArgs) ToGetProjectResourceConfigOutputWithContext(ctx context.Context) GetProjectResourceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectResourceConfigOutput)
}

type GetProjectResourceConfigOutput struct{ *pulumi.OutputState }

func (GetProjectResourceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectResourceConfig)(nil)).Elem()
}

func (o GetProjectResourceConfigOutput) ToGetProjectResourceConfigOutput() GetProjectResourceConfigOutput {
	return o
}

func (o GetProjectResourceConfigOutput) ToGetProjectResourceConfigOutputWithContext(ctx context.Context) GetProjectResourceConfigOutput {
	return o
}

// Enable fluid compute for your Vercel Functions to automatically manage concurrency and optimize performance. Vercel will handle the defaults to ensure the best experience for your workload.
func (o GetProjectResourceConfigOutput) Fluid() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectResourceConfig) bool { return v.Fluid }).(pulumi.BoolOutput)
}

// The amount of CPU available to your Serverless Functions. Should be one of 'standard_legacy' (0.6vCPU), 'standard' (1vCPU) or 'performance' (1.7vCPUs).
func (o GetProjectResourceConfigOutput) FunctionDefaultCpuType() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectResourceConfig) string { return v.FunctionDefaultCpuType }).(pulumi.StringOutput)
}

// The default timeout for Serverless Functions.
func (o GetProjectResourceConfigOutput) FunctionDefaultTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectResourceConfig) int { return v.FunctionDefaultTimeout }).(pulumi.IntOutput)
}

type GetProjectTrustedIps struct {
	// The allowed IP addressses and CIDR ranges with optional descriptions.
	Addresses []GetProjectTrustedIpsAddress `pulumi:"addresses"`
	// The deployment environment that will be protected.
	DeploymentType string `pulumi:"deploymentType"`
	// Whether or not Trusted IPs is required or optional to access a deployment.
	ProtectionMode string `pulumi:"protectionMode"`
}

// GetProjectTrustedIpsInput is an input type that accepts GetProjectTrustedIpsArgs and GetProjectTrustedIpsOutput values.
// You can construct a concrete instance of `GetProjectTrustedIpsInput` via:
//
//	GetProjectTrustedIpsArgs{...}
type GetProjectTrustedIpsInput interface {
	pulumi.Input

	ToGetProjectTrustedIpsOutput() GetProjectTrustedIpsOutput
	ToGetProjectTrustedIpsOutputWithContext(context.Context) GetProjectTrustedIpsOutput
}

type GetProjectTrustedIpsArgs struct {
	// The allowed IP addressses and CIDR ranges with optional descriptions.
	Addresses GetProjectTrustedIpsAddressArrayInput `pulumi:"addresses"`
	// The deployment environment that will be protected.
	DeploymentType pulumi.StringInput `pulumi:"deploymentType"`
	// Whether or not Trusted IPs is required or optional to access a deployment.
	ProtectionMode pulumi.StringInput `pulumi:"protectionMode"`
}

func (GetProjectTrustedIpsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectTrustedIps)(nil)).Elem()
}

func (i GetProjectTrustedIpsArgs) ToGetProjectTrustedIpsOutput() GetProjectTrustedIpsOutput {
	return i.ToGetProjectTrustedIpsOutputWithContext(context.Background())
}

func (i GetProjectTrustedIpsArgs) ToGetProjectTrustedIpsOutputWithContext(ctx context.Context) GetProjectTrustedIpsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectTrustedIpsOutput)
}

type GetProjectTrustedIpsOutput struct{ *pulumi.OutputState }

func (GetProjectTrustedIpsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectTrustedIps)(nil)).Elem()
}

func (o GetProjectTrustedIpsOutput) ToGetProjectTrustedIpsOutput() GetProjectTrustedIpsOutput {
	return o
}

func (o GetProjectTrustedIpsOutput) ToGetProjectTrustedIpsOutputWithContext(ctx context.Context) GetProjectTrustedIpsOutput {
	return o
}

// The allowed IP addressses and CIDR ranges with optional descriptions.
func (o GetProjectTrustedIpsOutput) Addresses() GetProjectTrustedIpsAddressArrayOutput {
	return o.ApplyT(func(v GetProjectTrustedIps) []GetProjectTrustedIpsAddress { return v.Addresses }).(GetProjectTrustedIpsAddressArrayOutput)
}

// The deployment environment that will be protected.
func (o GetProjectTrustedIpsOutput) DeploymentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectTrustedIps) string { return v.DeploymentType }).(pulumi.StringOutput)
}

// Whether or not Trusted IPs is required or optional to access a deployment.
func (o GetProjectTrustedIpsOutput) ProtectionMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectTrustedIps) string { return v.ProtectionMode }).(pulumi.StringOutput)
}

type GetProjectTrustedIpsAddress struct {
	Note  string `pulumi:"note"`
	Value string `pulumi:"value"`
}

// GetProjectTrustedIpsAddressInput is an input type that accepts GetProjectTrustedIpsAddressArgs and GetProjectTrustedIpsAddressOutput values.
// You can construct a concrete instance of `GetProjectTrustedIpsAddressInput` via:
//
//	GetProjectTrustedIpsAddressArgs{...}
type GetProjectTrustedIpsAddressInput interface {
	pulumi.Input

	ToGetProjectTrustedIpsAddressOutput() GetProjectTrustedIpsAddressOutput
	ToGetProjectTrustedIpsAddressOutputWithContext(context.Context) GetProjectTrustedIpsAddressOutput
}

type GetProjectTrustedIpsAddressArgs struct {
	Note  pulumi.StringInput `pulumi:"note"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetProjectTrustedIpsAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectTrustedIpsAddress)(nil)).Elem()
}

func (i GetProjectTrustedIpsAddressArgs) ToGetProjectTrustedIpsAddressOutput() GetProjectTrustedIpsAddressOutput {
	return i.ToGetProjectTrustedIpsAddressOutputWithContext(context.Background())
}

func (i GetProjectTrustedIpsAddressArgs) ToGetProjectTrustedIpsAddressOutputWithContext(ctx context.Context) GetProjectTrustedIpsAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectTrustedIpsAddressOutput)
}

// GetProjectTrustedIpsAddressArrayInput is an input type that accepts GetProjectTrustedIpsAddressArray and GetProjectTrustedIpsAddressArrayOutput values.
// You can construct a concrete instance of `GetProjectTrustedIpsAddressArrayInput` via:
//
//	GetProjectTrustedIpsAddressArray{ GetProjectTrustedIpsAddressArgs{...} }
type GetProjectTrustedIpsAddressArrayInput interface {
	pulumi.Input

	ToGetProjectTrustedIpsAddressArrayOutput() GetProjectTrustedIpsAddressArrayOutput
	ToGetProjectTrustedIpsAddressArrayOutputWithContext(context.Context) GetProjectTrustedIpsAddressArrayOutput
}

type GetProjectTrustedIpsAddressArray []GetProjectTrustedIpsAddressInput

func (GetProjectTrustedIpsAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectTrustedIpsAddress)(nil)).Elem()
}

func (i GetProjectTrustedIpsAddressArray) ToGetProjectTrustedIpsAddressArrayOutput() GetProjectTrustedIpsAddressArrayOutput {
	return i.ToGetProjectTrustedIpsAddressArrayOutputWithContext(context.Background())
}

func (i GetProjectTrustedIpsAddressArray) ToGetProjectTrustedIpsAddressArrayOutputWithContext(ctx context.Context) GetProjectTrustedIpsAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectTrustedIpsAddressArrayOutput)
}

type GetProjectTrustedIpsAddressOutput struct{ *pulumi.OutputState }

func (GetProjectTrustedIpsAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectTrustedIpsAddress)(nil)).Elem()
}

func (o GetProjectTrustedIpsAddressOutput) ToGetProjectTrustedIpsAddressOutput() GetProjectTrustedIpsAddressOutput {
	return o
}

func (o GetProjectTrustedIpsAddressOutput) ToGetProjectTrustedIpsAddressOutputWithContext(ctx context.Context) GetProjectTrustedIpsAddressOutput {
	return o
}

func (o GetProjectTrustedIpsAddressOutput) Note() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectTrustedIpsAddress) string { return v.Note }).(pulumi.StringOutput)
}

func (o GetProjectTrustedIpsAddressOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectTrustedIpsAddress) string { return v.Value }).(pulumi.StringOutput)
}

type GetProjectTrustedIpsAddressArrayOutput struct{ *pulumi.OutputState }

func (GetProjectTrustedIpsAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectTrustedIpsAddress)(nil)).Elem()
}

func (o GetProjectTrustedIpsAddressArrayOutput) ToGetProjectTrustedIpsAddressArrayOutput() GetProjectTrustedIpsAddressArrayOutput {
	return o
}

func (o GetProjectTrustedIpsAddressArrayOutput) ToGetProjectTrustedIpsAddressArrayOutputWithContext(ctx context.Context) GetProjectTrustedIpsAddressArrayOutput {
	return o
}

func (o GetProjectTrustedIpsAddressArrayOutput) Index(i pulumi.IntInput) GetProjectTrustedIpsAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectTrustedIpsAddress {
		return vs[0].([]GetProjectTrustedIpsAddress)[vs[1].(int)]
	}).(GetProjectTrustedIpsAddressOutput)
}

type GetProjectVercelAuthentication struct {
	// The deployment environment that will be protected.
	DeploymentType string `pulumi:"deploymentType"`
}

// GetProjectVercelAuthenticationInput is an input type that accepts GetProjectVercelAuthenticationArgs and GetProjectVercelAuthenticationOutput values.
// You can construct a concrete instance of `GetProjectVercelAuthenticationInput` via:
//
//	GetProjectVercelAuthenticationArgs{...}
type GetProjectVercelAuthenticationInput interface {
	pulumi.Input

	ToGetProjectVercelAuthenticationOutput() GetProjectVercelAuthenticationOutput
	ToGetProjectVercelAuthenticationOutputWithContext(context.Context) GetProjectVercelAuthenticationOutput
}

type GetProjectVercelAuthenticationArgs struct {
	// The deployment environment that will be protected.
	DeploymentType pulumi.StringInput `pulumi:"deploymentType"`
}

func (GetProjectVercelAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectVercelAuthentication)(nil)).Elem()
}

func (i GetProjectVercelAuthenticationArgs) ToGetProjectVercelAuthenticationOutput() GetProjectVercelAuthenticationOutput {
	return i.ToGetProjectVercelAuthenticationOutputWithContext(context.Background())
}

func (i GetProjectVercelAuthenticationArgs) ToGetProjectVercelAuthenticationOutputWithContext(ctx context.Context) GetProjectVercelAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectVercelAuthenticationOutput)
}

type GetProjectVercelAuthenticationOutput struct{ *pulumi.OutputState }

func (GetProjectVercelAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectVercelAuthentication)(nil)).Elem()
}

func (o GetProjectVercelAuthenticationOutput) ToGetProjectVercelAuthenticationOutput() GetProjectVercelAuthenticationOutput {
	return o
}

func (o GetProjectVercelAuthenticationOutput) ToGetProjectVercelAuthenticationOutputWithContext(ctx context.Context) GetProjectVercelAuthenticationOutput {
	return o
}

// The deployment environment that will be protected.
func (o GetProjectVercelAuthenticationOutput) DeploymentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectVercelAuthentication) string { return v.DeploymentType }).(pulumi.StringOutput)
}

type GetTeamConfigRemoteCaching struct {
	// Indicates if Remote Caching is enabled.
	Enabled bool `pulumi:"enabled"`
}

// GetTeamConfigRemoteCachingInput is an input type that accepts GetTeamConfigRemoteCachingArgs and GetTeamConfigRemoteCachingOutput values.
// You can construct a concrete instance of `GetTeamConfigRemoteCachingInput` via:
//
//	GetTeamConfigRemoteCachingArgs{...}
type GetTeamConfigRemoteCachingInput interface {
	pulumi.Input

	ToGetTeamConfigRemoteCachingOutput() GetTeamConfigRemoteCachingOutput
	ToGetTeamConfigRemoteCachingOutputWithContext(context.Context) GetTeamConfigRemoteCachingOutput
}

type GetTeamConfigRemoteCachingArgs struct {
	// Indicates if Remote Caching is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetTeamConfigRemoteCachingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTeamConfigRemoteCaching)(nil)).Elem()
}

func (i GetTeamConfigRemoteCachingArgs) ToGetTeamConfigRemoteCachingOutput() GetTeamConfigRemoteCachingOutput {
	return i.ToGetTeamConfigRemoteCachingOutputWithContext(context.Background())
}

func (i GetTeamConfigRemoteCachingArgs) ToGetTeamConfigRemoteCachingOutputWithContext(ctx context.Context) GetTeamConfigRemoteCachingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTeamConfigRemoteCachingOutput)
}

type GetTeamConfigRemoteCachingOutput struct{ *pulumi.OutputState }

func (GetTeamConfigRemoteCachingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTeamConfigRemoteCaching)(nil)).Elem()
}

func (o GetTeamConfigRemoteCachingOutput) ToGetTeamConfigRemoteCachingOutput() GetTeamConfigRemoteCachingOutput {
	return o
}

func (o GetTeamConfigRemoteCachingOutput) ToGetTeamConfigRemoteCachingOutputWithContext(ctx context.Context) GetTeamConfigRemoteCachingOutput {
	return o
}

// Indicates if Remote Caching is enabled.
func (o GetTeamConfigRemoteCachingOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTeamConfigRemoteCaching) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetTeamConfigSaml struct {
	// Indicates if SAML is enforced for the team.
	Enforced bool `pulumi:"enforced"`
	// Directory groups to role or access group mappings. For each directory group, either a role or access group id is specified.
	Roles map[string]GetTeamConfigSamlRoles `pulumi:"roles"`
}

// GetTeamConfigSamlInput is an input type that accepts GetTeamConfigSamlArgs and GetTeamConfigSamlOutput values.
// You can construct a concrete instance of `GetTeamConfigSamlInput` via:
//
//	GetTeamConfigSamlArgs{...}
type GetTeamConfigSamlInput interface {
	pulumi.Input

	ToGetTeamConfigSamlOutput() GetTeamConfigSamlOutput
	ToGetTeamConfigSamlOutputWithContext(context.Context) GetTeamConfigSamlOutput
}

type GetTeamConfigSamlArgs struct {
	// Indicates if SAML is enforced for the team.
	Enforced pulumi.BoolInput `pulumi:"enforced"`
	// Directory groups to role or access group mappings. For each directory group, either a role or access group id is specified.
	Roles GetTeamConfigSamlRolesMapInput `pulumi:"roles"`
}

func (GetTeamConfigSamlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTeamConfigSaml)(nil)).Elem()
}

func (i GetTeamConfigSamlArgs) ToGetTeamConfigSamlOutput() GetTeamConfigSamlOutput {
	return i.ToGetTeamConfigSamlOutputWithContext(context.Background())
}

func (i GetTeamConfigSamlArgs) ToGetTeamConfigSamlOutputWithContext(ctx context.Context) GetTeamConfigSamlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTeamConfigSamlOutput)
}

type GetTeamConfigSamlOutput struct{ *pulumi.OutputState }

func (GetTeamConfigSamlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTeamConfigSaml)(nil)).Elem()
}

func (o GetTeamConfigSamlOutput) ToGetTeamConfigSamlOutput() GetTeamConfigSamlOutput {
	return o
}

func (o GetTeamConfigSamlOutput) ToGetTeamConfigSamlOutputWithContext(ctx context.Context) GetTeamConfigSamlOutput {
	return o
}

// Indicates if SAML is enforced for the team.
func (o GetTeamConfigSamlOutput) Enforced() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTeamConfigSaml) bool { return v.Enforced }).(pulumi.BoolOutput)
}

// Directory groups to role or access group mappings. For each directory group, either a role or access group id is specified.
func (o GetTeamConfigSamlOutput) Roles() GetTeamConfigSamlRolesMapOutput {
	return o.ApplyT(func(v GetTeamConfigSaml) map[string]GetTeamConfigSamlRoles { return v.Roles }).(GetTeamConfigSamlRolesMapOutput)
}

type GetTeamConfigSamlRoles struct {
	// The access group the assign is assigned to.
	AccessGroupId string `pulumi:"accessGroupId"`
	// The team level role the user is assigned. One of 'MEMBER', 'OWNER', 'VIEWER', 'DEVELOPER', 'BILLING' or 'CONTRIBUTOR'.
	Role string `pulumi:"role"`
}

// GetTeamConfigSamlRolesInput is an input type that accepts GetTeamConfigSamlRolesArgs and GetTeamConfigSamlRolesOutput values.
// You can construct a concrete instance of `GetTeamConfigSamlRolesInput` via:
//
//	GetTeamConfigSamlRolesArgs{...}
type GetTeamConfigSamlRolesInput interface {
	pulumi.Input

	ToGetTeamConfigSamlRolesOutput() GetTeamConfigSamlRolesOutput
	ToGetTeamConfigSamlRolesOutputWithContext(context.Context) GetTeamConfigSamlRolesOutput
}

type GetTeamConfigSamlRolesArgs struct {
	// The access group the assign is assigned to.
	AccessGroupId pulumi.StringInput `pulumi:"accessGroupId"`
	// The team level role the user is assigned. One of 'MEMBER', 'OWNER', 'VIEWER', 'DEVELOPER', 'BILLING' or 'CONTRIBUTOR'.
	Role pulumi.StringInput `pulumi:"role"`
}

func (GetTeamConfigSamlRolesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTeamConfigSamlRoles)(nil)).Elem()
}

func (i GetTeamConfigSamlRolesArgs) ToGetTeamConfigSamlRolesOutput() GetTeamConfigSamlRolesOutput {
	return i.ToGetTeamConfigSamlRolesOutputWithContext(context.Background())
}

func (i GetTeamConfigSamlRolesArgs) ToGetTeamConfigSamlRolesOutputWithContext(ctx context.Context) GetTeamConfigSamlRolesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTeamConfigSamlRolesOutput)
}

// GetTeamConfigSamlRolesMapInput is an input type that accepts GetTeamConfigSamlRolesMap and GetTeamConfigSamlRolesMapOutput values.
// You can construct a concrete instance of `GetTeamConfigSamlRolesMapInput` via:
//
//	GetTeamConfigSamlRolesMap{ "key": GetTeamConfigSamlRolesArgs{...} }
type GetTeamConfigSamlRolesMapInput interface {
	pulumi.Input

	ToGetTeamConfigSamlRolesMapOutput() GetTeamConfigSamlRolesMapOutput
	ToGetTeamConfigSamlRolesMapOutputWithContext(context.Context) GetTeamConfigSamlRolesMapOutput
}

type GetTeamConfigSamlRolesMap map[string]GetTeamConfigSamlRolesInput

func (GetTeamConfigSamlRolesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetTeamConfigSamlRoles)(nil)).Elem()
}

func (i GetTeamConfigSamlRolesMap) ToGetTeamConfigSamlRolesMapOutput() GetTeamConfigSamlRolesMapOutput {
	return i.ToGetTeamConfigSamlRolesMapOutputWithContext(context.Background())
}

func (i GetTeamConfigSamlRolesMap) ToGetTeamConfigSamlRolesMapOutputWithContext(ctx context.Context) GetTeamConfigSamlRolesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTeamConfigSamlRolesMapOutput)
}

type GetTeamConfigSamlRolesOutput struct{ *pulumi.OutputState }

func (GetTeamConfigSamlRolesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTeamConfigSamlRoles)(nil)).Elem()
}

func (o GetTeamConfigSamlRolesOutput) ToGetTeamConfigSamlRolesOutput() GetTeamConfigSamlRolesOutput {
	return o
}

func (o GetTeamConfigSamlRolesOutput) ToGetTeamConfigSamlRolesOutputWithContext(ctx context.Context) GetTeamConfigSamlRolesOutput {
	return o
}

// The access group the assign is assigned to.
func (o GetTeamConfigSamlRolesOutput) AccessGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTeamConfigSamlRoles) string { return v.AccessGroupId }).(pulumi.StringOutput)
}

// The team level role the user is assigned. One of 'MEMBER', 'OWNER', 'VIEWER', 'DEVELOPER', 'BILLING' or 'CONTRIBUTOR'.
func (o GetTeamConfigSamlRolesOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetTeamConfigSamlRoles) string { return v.Role }).(pulumi.StringOutput)
}

type GetTeamConfigSamlRolesMapOutput struct{ *pulumi.OutputState }

func (GetTeamConfigSamlRolesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetTeamConfigSamlRoles)(nil)).Elem()
}

func (o GetTeamConfigSamlRolesMapOutput) ToGetTeamConfigSamlRolesMapOutput() GetTeamConfigSamlRolesMapOutput {
	return o
}

func (o GetTeamConfigSamlRolesMapOutput) ToGetTeamConfigSamlRolesMapOutputWithContext(ctx context.Context) GetTeamConfigSamlRolesMapOutput {
	return o
}

func (o GetTeamConfigSamlRolesMapOutput) MapIndex(k pulumi.StringInput) GetTeamConfigSamlRolesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GetTeamConfigSamlRoles {
		return vs[0].(map[string]GetTeamConfigSamlRoles)[vs[1].(string)]
	}).(GetTeamConfigSamlRolesOutput)
}

type GetTeamMemberProject struct {
	// The ID of the project that the user should be granted access to.
	ProjectId string `pulumi:"projectId"`
	// The role that the user should have in the project.
	Role string `pulumi:"role"`
}

// GetTeamMemberProjectInput is an input type that accepts GetTeamMemberProjectArgs and GetTeamMemberProjectOutput values.
// You can construct a concrete instance of `GetTeamMemberProjectInput` via:
//
//	GetTeamMemberProjectArgs{...}
type GetTeamMemberProjectInput interface {
	pulumi.Input

	ToGetTeamMemberProjectOutput() GetTeamMemberProjectOutput
	ToGetTeamMemberProjectOutputWithContext(context.Context) GetTeamMemberProjectOutput
}

type GetTeamMemberProjectArgs struct {
	// The ID of the project that the user should be granted access to.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// The role that the user should have in the project.
	Role pulumi.StringInput `pulumi:"role"`
}

func (GetTeamMemberProjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTeamMemberProject)(nil)).Elem()
}

func (i GetTeamMemberProjectArgs) ToGetTeamMemberProjectOutput() GetTeamMemberProjectOutput {
	return i.ToGetTeamMemberProjectOutputWithContext(context.Background())
}

func (i GetTeamMemberProjectArgs) ToGetTeamMemberProjectOutputWithContext(ctx context.Context) GetTeamMemberProjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTeamMemberProjectOutput)
}

// GetTeamMemberProjectArrayInput is an input type that accepts GetTeamMemberProjectArray and GetTeamMemberProjectArrayOutput values.
// You can construct a concrete instance of `GetTeamMemberProjectArrayInput` via:
//
//	GetTeamMemberProjectArray{ GetTeamMemberProjectArgs{...} }
type GetTeamMemberProjectArrayInput interface {
	pulumi.Input

	ToGetTeamMemberProjectArrayOutput() GetTeamMemberProjectArrayOutput
	ToGetTeamMemberProjectArrayOutputWithContext(context.Context) GetTeamMemberProjectArrayOutput
}

type GetTeamMemberProjectArray []GetTeamMemberProjectInput

func (GetTeamMemberProjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTeamMemberProject)(nil)).Elem()
}

func (i GetTeamMemberProjectArray) ToGetTeamMemberProjectArrayOutput() GetTeamMemberProjectArrayOutput {
	return i.ToGetTeamMemberProjectArrayOutputWithContext(context.Background())
}

func (i GetTeamMemberProjectArray) ToGetTeamMemberProjectArrayOutputWithContext(ctx context.Context) GetTeamMemberProjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTeamMemberProjectArrayOutput)
}

type GetTeamMemberProjectOutput struct{ *pulumi.OutputState }

func (GetTeamMemberProjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTeamMemberProject)(nil)).Elem()
}

func (o GetTeamMemberProjectOutput) ToGetTeamMemberProjectOutput() GetTeamMemberProjectOutput {
	return o
}

func (o GetTeamMemberProjectOutput) ToGetTeamMemberProjectOutputWithContext(ctx context.Context) GetTeamMemberProjectOutput {
	return o
}

// The ID of the project that the user should be granted access to.
func (o GetTeamMemberProjectOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTeamMemberProject) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The role that the user should have in the project.
func (o GetTeamMemberProjectOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetTeamMemberProject) string { return v.Role }).(pulumi.StringOutput)
}

type GetTeamMemberProjectArrayOutput struct{ *pulumi.OutputState }

func (GetTeamMemberProjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTeamMemberProject)(nil)).Elem()
}

func (o GetTeamMemberProjectArrayOutput) ToGetTeamMemberProjectArrayOutput() GetTeamMemberProjectArrayOutput {
	return o
}

func (o GetTeamMemberProjectArrayOutput) ToGetTeamMemberProjectArrayOutputWithContext(ctx context.Context) GetTeamMemberProjectArrayOutput {
	return o
}

func (o GetTeamMemberProjectArrayOutput) Index(i pulumi.IntInput) GetTeamMemberProjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTeamMemberProject {
		return vs[0].([]GetTeamMemberProject)[vs[1].(int)]
	}).(GetTeamMemberProjectOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomEnvironmentBranchTrackingInput)(nil)).Elem(), CustomEnvironmentBranchTrackingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomEnvironmentBranchTrackingPtrInput)(nil)).Elem(), CustomEnvironmentBranchTrackingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentProjectSettingsInput)(nil)).Elem(), DeploymentProjectSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentProjectSettingsPtrInput)(nil)).Elem(), DeploymentProjectSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DnsRecordSrvInput)(nil)).Elem(), DnsRecordSrvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DnsRecordSrvPtrInput)(nil)).Elem(), DnsRecordSrvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigIpRulesInput)(nil)).Elem(), FirewallConfigIpRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigIpRulesPtrInput)(nil)).Elem(), FirewallConfigIpRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigIpRulesRuleInput)(nil)).Elem(), FirewallConfigIpRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigIpRulesRuleArrayInput)(nil)).Elem(), FirewallConfigIpRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigManagedRulesetsInput)(nil)).Elem(), FirewallConfigManagedRulesetsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigManagedRulesetsPtrInput)(nil)).Elem(), FirewallConfigManagedRulesetsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigManagedRulesetsBotFilterInput)(nil)).Elem(), FirewallConfigManagedRulesetsBotFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigManagedRulesetsBotFilterPtrInput)(nil)).Elem(), FirewallConfigManagedRulesetsBotFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspInput)(nil)).Elem(), FirewallConfigManagedRulesetsOwaspArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspPtrInput)(nil)).Elem(), FirewallConfigManagedRulesetsOwaspArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspGenInput)(nil)).Elem(), FirewallConfigManagedRulesetsOwaspGenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspGenPtrInput)(nil)).Elem(), FirewallConfigManagedRulesetsOwaspGenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspJavaInput)(nil)).Elem(), FirewallConfigManagedRulesetsOwaspJavaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspJavaPtrInput)(nil)).Elem(), FirewallConfigManagedRulesetsOwaspJavaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspLfiInput)(nil)).Elem(), FirewallConfigManagedRulesetsOwaspLfiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspLfiPtrInput)(nil)).Elem(), FirewallConfigManagedRulesetsOwaspLfiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspMaInput)(nil)).Elem(), FirewallConfigManagedRulesetsOwaspMaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspMaPtrInput)(nil)).Elem(), FirewallConfigManagedRulesetsOwaspMaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspPhpInput)(nil)).Elem(), FirewallConfigManagedRulesetsOwaspPhpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspPhpPtrInput)(nil)).Elem(), FirewallConfigManagedRulesetsOwaspPhpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspRceInput)(nil)).Elem(), FirewallConfigManagedRulesetsOwaspRceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspRcePtrInput)(nil)).Elem(), FirewallConfigManagedRulesetsOwaspRceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspRfiInput)(nil)).Elem(), FirewallConfigManagedRulesetsOwaspRfiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspRfiPtrInput)(nil)).Elem(), FirewallConfigManagedRulesetsOwaspRfiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspSdInput)(nil)).Elem(), FirewallConfigManagedRulesetsOwaspSdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspSdPtrInput)(nil)).Elem(), FirewallConfigManagedRulesetsOwaspSdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspSqliInput)(nil)).Elem(), FirewallConfigManagedRulesetsOwaspSqliArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspSqliPtrInput)(nil)).Elem(), FirewallConfigManagedRulesetsOwaspSqliArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspXssInput)(nil)).Elem(), FirewallConfigManagedRulesetsOwaspXssArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigManagedRulesetsOwaspXssPtrInput)(nil)).Elem(), FirewallConfigManagedRulesetsOwaspXssArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigRulesInput)(nil)).Elem(), FirewallConfigRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigRulesPtrInput)(nil)).Elem(), FirewallConfigRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigRulesRuleInput)(nil)).Elem(), FirewallConfigRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigRulesRuleArrayInput)(nil)).Elem(), FirewallConfigRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigRulesRuleActionInput)(nil)).Elem(), FirewallConfigRulesRuleActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigRulesRuleActionRateLimitInput)(nil)).Elem(), FirewallConfigRulesRuleActionRateLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigRulesRuleActionRateLimitPtrInput)(nil)).Elem(), FirewallConfigRulesRuleActionRateLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigRulesRuleActionRedirectInput)(nil)).Elem(), FirewallConfigRulesRuleActionRedirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigRulesRuleActionRedirectPtrInput)(nil)).Elem(), FirewallConfigRulesRuleActionRedirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigRulesRuleConditionGroupInput)(nil)).Elem(), FirewallConfigRulesRuleConditionGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigRulesRuleConditionGroupArrayInput)(nil)).Elem(), FirewallConfigRulesRuleConditionGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigRulesRuleConditionGroupConditionInput)(nil)).Elem(), FirewallConfigRulesRuleConditionGroupConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallConfigRulesRuleConditionGroupConditionArrayInput)(nil)).Elem(), FirewallConfigRulesRuleConditionGroupConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MicrofrontendGroupDefaultAppInput)(nil)).Elem(), MicrofrontendGroupDefaultAppArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MicrofrontendGroupDefaultAppPtrInput)(nil)).Elem(), MicrofrontendGroupDefaultAppArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectEnvironmentInput)(nil)).Elem(), ProjectEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectEnvironmentArrayInput)(nil)).Elem(), ProjectEnvironmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectEnvironmentVariablesVariableInput)(nil)).Elem(), ProjectEnvironmentVariablesVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectEnvironmentVariablesVariableArrayInput)(nil)).Elem(), ProjectEnvironmentVariablesVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectGitCommentsInput)(nil)).Elem(), ProjectGitCommentsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectGitCommentsPtrInput)(nil)).Elem(), ProjectGitCommentsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectGitRepositoryInput)(nil)).Elem(), ProjectGitRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectGitRepositoryPtrInput)(nil)).Elem(), ProjectGitRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectGitRepositoryDeployHookInput)(nil)).Elem(), ProjectGitRepositoryDeployHookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectGitRepositoryDeployHookArrayInput)(nil)).Elem(), ProjectGitRepositoryDeployHookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectMembersMemberInput)(nil)).Elem(), ProjectMembersMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectMembersMemberArrayInput)(nil)).Elem(), ProjectMembersMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectOidcTokenConfigInput)(nil)).Elem(), ProjectOidcTokenConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectOidcTokenConfigPtrInput)(nil)).Elem(), ProjectOidcTokenConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectOptionsAllowlistInput)(nil)).Elem(), ProjectOptionsAllowlistArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectOptionsAllowlistPtrInput)(nil)).Elem(), ProjectOptionsAllowlistArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectOptionsAllowlistPathInput)(nil)).Elem(), ProjectOptionsAllowlistPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectOptionsAllowlistPathArrayInput)(nil)).Elem(), ProjectOptionsAllowlistPathArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectPasswordProtectionInput)(nil)).Elem(), ProjectPasswordProtectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectPasswordProtectionPtrInput)(nil)).Elem(), ProjectPasswordProtectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectResourceConfigInput)(nil)).Elem(), ProjectResourceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectResourceConfigPtrInput)(nil)).Elem(), ProjectResourceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectTrustedIpsInput)(nil)).Elem(), ProjectTrustedIpsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectTrustedIpsPtrInput)(nil)).Elem(), ProjectTrustedIpsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectTrustedIpsAddressInput)(nil)).Elem(), ProjectTrustedIpsAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectTrustedIpsAddressArrayInput)(nil)).Elem(), ProjectTrustedIpsAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectVercelAuthenticationInput)(nil)).Elem(), ProjectVercelAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectVercelAuthenticationPtrInput)(nil)).Elem(), ProjectVercelAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TeamConfigRemoteCachingInput)(nil)).Elem(), TeamConfigRemoteCachingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TeamConfigRemoteCachingPtrInput)(nil)).Elem(), TeamConfigRemoteCachingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TeamConfigSamlInput)(nil)).Elem(), TeamConfigSamlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TeamConfigSamlPtrInput)(nil)).Elem(), TeamConfigSamlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TeamConfigSamlRolesInput)(nil)).Elem(), TeamConfigSamlRolesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TeamConfigSamlRolesMapInput)(nil)).Elem(), TeamConfigSamlRolesMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*TeamMemberProjectInput)(nil)).Elem(), TeamMemberProjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TeamMemberProjectArrayInput)(nil)).Elem(), TeamMemberProjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomEnvironmentBranchTrackingInput)(nil)).Elem(), GetCustomEnvironmentBranchTrackingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMicrofrontendGroupDefaultAppInput)(nil)).Elem(), GetMicrofrontendGroupDefaultAppArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectEnvironmentInput)(nil)).Elem(), GetProjectEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectEnvironmentArrayInput)(nil)).Elem(), GetProjectEnvironmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectGitCommentsInput)(nil)).Elem(), GetProjectGitCommentsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectGitRepositoryInput)(nil)).Elem(), GetProjectGitRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectGitRepositoryDeployHookInput)(nil)).Elem(), GetProjectGitRepositoryDeployHookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectGitRepositoryDeployHookArrayInput)(nil)).Elem(), GetProjectGitRepositoryDeployHookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectMembersMemberInput)(nil)).Elem(), GetProjectMembersMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectMembersMemberArrayInput)(nil)).Elem(), GetProjectMembersMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectOidcTokenConfigInput)(nil)).Elem(), GetProjectOidcTokenConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectOptionsAllowlistInput)(nil)).Elem(), GetProjectOptionsAllowlistArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectOptionsAllowlistPathInput)(nil)).Elem(), GetProjectOptionsAllowlistPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectOptionsAllowlistPathArrayInput)(nil)).Elem(), GetProjectOptionsAllowlistPathArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectPasswordProtectionInput)(nil)).Elem(), GetProjectPasswordProtectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectResourceConfigInput)(nil)).Elem(), GetProjectResourceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectTrustedIpsInput)(nil)).Elem(), GetProjectTrustedIpsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectTrustedIpsAddressInput)(nil)).Elem(), GetProjectTrustedIpsAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectTrustedIpsAddressArrayInput)(nil)).Elem(), GetProjectTrustedIpsAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectVercelAuthenticationInput)(nil)).Elem(), GetProjectVercelAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTeamConfigRemoteCachingInput)(nil)).Elem(), GetTeamConfigRemoteCachingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTeamConfigSamlInput)(nil)).Elem(), GetTeamConfigSamlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTeamConfigSamlRolesInput)(nil)).Elem(), GetTeamConfigSamlRolesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTeamConfigSamlRolesMapInput)(nil)).Elem(), GetTeamConfigSamlRolesMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTeamMemberProjectInput)(nil)).Elem(), GetTeamMemberProjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTeamMemberProjectArrayInput)(nil)).Elem(), GetTeamMemberProjectArray{})
	pulumi.RegisterOutputType(CustomEnvironmentBranchTrackingOutput{})
	pulumi.RegisterOutputType(CustomEnvironmentBranchTrackingPtrOutput{})
	pulumi.RegisterOutputType(DeploymentProjectSettingsOutput{})
	pulumi.RegisterOutputType(DeploymentProjectSettingsPtrOutput{})
	pulumi.RegisterOutputType(DnsRecordSrvOutput{})
	pulumi.RegisterOutputType(DnsRecordSrvPtrOutput{})
	pulumi.RegisterOutputType(FirewallConfigIpRulesOutput{})
	pulumi.RegisterOutputType(FirewallConfigIpRulesPtrOutput{})
	pulumi.RegisterOutputType(FirewallConfigIpRulesRuleOutput{})
	pulumi.RegisterOutputType(FirewallConfigIpRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(FirewallConfigManagedRulesetsOutput{})
	pulumi.RegisterOutputType(FirewallConfigManagedRulesetsPtrOutput{})
	pulumi.RegisterOutputType(FirewallConfigManagedRulesetsBotFilterOutput{})
	pulumi.RegisterOutputType(FirewallConfigManagedRulesetsBotFilterPtrOutput{})
	pulumi.RegisterOutputType(FirewallConfigManagedRulesetsOwaspOutput{})
	pulumi.RegisterOutputType(FirewallConfigManagedRulesetsOwaspPtrOutput{})
	pulumi.RegisterOutputType(FirewallConfigManagedRulesetsOwaspGenOutput{})
	pulumi.RegisterOutputType(FirewallConfigManagedRulesetsOwaspGenPtrOutput{})
	pulumi.RegisterOutputType(FirewallConfigManagedRulesetsOwaspJavaOutput{})
	pulumi.RegisterOutputType(FirewallConfigManagedRulesetsOwaspJavaPtrOutput{})
	pulumi.RegisterOutputType(FirewallConfigManagedRulesetsOwaspLfiOutput{})
	pulumi.RegisterOutputType(FirewallConfigManagedRulesetsOwaspLfiPtrOutput{})
	pulumi.RegisterOutputType(FirewallConfigManagedRulesetsOwaspMaOutput{})
	pulumi.RegisterOutputType(FirewallConfigManagedRulesetsOwaspMaPtrOutput{})
	pulumi.RegisterOutputType(FirewallConfigManagedRulesetsOwaspPhpOutput{})
	pulumi.RegisterOutputType(FirewallConfigManagedRulesetsOwaspPhpPtrOutput{})
	pulumi.RegisterOutputType(FirewallConfigManagedRulesetsOwaspRceOutput{})
	pulumi.RegisterOutputType(FirewallConfigManagedRulesetsOwaspRcePtrOutput{})
	pulumi.RegisterOutputType(FirewallConfigManagedRulesetsOwaspRfiOutput{})
	pulumi.RegisterOutputType(FirewallConfigManagedRulesetsOwaspRfiPtrOutput{})
	pulumi.RegisterOutputType(FirewallConfigManagedRulesetsOwaspSdOutput{})
	pulumi.RegisterOutputType(FirewallConfigManagedRulesetsOwaspSdPtrOutput{})
	pulumi.RegisterOutputType(FirewallConfigManagedRulesetsOwaspSqliOutput{})
	pulumi.RegisterOutputType(FirewallConfigManagedRulesetsOwaspSqliPtrOutput{})
	pulumi.RegisterOutputType(FirewallConfigManagedRulesetsOwaspXssOutput{})
	pulumi.RegisterOutputType(FirewallConfigManagedRulesetsOwaspXssPtrOutput{})
	pulumi.RegisterOutputType(FirewallConfigRulesOutput{})
	pulumi.RegisterOutputType(FirewallConfigRulesPtrOutput{})
	pulumi.RegisterOutputType(FirewallConfigRulesRuleOutput{})
	pulumi.RegisterOutputType(FirewallConfigRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(FirewallConfigRulesRuleActionOutput{})
	pulumi.RegisterOutputType(FirewallConfigRulesRuleActionRateLimitOutput{})
	pulumi.RegisterOutputType(FirewallConfigRulesRuleActionRateLimitPtrOutput{})
	pulumi.RegisterOutputType(FirewallConfigRulesRuleActionRedirectOutput{})
	pulumi.RegisterOutputType(FirewallConfigRulesRuleActionRedirectPtrOutput{})
	pulumi.RegisterOutputType(FirewallConfigRulesRuleConditionGroupOutput{})
	pulumi.RegisterOutputType(FirewallConfigRulesRuleConditionGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallConfigRulesRuleConditionGroupConditionOutput{})
	pulumi.RegisterOutputType(FirewallConfigRulesRuleConditionGroupConditionArrayOutput{})
	pulumi.RegisterOutputType(MicrofrontendGroupDefaultAppOutput{})
	pulumi.RegisterOutputType(MicrofrontendGroupDefaultAppPtrOutput{})
	pulumi.RegisterOutputType(ProjectEnvironmentOutput{})
	pulumi.RegisterOutputType(ProjectEnvironmentArrayOutput{})
	pulumi.RegisterOutputType(ProjectEnvironmentVariablesVariableOutput{})
	pulumi.RegisterOutputType(ProjectEnvironmentVariablesVariableArrayOutput{})
	pulumi.RegisterOutputType(ProjectGitCommentsOutput{})
	pulumi.RegisterOutputType(ProjectGitCommentsPtrOutput{})
	pulumi.RegisterOutputType(ProjectGitRepositoryOutput{})
	pulumi.RegisterOutputType(ProjectGitRepositoryPtrOutput{})
	pulumi.RegisterOutputType(ProjectGitRepositoryDeployHookOutput{})
	pulumi.RegisterOutputType(ProjectGitRepositoryDeployHookArrayOutput{})
	pulumi.RegisterOutputType(ProjectMembersMemberOutput{})
	pulumi.RegisterOutputType(ProjectMembersMemberArrayOutput{})
	pulumi.RegisterOutputType(ProjectOidcTokenConfigOutput{})
	pulumi.RegisterOutputType(ProjectOidcTokenConfigPtrOutput{})
	pulumi.RegisterOutputType(ProjectOptionsAllowlistOutput{})
	pulumi.RegisterOutputType(ProjectOptionsAllowlistPtrOutput{})
	pulumi.RegisterOutputType(ProjectOptionsAllowlistPathOutput{})
	pulumi.RegisterOutputType(ProjectOptionsAllowlistPathArrayOutput{})
	pulumi.RegisterOutputType(ProjectPasswordProtectionOutput{})
	pulumi.RegisterOutputType(ProjectPasswordProtectionPtrOutput{})
	pulumi.RegisterOutputType(ProjectResourceConfigOutput{})
	pulumi.RegisterOutputType(ProjectResourceConfigPtrOutput{})
	pulumi.RegisterOutputType(ProjectTrustedIpsOutput{})
	pulumi.RegisterOutputType(ProjectTrustedIpsPtrOutput{})
	pulumi.RegisterOutputType(ProjectTrustedIpsAddressOutput{})
	pulumi.RegisterOutputType(ProjectTrustedIpsAddressArrayOutput{})
	pulumi.RegisterOutputType(ProjectVercelAuthenticationOutput{})
	pulumi.RegisterOutputType(ProjectVercelAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(TeamConfigRemoteCachingOutput{})
	pulumi.RegisterOutputType(TeamConfigRemoteCachingPtrOutput{})
	pulumi.RegisterOutputType(TeamConfigSamlOutput{})
	pulumi.RegisterOutputType(TeamConfigSamlPtrOutput{})
	pulumi.RegisterOutputType(TeamConfigSamlRolesOutput{})
	pulumi.RegisterOutputType(TeamConfigSamlRolesMapOutput{})
	pulumi.RegisterOutputType(TeamMemberProjectOutput{})
	pulumi.RegisterOutputType(TeamMemberProjectArrayOutput{})
	pulumi.RegisterOutputType(GetCustomEnvironmentBranchTrackingOutput{})
	pulumi.RegisterOutputType(GetMicrofrontendGroupDefaultAppOutput{})
	pulumi.RegisterOutputType(GetProjectEnvironmentOutput{})
	pulumi.RegisterOutputType(GetProjectEnvironmentArrayOutput{})
	pulumi.RegisterOutputType(GetProjectGitCommentsOutput{})
	pulumi.RegisterOutputType(GetProjectGitRepositoryOutput{})
	pulumi.RegisterOutputType(GetProjectGitRepositoryDeployHookOutput{})
	pulumi.RegisterOutputType(GetProjectGitRepositoryDeployHookArrayOutput{})
	pulumi.RegisterOutputType(GetProjectMembersMemberOutput{})
	pulumi.RegisterOutputType(GetProjectMembersMemberArrayOutput{})
	pulumi.RegisterOutputType(GetProjectOidcTokenConfigOutput{})
	pulumi.RegisterOutputType(GetProjectOptionsAllowlistOutput{})
	pulumi.RegisterOutputType(GetProjectOptionsAllowlistPathOutput{})
	pulumi.RegisterOutputType(GetProjectOptionsAllowlistPathArrayOutput{})
	pulumi.RegisterOutputType(GetProjectPasswordProtectionOutput{})
	pulumi.RegisterOutputType(GetProjectResourceConfigOutput{})
	pulumi.RegisterOutputType(GetProjectTrustedIpsOutput{})
	pulumi.RegisterOutputType(GetProjectTrustedIpsAddressOutput{})
	pulumi.RegisterOutputType(GetProjectTrustedIpsAddressArrayOutput{})
	pulumi.RegisterOutputType(GetProjectVercelAuthenticationOutput{})
	pulumi.RegisterOutputType(GetTeamConfigRemoteCachingOutput{})
	pulumi.RegisterOutputType(GetTeamConfigSamlOutput{})
	pulumi.RegisterOutputType(GetTeamConfigSamlRolesOutput{})
	pulumi.RegisterOutputType(GetTeamConfigSamlRolesMapOutput{})
	pulumi.RegisterOutputType(GetTeamMemberProjectOutput{})
	pulumi.RegisterOutputType(GetTeamMemberProjectArrayOutput{})
}
