// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vercel

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-vercel/sdk/v3/go/vercel/internal"
)

// Provides a Project Deployment Retention datasource.
//
// A Project Deployment Retention datasource details information about Deployment Retention on a Vercel Project.
//
// For more detailed information, please see the [Vercel documentation](https://vercel.com/docs/security/deployment-retention).
func LookupProjectDeploymentRetention(ctx *pulumi.Context, args *LookupProjectDeploymentRetentionArgs, opts ...pulumi.InvokeOption) (*LookupProjectDeploymentRetentionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupProjectDeploymentRetentionResult
	err := ctx.Invoke("vercel:index/getProjectDeploymentRetention:getProjectDeploymentRetention", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProjectDeploymentRetention.
type LookupProjectDeploymentRetentionArgs struct {
	// The ID of the Project for the retention policy
	ProjectId string `pulumi:"projectId"`
	// The ID of the Vercel team.
	TeamId *string `pulumi:"teamId"`
}

// A collection of values returned by getProjectDeploymentRetention.
type LookupProjectDeploymentRetentionResult struct {
	// The retention period for canceled deployments.
	ExpirationCanceled string `pulumi:"expirationCanceled"`
	// The retention period for errored deployments.
	ExpirationErrored string `pulumi:"expirationErrored"`
	// The retention period for preview deployments.
	ExpirationPreview string `pulumi:"expirationPreview"`
	// The retention period for production deployments.
	ExpirationProduction string `pulumi:"expirationProduction"`
	// The ID of this resource.
	Id string `pulumi:"id"`
	// The ID of the Project for the retention policy
	ProjectId string `pulumi:"projectId"`
	// The ID of the Vercel team.
	TeamId string `pulumi:"teamId"`
}

func LookupProjectDeploymentRetentionOutput(ctx *pulumi.Context, args LookupProjectDeploymentRetentionOutputArgs, opts ...pulumi.InvokeOption) LookupProjectDeploymentRetentionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupProjectDeploymentRetentionResultOutput, error) {
			args := v.(LookupProjectDeploymentRetentionArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupProjectDeploymentRetentionResult
			secret, err := ctx.InvokePackageRaw("vercel:index/getProjectDeploymentRetention:getProjectDeploymentRetention", args, &rv, "", opts...)
			if err != nil {
				return LookupProjectDeploymentRetentionResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupProjectDeploymentRetentionResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupProjectDeploymentRetentionResultOutput), nil
			}
			return output, nil
		}).(LookupProjectDeploymentRetentionResultOutput)
}

// A collection of arguments for invoking getProjectDeploymentRetention.
type LookupProjectDeploymentRetentionOutputArgs struct {
	// The ID of the Project for the retention policy
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// The ID of the Vercel team.
	TeamId pulumi.StringPtrInput `pulumi:"teamId"`
}

func (LookupProjectDeploymentRetentionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProjectDeploymentRetentionArgs)(nil)).Elem()
}

// A collection of values returned by getProjectDeploymentRetention.
type LookupProjectDeploymentRetentionResultOutput struct{ *pulumi.OutputState }

func (LookupProjectDeploymentRetentionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProjectDeploymentRetentionResult)(nil)).Elem()
}

func (o LookupProjectDeploymentRetentionResultOutput) ToLookupProjectDeploymentRetentionResultOutput() LookupProjectDeploymentRetentionResultOutput {
	return o
}

func (o LookupProjectDeploymentRetentionResultOutput) ToLookupProjectDeploymentRetentionResultOutputWithContext(ctx context.Context) LookupProjectDeploymentRetentionResultOutput {
	return o
}

// The retention period for canceled deployments.
func (o LookupProjectDeploymentRetentionResultOutput) ExpirationCanceled() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectDeploymentRetentionResult) string { return v.ExpirationCanceled }).(pulumi.StringOutput)
}

// The retention period for errored deployments.
func (o LookupProjectDeploymentRetentionResultOutput) ExpirationErrored() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectDeploymentRetentionResult) string { return v.ExpirationErrored }).(pulumi.StringOutput)
}

// The retention period for preview deployments.
func (o LookupProjectDeploymentRetentionResultOutput) ExpirationPreview() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectDeploymentRetentionResult) string { return v.ExpirationPreview }).(pulumi.StringOutput)
}

// The retention period for production deployments.
func (o LookupProjectDeploymentRetentionResultOutput) ExpirationProduction() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectDeploymentRetentionResult) string { return v.ExpirationProduction }).(pulumi.StringOutput)
}

// The ID of this resource.
func (o LookupProjectDeploymentRetentionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectDeploymentRetentionResult) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the Project for the retention policy
func (o LookupProjectDeploymentRetentionResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectDeploymentRetentionResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The ID of the Vercel team.
func (o LookupProjectDeploymentRetentionResultOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectDeploymentRetentionResult) string { return v.TeamId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupProjectDeploymentRetentionResultOutput{})
}
