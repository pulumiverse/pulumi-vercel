// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vercel

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-vercel/sdk/v3/go/vercel/internal"
)

// Provides the value of an existing Edge Config Item.
//
// An Edge Config is a global data store that enables experimentation with feature flags, A/B testing, critical redirects, and more.
//
// An Edge Config Item is a value within an Edge Config.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-vercel/sdk/v3/go/vercel"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := vercel.LookupEdgeConfig(ctx, &vercel.LookupEdgeConfigArgs{
//				Id: "ecfg_xxxxxxxxxxxxxxxxxxxxxxxxxxxx",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			// Read a string item
//			_, err = vercel.LookupEdgeConfigItem(ctx, &vercel.LookupEdgeConfigItemArgs{
//				Id:  example.Id,
//				Key: "foobar",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			// Read a JSON item
//			_, err = vercel.LookupEdgeConfigItem(ctx, &vercel.LookupEdgeConfigItemArgs{
//				Id:  example.Id,
//				Key: "flags",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupEdgeConfigItem(ctx *pulumi.Context, args *LookupEdgeConfigItemArgs, opts ...pulumi.InvokeOption) (*LookupEdgeConfigItemResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupEdgeConfigItemResult
	err := ctx.Invoke("vercel:index/getEdgeConfigItem:getEdgeConfigItem", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEdgeConfigItem.
type LookupEdgeConfigItemArgs struct {
	// The ID of the Edge Config that the item should exist under.
	Id string `pulumi:"id"`
	// The name of the key you want to retrieve within your Edge Config.
	Key string `pulumi:"key"`
	// The ID of the team the Edge Config should exist under. Required when configuring a team resource if a default team has not been set in the provider.
	TeamId *string `pulumi:"teamId"`
}

// A collection of values returned by getEdgeConfigItem.
type LookupEdgeConfigItemResult struct {
	// The ID of the Edge Config that the item should exist under.
	Id string `pulumi:"id"`
	// The name of the key you want to retrieve within your Edge Config.
	Key string `pulumi:"key"`
	// The ID of the team the Edge Config should exist under. Required when configuring a team resource if a default team has not been set in the provider.
	TeamId string `pulumi:"teamId"`
	// The value assigned to the key (only set for string values).
	Value string `pulumi:"value"`
	// Structured JSON value (object/array/number/bool/null) assigned to the key.
	ValueJson interface{} `pulumi:"valueJson"`
}

func LookupEdgeConfigItemOutput(ctx *pulumi.Context, args LookupEdgeConfigItemOutputArgs, opts ...pulumi.InvokeOption) LookupEdgeConfigItemResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupEdgeConfigItemResultOutput, error) {
			args := v.(LookupEdgeConfigItemArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupEdgeConfigItemResult
			secret, err := ctx.InvokePackageRaw("vercel:index/getEdgeConfigItem:getEdgeConfigItem", args, &rv, "", opts...)
			if err != nil {
				return LookupEdgeConfigItemResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupEdgeConfigItemResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupEdgeConfigItemResultOutput), nil
			}
			return output, nil
		}).(LookupEdgeConfigItemResultOutput)
}

// A collection of arguments for invoking getEdgeConfigItem.
type LookupEdgeConfigItemOutputArgs struct {
	// The ID of the Edge Config that the item should exist under.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the key you want to retrieve within your Edge Config.
	Key pulumi.StringInput `pulumi:"key"`
	// The ID of the team the Edge Config should exist under. Required when configuring a team resource if a default team has not been set in the provider.
	TeamId pulumi.StringPtrInput `pulumi:"teamId"`
}

func (LookupEdgeConfigItemOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEdgeConfigItemArgs)(nil)).Elem()
}

// A collection of values returned by getEdgeConfigItem.
type LookupEdgeConfigItemResultOutput struct{ *pulumi.OutputState }

func (LookupEdgeConfigItemResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEdgeConfigItemResult)(nil)).Elem()
}

func (o LookupEdgeConfigItemResultOutput) ToLookupEdgeConfigItemResultOutput() LookupEdgeConfigItemResultOutput {
	return o
}

func (o LookupEdgeConfigItemResultOutput) ToLookupEdgeConfigItemResultOutputWithContext(ctx context.Context) LookupEdgeConfigItemResultOutput {
	return o
}

// The ID of the Edge Config that the item should exist under.
func (o LookupEdgeConfigItemResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEdgeConfigItemResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the key you want to retrieve within your Edge Config.
func (o LookupEdgeConfigItemResultOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEdgeConfigItemResult) string { return v.Key }).(pulumi.StringOutput)
}

// The ID of the team the Edge Config should exist under. Required when configuring a team resource if a default team has not been set in the provider.
func (o LookupEdgeConfigItemResultOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEdgeConfigItemResult) string { return v.TeamId }).(pulumi.StringOutput)
}

// The value assigned to the key (only set for string values).
func (o LookupEdgeConfigItemResultOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEdgeConfigItemResult) string { return v.Value }).(pulumi.StringOutput)
}

// Structured JSON value (object/array/number/bool/null) assigned to the key.
func (o LookupEdgeConfigItemResultOutput) ValueJson() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupEdgeConfigItemResult) interface{} { return v.ValueJson }).(pulumi.AnyOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEdgeConfigItemResultOutput{})
}
