// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vercel

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-vercel/sdk/v3/go/vercel/internal"
)

// Provides information about DSync groups for a team.
func GetDsyncGroups(ctx *pulumi.Context, args *GetDsyncGroupsArgs, opts ...pulumi.InvokeOption) (*GetDsyncGroupsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDsyncGroupsResult
	err := ctx.Invoke("vercel:index/getDsyncGroups:getDsyncGroups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDsyncGroups.
type GetDsyncGroupsArgs struct {
	// The ID of the team the Dsync Groups are associated to. Required when configuring a team resource if a default team has not been set in the provider.
	TeamId *string `pulumi:"teamId"`
}

// A collection of values returned by getDsyncGroups.
type GetDsyncGroupsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of DSync groups for the team.
	Lists []GetDsyncGroupsList `pulumi:"lists"`
	// A map of Identity Provider group names to their Vercel IDs. This can be used to look up the ID of a group by its name using the lookup function.
	Map map[string]string `pulumi:"map"`
	// The ID of the team the Dsync Groups are associated to. Required when configuring a team resource if a default team has not been set in the provider.
	TeamId string `pulumi:"teamId"`
}

func GetDsyncGroupsOutput(ctx *pulumi.Context, args GetDsyncGroupsOutputArgs, opts ...pulumi.InvokeOption) GetDsyncGroupsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDsyncGroupsResultOutput, error) {
			args := v.(GetDsyncGroupsArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetDsyncGroupsResult
			secret, err := ctx.InvokePackageRaw("vercel:index/getDsyncGroups:getDsyncGroups", args, &rv, "", opts...)
			if err != nil {
				return GetDsyncGroupsResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetDsyncGroupsResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetDsyncGroupsResultOutput), nil
			}
			return output, nil
		}).(GetDsyncGroupsResultOutput)
}

// A collection of arguments for invoking getDsyncGroups.
type GetDsyncGroupsOutputArgs struct {
	// The ID of the team the Dsync Groups are associated to. Required when configuring a team resource if a default team has not been set in the provider.
	TeamId pulumi.StringPtrInput `pulumi:"teamId"`
}

func (GetDsyncGroupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDsyncGroupsArgs)(nil)).Elem()
}

// A collection of values returned by getDsyncGroups.
type GetDsyncGroupsResultOutput struct{ *pulumi.OutputState }

func (GetDsyncGroupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDsyncGroupsResult)(nil)).Elem()
}

func (o GetDsyncGroupsResultOutput) ToGetDsyncGroupsResultOutput() GetDsyncGroupsResultOutput {
	return o
}

func (o GetDsyncGroupsResultOutput) ToGetDsyncGroupsResultOutputWithContext(ctx context.Context) GetDsyncGroupsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetDsyncGroupsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDsyncGroupsResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of DSync groups for the team.
func (o GetDsyncGroupsResultOutput) Lists() GetDsyncGroupsListArrayOutput {
	return o.ApplyT(func(v GetDsyncGroupsResult) []GetDsyncGroupsList { return v.Lists }).(GetDsyncGroupsListArrayOutput)
}

// A map of Identity Provider group names to their Vercel IDs. This can be used to look up the ID of a group by its name using the lookup function.
func (o GetDsyncGroupsResultOutput) Map() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetDsyncGroupsResult) map[string]string { return v.Map }).(pulumi.StringMapOutput)
}

// The ID of the team the Dsync Groups are associated to. Required when configuring a team resource if a default team has not been set in the provider.
func (o GetDsyncGroupsResultOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDsyncGroupsResult) string { return v.TeamId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDsyncGroupsResultOutput{})
}
